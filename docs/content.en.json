{"pages":[{"title":"'tag'","text":"","link":"/en/tags/"},{"title":"","text":"","link":"/en/404"}],"posts":[{"title":"Doll - The badge catcher","text":"Doll is a Mac app that help you catch up important messages!In macOS, It feels really great when you hide the Dock, open a full screen window and focus on your task. But we are not living in an ideal world, your teammates may need your help anytime, and when you are in focus mode, occasionally you just forgot to respond! Message apps like Mail, Slack and Microsoft Teams don’t even offer a menu bar icon at all, so if you’re working in a full screen window, or looking at another extra Monitor screen which can’t show the Dock, there is no way you will notice the unread messages! (Sorry the notification center did notice you, but they will soon dismiss after a short period, if you miss that, you miss the message) It would be great if we could put the icon and badge of these apps into the Menu bar, that way we can always easily notice new messages across screens, just like this: Doll?In my favor animation 《Darker than dark》, if a Contractor use his power and never willing to pay the cost, eventually he will lose control of his power, become an emotionless Doll. If we use too much focus power without paying the cost, what will we become &gt;&gt;__&lt;&lt;. InstallYou can download the latest dmg file from hereMinimum system requirement: macOS 11.0 (Big Sur) How to use?It’s simple, first you search and select the app you want to monitor: Then Doll will ask for your permission to use the Accessibility API: Please make sure you grant that permission to Doll.app otherwise nothing will be monitored! Done, you are all setup!Doll now will monitor all the badge update in the Dock, and sync the numbers into the menu bar! I want to monitor more apps!You get it for free! I want to change the Monitor appIf the monitored app is running, click on the menu bar icon will simply open that app. But if you want to change stuffs, just hold the “Option key(⌥)“ and click on the icon. Security concern about the permission?Never! Ever! Trust! Anybody! in Internet! Doll is open source, you are free to download, review, modify and compile your own version of the app, go ahead and happy coding~ How the app works?Doll utils the macOS Accessibility API, it will sync the latest badge text to menu bar from every Monitored app in the Dock element. Due to the limitation of Accessibility API(Can’t watch for element’s attribute value change), Doll has to sync badges by every second(Yep, the infamy Polling style). But don’t worry about the performance, after all the synchronization happens only 864000 times per day, and all it does is just read and set few element’s text, that’s an operation executed less than 1ms! If you found any potential Bug or Performance issue, feel free to submit a PR!","link":"/en/posts/doll-the-badge-catcher/"},{"title":"Bosswift - A command launcher for git users","text":"A troublesome thingAs a developer，have you ever had this experience? You are working on some feature development, your colleague Slack you and ask you why an on-live feature is behaving weirdly, he want you to help check the problem and reproduce it. You say ok, then you open Terminal, type bunch of commands: # Store your temporary worksgit stash -u# Switch to problematic branchgit checkout release/v1# Pull the latest changesgit pull# Install 3rd dependencies, setup runtimenpm install...# Run the project and try to address issuenpm run... This usually will take you couple minutes, and after the issue is resolved, you go back to work on your original task, by type these commands in Terminal: # Switch back to work branchgit checkout feature/in-development# Restore your temporary worksgit stash apply# Install 3rd dependencies, setup runtimenpm install...# Run the project and continue to worknpm run... This can happen multiple times in a day, not just to address a production issue, sometimes you also need to check different branch’s runtime behavior, so you need to switch &gt; build and run &gt; switch &gt; build and run… over and over. This doesn’t sound productive, what can we do about it? Well, imagine that if we could checkout multiple branch in same machine from a repo, every branch got it’s own worktree, by this way can we solve the problem? Yes we did! Git team apparently notice this problem too, start from git v2.5, multiple worktrees support is added, you can create multiple worktree copies from one repo, each worktree got it’s own branch, just like this： With git worktree，we don’t checkout branch anymore, instead we cd around worktrees，and also no need to stash/unstash anymore： The most important is, you don’t need to re-install 3rd dependencies constantly, because every worktree is stable if you don’t touch them! Also if we do it right, git worktree can help us make sure there is always a branch that can run anytime, you don’t need to worry about your in-development works impact other stable worktrees, sometime this is important. New solution always come with problemsgit worktree command got some pain points when using it： Too many keystrokes, when you create a new worktree, you need to specify it’s path, it’s branch name, I often make mistake on these arguments When you cd around worktrees, you often get lost Too many disk usage, because now every worktree got it’s own copy of 3rd dependencies(like node_modules) ✨✨✨ Bosswift ✨✨✨To solve these pain points come with use git worktree in command line way，Bosswift is born.Bosswift is a GUI app that integrated with git worktree deeply, it will help you manage worktrees without presure. Installation + SetupYou can download the latest release from here Some setups is required when you open Bosswift，the only important step is to specify where you put your working repos, so that Bosswift can monitor &amp; sync the worktree status with your repos: UsageAfter you done configuration, press Option + Space (Default) to open quick launch bar. Step 1, search &amp; pick a worktree，hit enter/tab to select it： Step 2. Search &amp; pick a command, hit enter to execute： Create new WorktreeWhen you need a new worktree, do this command: All you need is to input a branch name: It will take care these cases for you A local branch with same name exist：Switch new worktree to that branch. A same name branch exists in remote：Fetch that remote branch to local，create new worktree and switch to that branch. Totally new branch：Create new worktree with specified branch name. You could modify that command, add some steps like “Copy node_modules from original worktree“ to the end, to avoid re-install node modules in new worktree. Delete WorktreeWhe you no longer work on a worktree, you can save the disk usage by doing this command to delete the worktree： You could modify that command, add some steps like “Delete Xcode Derived Data folder“ to the end, to release disk space. Create custom commandsWhat kind of Boss you are if you can’t create your own command? I encourage you to write commands that suits your project and workflow, I don’t have that energy to provide you a fancy command editor, but I will give you my help as much as I can, there are some variables you can use when creating new command: For example, if I select feature branch of Doll Repo under path /Users/huikai/dev, here is all variable’s value: Name Means Value $BOSSWIFT_WORK_FOLDER Bosswift’s working folder /Users/huikai/dev $BOSSWIFT_PROJECT_NAME Repo’s folder name Doll $BOSSWIFT_BRANCH_NAME Selected branch’s name feature $BOSSWIFT_WORKTREE_PATH The folder path of current worktree /Users/huikai/dev/Bosswift_Work/Doll/feature $BOSSWIFT_DEFAULT_WORKTREE_PATH The folder path of repo’s main worktree /Users/huikai/dev/Doll $BOSSWIFT_XCODE_DERIVED_PATH Xcode Derived folder path for worktree (For Apple developers) /Users/huikai/Library/Developer/Xcode/DerivedData/Doll-cikiwqgnfwrbgzgebttnrazqigks $BOSSWIFT_XCODE_WORKSPACE_FILE xcworkspace file name inside worktree (For Apple developers) Doll.xcworkspace $BOSSWIFT_XCODE_PROJECT_FILE xcodeproj file name inside worktree (For Apple developers) Doll.xcodeproj DashboardYou can check running tasks in Dashboard: As an Universal command launcherSome command can be run from anywhere, and you always forgot how to type them, for example sometimes Xcode failed to recognize iPhone connected by usb cable, to fix that I need to restart usb service, but I never remember the command, I always need to copy it from google or Notes app. Now with Bosswift，you could put these commands into Universal Command： Type “/“ in quick launch box, then you can pick an Universal Command to run: As a temporary command launcherIf there’s not command match the keyword in quick launch box, you can hit enter and execute the keyword as command directly: Command line or GUI?To be honest, as a developer, I never get used to Terminal. I’m very careful when doing tasks in command line, I check my input over and over again to make sure I didn’t write to wrong file, delete the wrong folder, I’m rather slow on Terminal because these stresses… I love GUI, really. Proper designed GUI tools is master pice, easy to use and stress-free. But when it comes to automation, command line just…. kill GUI :). GUI isn’t design for automation tasks at the first place, you can’t never setup the automation workflow easily with GUI. Luckly, we don’t have to choice between them, we can have an application that include both Command line and GUI. This app can’t run without command line, the screen command is the core behind it(For dispatching tasks), and in order to manage running tasks, commands like ps, grep, pkill is necessary too, put all these commands with an easy to use GUI, we got Bosswift :P. Source codehttps://github.com/xiaogdgenuine/bosswift Disclaimer:When it comes to personal project, my code style is rather rough. I prefer do the damn thing first then see how it goes, if it works I will clear the code and re-architecture, if it’s not working I will keep rough style till it works. This Repo is currently full of ugly global variables, un-reasonable module separation and un-reliable assumptions about running environment.","link":"/en/posts/bosswift-the-programer-command-launcher/"},{"title":"Kedamanga Changelog","text":"Version 1.5.2:Features Image that can’t fit into the page will now be put inside a scroll view. Fixes Fix folder browser’s back button missing issue in iOS 16. Fix an issue that cause some azw3 files to render duplicated. Fix an issue that cause pinch gesture freeze the app. Version 1.5.1:Fixes Fix a bug that cause long comic image display in-position. Version 1.5.0：I’m very sorry about taking so long yet just release a bug fix version, I’m still working on premier version. For many reasons, I just can’t done anything in the right time frame, always keep postpone schedules. This year is definitely my toughest year so far, my dear father left me at a young age, 56. I still can’t believe this just happened. Anyway, life can be so suck, but one must fight back. I will try to release regular bugfix versions before premier version is ready (let’s try every 3 weeks first :)). If you sent any feedback email and didn’t get response from me, I owe you a sorry, I will start to respond some of feedback emails in next couple months. Fixes Fix a crash issue when you enable ‘image enhancement’ at iOS 16. Fix a crash &amp; white screen issue when open high resolution pictures, also improve the respond time when deal with high resolution pictures. Fix an issue that cause Mobi file to render duplicated page after reading about 1000 pages. Version 1.4.2Features A fresh new 「Open last/next」 manga modal. Now you can open last/next manga directly in progress slider. Fixes Fix a issue that cause the background music stopped when opening Kedamanga Version 1.4.1Fixes Fix 301 error when connect to some WebDAV servers. Fix keyboard shortcut not working in iOS 15 issue. Version 1.4.0Features Compatible with iPad mini6. Now you can browse directory content directly. Use same UI design for local Library and NAS server. RAR file now supports streaming reading too! You can now open a folder as a mangabook on NAS server. Press volume +, then volume - to open/hide private library. Fixes Improve book thumbnail loading speed. Fix 401 error when connect to some WebDAV servers. Fix keyboard shortcut not working in iOS 15 issue. Break Change Kedamanga now support iPad multitasking feature, you can use Kedamanga with other apps at the same time. But the cost is that you can’t lock the screen orientation directly inside Kedamanga, you have to lock the device orientation by system menu.","link":"/en/posts/kedamanga-changelog/"}],"tags":[{"name":"Doll","slug":"Doll","link":"/en/tags/Doll/"},{"name":"Menu bar","slug":"Menu-bar","link":"/en/tags/Menu-bar/"},{"name":"Productivity","slug":"Productivity","link":"/en/tags/Productivity/"},{"name":"Bosswift","slug":"Bosswift","link":"/en/tags/Bosswift/"},{"name":"Command Launcher","slug":"Command-Launcher","link":"/en/tags/Command-Launcher/"},{"name":"Git","slug":"Git","link":"/en/tags/Git/"},{"name":"Kedamanga","slug":"Kedamanga","link":"/en/tags/Kedamanga/"}],"categories":[{"name":"gallery","slug":"gallery","link":"/en/categories/gallery/"}]}