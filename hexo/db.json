{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/frame/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/frame/source/logo.png","path":"logo.png","modified":0,"renderable":1},{"_id":"themes/frame/source/profile_cover.png","path":"profile_cover.png","modified":0,"renderable":1},{"_id":"themes/frame/source/css/base.styl","path":"css/base.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/color.styl","path":"css/color.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/font.styl","path":"css/font.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/media.styl","path":"css/media.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/motion.styl","path":"css/motion.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/layout.styl","path":"css/layout.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/normalize.styl","path":"css/normalize.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/icon/arrow-left.svg","path":"icon/arrow-left.svg","modified":0,"renderable":1},{"_id":"themes/frame/source/icon/arrow-right.svg","path":"icon/arrow-right.svg","modified":0,"renderable":1},{"_id":"themes/frame/source/icon/arrow-up.svg","path":"icon/arrow-up.svg","modified":0,"renderable":1},{"_id":"themes/frame/source/icon/checkbox-checked.svg","path":"icon/checkbox-checked.svg","modified":0,"renderable":1},{"_id":"themes/frame/source/css/variable.styl","path":"css/variable.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/icon/marker.svg","path":"icon/marker.svg","modified":0,"renderable":1},{"_id":"themes/frame/source/icon/checkbox-default.svg","path":"icon/checkbox-default.svg","modified":0,"renderable":1},{"_id":"themes/frame/source/js/frame.js","path":"js/frame.js","modified":0,"renderable":1},{"_id":"themes/frame/source/css/color_mode/classic.styl","path":"css/color_mode/classic.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/color_mode/dark.styl","path":"css/color_mode/dark.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/component/component.styl","path":"css/component/component.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/component/icon.styl","path":"css/component/icon.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/ascetic.styl","path":"css/highlight/ascetic.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/brown-paper.styl","path":"css/highlight/brown-paper.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/dark.styl","path":"css/highlight/dark.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/darkula.styl","path":"css/highlight/darkula.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/color_mode/default.styl","path":"css/color_mode/default.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/foundation.styl","path":"css/highlight/foundation.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/github.styl","path":"css/highlight/github.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/googlecode.styl","path":"css/highlight/googlecode.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/idea.styl","path":"css/highlight/idea.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/github-gist.styl","path":"css/highlight/github-gist.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/rainbow.styl","path":"css/highlight/rainbow.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/solarized-light.styl","path":"css/highlight/solarized-light.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/solarized-dark.styl","path":"css/highlight/solarized-dark.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/school-book.styl","path":"css/highlight/school-book.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/tomorrow.styl","path":"css/highlight/tomorrow.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/zenburn.styl","path":"css/highlight/zenburn.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/vs.styl","path":"css/highlight/vs.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/highlight/xcode.styl","path":"css/highlight/xcode.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/partials/footer.styl","path":"css/partials/footer.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/partials/header.styl","path":"css/partials/header.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/partials/paginator.styl","path":"css/partials/paginator.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/partials/post_gallery.styl","path":"css/partials/post_gallery.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/partials/post_list.styl","path":"css/partials/post_list.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/partials/profile.styl","path":"css/partials/profile.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/post/code.styl","path":"css/post/code.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/post/media.styl","path":"css/post/media.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/post/post_footer.styl","path":"css/post/post_footer.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/post/post_content.styl","path":"css/post/post_content.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/post/post_head.styl","path":"css/post/post_head.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/post/table.styl","path":"css/post/table.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/post/tag_plugin.styl","path":"css/post/tag_plugin.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/post/post_comment.styl","path":"css/post/post_comment.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/css/post/task_list.styl","path":"css/post/task_list.styl","modified":0,"renderable":1},{"_id":"themes/frame/source/fonts/inter/Inter.ttf","path":"fonts/inter/Inter.ttf","modified":0,"renderable":1},{"_id":"themes/frame/source/fonts/roboto_mono/RobotoMono-Regular.ttf","path":"fonts/roboto_mono/RobotoMono-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/frame/source/fonts/roboto_mono/RobotoMono-VariableFont_wght.ttf","path":"fonts/roboto_mono/RobotoMono-VariableFont_wght.ttf","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"6a07c89c177c1f8802f28a07882be451a72df11b","modified":1653021035916},{"_id":"source/_posts/doll-the-badge-catcher.md","hash":"9fea85934dfc5d9f3278a16b07656882cc80b70e","modified":1653193960363},{"_id":"source/_posts/on-blog-launch.md","hash":"0461959264e32e4e4e0875f4ecaa23ebdd1ff4a3","modified":1653193958757},{"_id":"source/en/tags/index.md","hash":"547839ed65f34f43f7f663dd7a0950aa4b32df9b","modified":1653093638063},{"_id":"source/tags/index.md","hash":"547839ed65f34f43f7f663dd7a0950aa4b32df9b","modified":1653093660574},{"_id":"source/_posts/en/doll-the-badge-catcher.md","hash":"cb05911cf595be288c8f65dbb2cda78a163a1466","modified":1653235261184},{"_id":"source/_posts/to-papa.md","hash":"a33ad64cc1761b16b7b67279872e9823e7cf25b2","modified":1653193846069},{"_id":"themes/frame/.DS_Store","hash":"355775931f3a9e609849beee1016d18dcaee8854","modified":1652972540925},{"_id":"themes/frame/README-CN.md","hash":"49393a4c59920a544f7f156d3489e379833a03ac","modified":1652886009196},{"_id":"themes/frame/LICENSE","hash":"9a96e496379e53825a7715336da012bc67be1e43","modified":1652886009195},{"_id":"themes/frame/layout/archive.ejs","hash":"583f07a6cac1bab548d622323f3fe3333361bb87","modified":1652886009196},{"_id":"themes/frame/layout/category.ejs","hash":"c785bbb6ead7dd22456207dac63ca8abedfeb45c","modified":1652886009196},{"_id":"themes/frame/layout/index.ejs","hash":"f61ed1f06bedf00e1a6b5727ed4ee776ec89a7c0","modified":1652886009196},{"_id":"themes/frame/_config.yml","hash":"47538b3aebad3b34595733ba97d4dc22b59c7323","modified":1653224936507},{"_id":"themes/frame/layout/post.ejs","hash":"d783d0f15318f32893aac15701c9ea36bb5e8015","modified":1653228424784},{"_id":"themes/frame/layout/layout.ejs","hash":"ebc04caf2de483781d16568e3d1cc1a54f1846da","modified":1652886009196},{"_id":"themes/frame/layout/tag.ejs","hash":"33acdbb692434e661afad99dc60e138d7a60070d","modified":1653225477614},{"_id":"themes/frame/scripts/check.js","hash":"38f9797fefb665d4977a29bcd91b987602614e38","modified":1653228678009},{"_id":"themes/frame/scripts/config.js","hash":"30bb47a4b2514fba137b86bdd544832700c65c4c","modified":1653224587226},{"_id":"themes/frame/scripts/content.js","hash":"7e5ed4385bd5e4cf48554e4eef9cb8f55dbe5c77","modified":1653096594698},{"_id":"themes/frame/scripts/i18n.js","hash":"7025232d372ec375042e046a712170a26473da42","modified":1653231641273},{"_id":"themes/frame/_config.en.yml","hash":"bae056e52c1566c244fa0d407bad6b2159cefb38","modified":1653230685941},{"_id":"themes/frame/README.md","hash":"4335e3eb34d20371d80ce369bc1df0623e758f36","modified":1652886009196},{"_id":"themes/frame/_config.zh-cn.yml","hash":"cb141f941b21b249b784a25b022b91e31376b7a2","modified":1653230685941},{"_id":"themes/frame/layout/tags.ejs","hash":"ade3d77347614772029ced6096a946ce838e6a51","modified":1653096940909},{"_id":"themes/frame/source/profile_cover.png","hash":"b4ab9a536449f03657cedc5994838e26b2df3956","modified":1653230958793},{"_id":"themes/frame/lib/rfc5646.js","hash":"8ecf38d0ec7145720ea8e888da314131712770e8","modified":1653059585616},{"_id":"themes/frame/lib/i18n.js","hash":"4c90aa27420e0e2ff74f80e976fe146e96354f61","modified":1653059548606},{"_id":"themes/frame/languages/en.yml","hash":"65cd3b8401046e352f4cdee3274d0e3a0e8759c2","modified":1653196418041},{"_id":"themes/frame/source/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1652977685325},{"_id":"themes/frame/layout/pages/page_head.ejs","hash":"c1bb6fe69a13ea76df9cca768178dc84bc78435a","modified":1653261897910},{"_id":"themes/frame/layout/pages/profile.ejs","hash":"26f4e1848ca40e66a0fb25f0f37f81c8bb355dc9","modified":1653060677216},{"_id":"themes/frame/layout/partials/footer.ejs","hash":"db0aef246cb04d34ed940bfa3aa9432fbf05c41c","modified":1652886009197},{"_id":"themes/frame/layout/partials/head.ejs","hash":"3f7369c177af1cc947944742f83d04b927ee9cfe","modified":1653228497160},{"_id":"themes/frame/layout/partials/post_gallery.ejs","hash":"0e6623a256fdb28521deb6e955be384dbe92fa3f","modified":1653224746775},{"_id":"themes/frame/layout/partials/tag_cloud.ejs","hash":"89da9e2618bbb8b8ab79e8076174125607ed2c2b","modified":1653105710247},{"_id":"themes/frame/layout/partials/header.ejs","hash":"6cf894dc92e5abacfe8aac5728a72aa3ddb166e5","modified":1653231641273},{"_id":"themes/frame/languages/zh-CN.yml","hash":"8deb086156f53d6a70b9f9aea25843783c63c7a5","modified":1653021294767},{"_id":"themes/frame/layout/post/post_comment.ejs","hash":"679eeb01a82f658c11545e4109900024469f204c","modified":1653226416450},{"_id":"themes/frame/layout/post/post_content.ejs","hash":"4d66cc210e8863037876786ddf25ed358104040a","modified":1652886009204},{"_id":"themes/frame/layout/partials/paginator.ejs","hash":"f6062c90eec850ce1343af34b60c05d83e4cb2c7","modified":1652886009197},{"_id":"themes/frame/layout/partials/post_list.ejs","hash":"ed23100a6ab8403a2d2618c5079a717f9ebeff09","modified":1652886009198},{"_id":"themes/frame/source/favicon.ico","hash":"de6307398aa9146be9d1fe0fd9dce47fd4b2cefd","modified":1653230997231},{"_id":"themes/frame/source/logo.png","hash":"f06159b304c2c36f3c9f005ce311d2aadc0d5eda","modified":1652886009249},{"_id":"themes/frame/layout/post/post_footer.ejs","hash":"bc1699bb2d3d65b593ea9c03cb7b472e643e9adb","modified":1653196342821},{"_id":"themes/frame/source/css/color.styl","hash":"08a1550fa1c21640031380c5c74861a6ef7fc7d9","modified":1652886009205},{"_id":"themes/frame/source/css/base.styl","hash":"d16a809805e46028727202610d89efee83d0e25f","modified":1652886009205},{"_id":"themes/frame/source/css/font.styl","hash":"f8d63de4055d9188717c0e65457f8f67286ef204","modified":1652886009208},{"_id":"themes/frame/source/css/layout.styl","hash":"6fa1fdaa4a8609ef9219d3bf316d2bbe45abb1b2","modified":1652886009234},{"_id":"themes/frame/source/css/media.styl","hash":"1e820047600aa767b85bba51528c4a5ddd18f1bd","modified":1652886009234},{"_id":"themes/frame/layout/post/post_head.ejs","hash":"70009e47ba2b87f7eaf4ea7dd56d23184b8dd130","modified":1653224736129},{"_id":"themes/frame/source/css/normalize.styl","hash":"b3337320133b7a336db7033aa6bbe94b054c0b21","modified":1652886009235},{"_id":"themes/frame/source/css/motion.styl","hash":"12e337e0d5d28dcf17072b78fe23daad86dfb34a","modified":1652886009235},{"_id":"themes/frame/source/fonts/.DS_Store","hash":"a8713edec7dadd6d0b404ebd88d95e8233c30156","modified":1652886009237},{"_id":"themes/frame/source/css/style.styl","hash":"36963f32cef28bde41b5bb71ad7536e5a2537010","modified":1652886009237},{"_id":"themes/frame/source/icon/arrow-up.svg","hash":"7a1952a615fdfc34f46d5f56178a3d01defc549c","modified":1652886009248},{"_id":"themes/frame/source/css/variable.styl","hash":"99e7c60921830b63986112ed394d3b0988302a68","modified":1652886009237},{"_id":"themes/frame/source/icon/arrow-right.svg","hash":"f46700691e6b2b69464f741f72e0326f22e23a9f","modified":1652886009248},{"_id":"themes/frame/source/icon/marker.svg","hash":"a10697bb8e9dfc958df41210641e2b6c848b3f5c","modified":1652886009248},{"_id":"themes/frame/source/icon/checkbox-checked.svg","hash":"20c621febd93be17d83b836b02f32f8fc6fdf421","modified":1652886009248},{"_id":"themes/frame/source/icon/checkbox-default.svg","hash":"a6359bfa84c47466200c4031a905769e6f4d6b8a","modified":1652886009248},{"_id":"themes/frame/source/css/color_mode/classic.styl","hash":"97ecbd3490f34df995edef3552e0416d42503b58","modified":1652886009207},{"_id":"themes/frame/source/icon/arrow-left.svg","hash":"3e38bcddb00b70250dcc344d178523423069a531","modified":1652886009248},{"_id":"themes/frame/source/css/component/component.styl","hash":"8f3df00b2059bf7b54e6b935d4eaeef8729760f8","modified":1652886009208},{"_id":"themes/frame/source/js/frame.js","hash":"10d250daf19f7979cd08c261680bb68b848da483","modified":1652886009248},{"_id":"themes/frame/source/css/color_mode/dark.styl","hash":"34d315e2c2d13553190b383c5e57eca62f7440c2","modified":1652886009207},{"_id":"themes/frame/source/css/highlight/darkula.styl","hash":"9717efa9194837ba3fb4d762997d33075dcf8bfa","modified":1652886009212},{"_id":"themes/frame/source/css/highlight/dark.styl","hash":"f5e6e75958de59e87fc6be3a1668e870e20bc836","modified":1652886009212},{"_id":"themes/frame/source/css/highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1652886009208},{"_id":"themes/frame/source/css/highlight/brown-paper.styl","hash":"329b85ae9130a5587a6fb1c6f80396f9cca5ddc1","modified":1652886009208},{"_id":"themes/frame/source/css/component/icon.styl","hash":"5b5a050b059eee47ff1bd3486e7ed18613cdebf4","modified":1652886009208},{"_id":"themes/frame/source/css/highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1652886009212},{"_id":"themes/frame/source/css/highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1652886009233},{"_id":"themes/frame/source/css/highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1652886009232},{"_id":"themes/frame/source/css/highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1652886009232},{"_id":"themes/frame/source/css/color_mode/default.styl","hash":"9e9fd6070c014513829ff135f9e4ab83ad5eaf32","modified":1652886009207},{"_id":"themes/frame/source/css/highlight/solarized-dark.styl","hash":"90c9da5aa594383697e5b18892a7f95beb053f55","modified":1652886009234},{"_id":"themes/frame/source/css/highlight/solarized-light.styl","hash":"fc80869f1eb7ebb29c570d70ec9adbec061acf8d","modified":1652886009234},{"_id":"themes/frame/source/css/highlight/rainbow.styl","hash":"c0cf97aae3e10fdcd10414547a711c9effbc39b8","modified":1652886009233},{"_id":"themes/frame/source/css/highlight/school-book.styl","hash":"beabbbcc7930f8de19159381a01c0ba41dc2291f","modified":1652886009233},{"_id":"themes/frame/source/css/highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1652886009234},{"_id":"themes/frame/source/css/highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1652886009234},{"_id":"themes/frame/source/css/highlight/zenburn.styl","hash":"68ff9332ccc03f9389b15b713415cde016f8088f","modified":1652886009234},{"_id":"themes/frame/source/css/highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1652886009234},{"_id":"themes/frame/source/css/partials/footer.styl","hash":"dd5f5b70254d279e85170a3493fda34454567261","modified":1652886009235},{"_id":"themes/frame/source/css/highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1652886009233},{"_id":"themes/frame/source/css/partials/paginator.styl","hash":"5327d02e03a374519c68c346f0eda9135d70e463","modified":1652886009235},{"_id":"themes/frame/source/css/partials/post_list.styl","hash":"7805f6b924a1048b62990ce511b7eddfe073fe8a","modified":1652886009235},{"_id":"themes/frame/source/css/post/code.styl","hash":"8f5f10563062fd4503907f7a49a12dff4f387a3b","modified":1652886009236},{"_id":"themes/frame/source/css/partials/header.styl","hash":"2d70ccda98cbd0dd432fbdcfc496e888958ff6b9","modified":1652886009235},{"_id":"themes/frame/source/css/partials/profile.styl","hash":"dcf7af4839e8f849053b089b55eb3e3d52de6e88","modified":1652886009236},{"_id":"themes/frame/source/css/post/post_footer.styl","hash":"4cb3d7bfd6f56af13c22631981eaaec23d8740ee","modified":1652886009236},{"_id":"themes/frame/source/css/post/media.styl","hash":"1c78bdf466ea4fc71ead183035816474465ce155","modified":1652886009236},{"_id":"themes/frame/source/css/post/post_content.styl","hash":"7e67044b35ec4ae80b5c963c4c6f6b4041f79f19","modified":1652886009236},{"_id":"themes/frame/source/css/partials/post_gallery.styl","hash":"94a366e946db99f57b1512a1b5f724e9b69e9660","modified":1652886009235},{"_id":"themes/frame/source/css/post/post_head.styl","hash":"7632881952919e814cc27260fd6662dc7adb527c","modified":1652886009236},{"_id":"themes/frame/source/css/post/table.styl","hash":"49f881077b6a78ae9da9e6756a0287cecc9f0976","modified":1657471030710},{"_id":"themes/frame/source/css/post/post_comment.styl","hash":"802fa34c45d206f8ded99e1a6f3f6d6d8a173e69","modified":1652886009236},{"_id":"themes/frame/source/css/post/tag_plugin.styl","hash":"8ed0be2ad2ac96103fc95cd4cbea3ba9e0bde000","modified":1652886009237},{"_id":"themes/frame/source/css/post/task_list.styl","hash":"0f176ec8a9987f1a5fe41005b5ee56206d656fd2","modified":1652886009237},{"_id":"themes/frame/source/fonts/roboto_mono/RobotoMono-Regular.ttf","hash":"8b91c38b4beb70b8b39a1f7cb601fc1f426a9af8","modified":1652886009247},{"_id":"themes/frame/source/fonts/roboto_mono/RobotoMono-VariableFont_wght.ttf","hash":"2094dc3e76a8e206c081e5ad494226caa4eaa81f","modified":1652886009247},{"_id":"themes/frame/source/fonts/inter/Inter.ttf","hash":"62349d6842fa9aa327596276c9f94c2439dd41f5","modified":1652886009245},{"_id":"public/content.json","hash":"26cd6d2ed6455dc63c973f8ccaaff71fedb10b81","modified":1707744898839},{"_id":"public/content.en.json","hash":"f735a5b31b399e7b3ed4064fbbe921c320530a2e","modified":1707744898839},{"_id":"public/categories/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653227569559},{"_id":"public/en/categories/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653231840212},{"_id":"public/en/tags/index.html","hash":"291e66903715c4842c38a96c95b80e4f228610c0","modified":1707642420858},{"_id":"public/tags/index.html","hash":"692c33af421762b7ff551eddac8a83e10c2fd74f","modified":1663420218091},{"_id":"public/en/posts/doll-the-badge-catcher/index.html","hash":"b82e362cacf4d614b4074644ca26d4720d195fdd","modified":1657519786363},{"_id":"public/index.html","hash":"a83e5716bdac1cc65f2978ac435cc4e40c8f7123","modified":1653231840212},{"_id":"public/en/index.html","hash":"7e433afb45cd49a13f64268abc7d6a3ec9dff88e","modified":1653231840212},{"_id":"public/posts/on-blog-launch/index.html","hash":"57c805d56eab1c4309205c5f067706dc51f86210","modified":1657519786363},{"_id":"public/categories/gallery/index.html","hash":"3ada357cb4001529527750892b80542bfc672cb3","modified":1657519786363},{"_id":"public/categories/人生/index.html","hash":"edba37e86d023e0f6f0eb9eee6bdcf3fef89387a","modified":1653231840212},{"_id":"public/en/categories/gallery/index.html","hash":"bb37e634ba60f8b8e8c0ece5120a30357dcd2412","modified":1657519786363},{"_id":"public/archives/index.html","hash":"72836be65586f598af2847027a45080ec324cf3d","modified":1698240959731},{"_id":"public/archives/2022/index.html","hash":"1d68e1d36ddd50f34c82e7194610e13feb64fcdc","modified":1698240959731},{"_id":"public/archives/2022/01/index.html","hash":"3a36fc4499a3e2525062496aaad100206275f5cd","modified":1653231840212},{"_id":"public/archives/2022/05/index.html","hash":"b89be7a832ff57bbdaf9be8b37b58c8deaf3423d","modified":1653231840212},{"_id":"public/en/archives/index.html","hash":"9e687f4600261e50a05e4a58cf32928f232fbd42","modified":1707642420858},{"_id":"public/en/archives/2022/index.html","hash":"1ef4703f684abdaca848ecf078de430901d639e7","modified":1698240959731},{"_id":"public/tags/Flag/index.html","hash":"2459310c7121bd666ae3192e4b234b193be59b6b","modified":1653231840212},{"_id":"public/en/archives/2022/01/index.html","hash":"03ff13e21c8c1064376b67dd2b428dbfe495a364","modified":1653231840212},{"_id":"public/tags/Life/index.html","hash":"f57bd306b13d24771de51131aacaec03db346161","modified":1653231840212},{"_id":"public/tags/Doll/index.html","hash":"a7475076d04f43aeed1104d0b2e4899704908d31","modified":1653231840212},{"_id":"public/tags/Menu-bar/index.html","hash":"1a17ca638b0bb3f512eb6f167569ae28e890395b","modified":1653231840212},{"_id":"public/tags/Productivity/index.html","hash":"f19549554909924ee8198b5ac1643413554c772f","modified":1657519786363},{"_id":"public/en/tags/Doll/index.html","hash":"5a7932346c82411710d49f4d21adb07b576a357a","modified":1653231840212},{"_id":"public/en/tags/Menu-bar/index.html","hash":"c097f6a51443b62c1a63857022d84a94b852c7fd","modified":1653231840212},{"_id":"public/en/tags/Productivity/index.html","hash":"d23460a03b8be9a9ab3f9672c575597285ce2875","modified":1657519786363},{"_id":"public/posts/to-papa/index.html","hash":"3d6e72ecc606b41d96e030d6028f81a2716cec87","modified":1653231840212},{"_id":"public/posts/doll-the-badge-catcher/index.html","hash":"430a6d48b60fb6c4adfead7feca1cb845c1bca35","modified":1653231840212},{"_id":"public/logo.png","hash":"f06159b304c2c36f3c9f005ce311d2aadc0d5eda","modified":1653227569559},{"_id":"public/profile_cover.png","hash":"b4ab9a536449f03657cedc5994838e26b2df3956","modified":1653227569559},{"_id":"public/icon/arrow-left.svg","hash":"3e38bcddb00b70250dcc344d178523423069a531","modified":1653227569559},{"_id":"public/icon/arrow-right.svg","hash":"f46700691e6b2b69464f741f72e0326f22e23a9f","modified":1653227569559},{"_id":"public/icon/arrow-up.svg","hash":"7a1952a615fdfc34f46d5f56178a3d01defc549c","modified":1653227569559},{"_id":"public/icon/checkbox-checked.svg","hash":"20c621febd93be17d83b836b02f32f8fc6fdf421","modified":1653227569559},{"_id":"public/icon/checkbox-default.svg","hash":"a6359bfa84c47466200c4031a905769e6f4d6b8a","modified":1653227569559},{"_id":"public/icon/marker.svg","hash":"a10697bb8e9dfc958df41210641e2b6c848b3f5c","modified":1653227569559},{"_id":"public/favicon.ico","hash":"de6307398aa9146be9d1fe0fd9dce47fd4b2cefd","modified":1653227569559},{"_id":"public/fonts/roboto_mono/RobotoMono-Regular.ttf","hash":"8b91c38b4beb70b8b39a1f7cb601fc1f426a9af8","modified":1653227569559},{"_id":"public/css/color.css","hash":"e991cf9b111c3bf538573ebb02a98eab498f26ce","modified":1653227569559},{"_id":"public/css/font.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653227569559},{"_id":"public/css/media.css","hash":"3144eb379cbe4d1f6666df8104b7f18c1ef06b38","modified":1653227569559},{"_id":"public/css/layout.css","hash":"822ffcfa7513ccf8a2f3fb5164bc2c37a350ec93","modified":1653227569559},{"_id":"public/css/motion.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653227569559},{"_id":"public/css/base.css","hash":"9bc390a8fe6feda40e6df5f7d907e1767be0b891","modified":1653227569559},{"_id":"public/css/variable.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653227569559},{"_id":"public/css/normalize.css","hash":"2d4b663b6a4c68295b6ba240fa2dd9fb3863093c","modified":1653227569559},{"_id":"public/css/color_mode/classic.css","hash":"e991cf9b111c3bf538573ebb02a98eab498f26ce","modified":1653227569559},{"_id":"public/css/color_mode/dark.css","hash":"d51b861524bd38d2344cfe7ffccf205987326410","modified":1653227569559},{"_id":"public/css/component/icon.css","hash":"8712092799d296b174973c7878b1c74874ac2e88","modified":1653227569559},{"_id":"public/css/highlight/ascetic.css","hash":"a06999984d511a2a1394a1c98e8d9361eb1ae65c","modified":1653227569559},{"_id":"public/js/frame.js","hash":"10d250daf19f7979cd08c261680bb68b848da483","modified":1653227569559},{"_id":"public/css/highlight/foundation.css","hash":"d922414db28c12f9e8d8156676883c250b7538f0","modified":1653227569559},{"_id":"public/css/component/component.css","hash":"6c51e644f79c4cb472ac59d68095ffa5cf0b226a","modified":1653227569559},{"_id":"public/css/highlight/github.css","hash":"20ad0faf49fa0f989b09abd7b51785c6341051b0","modified":1653227569559},{"_id":"public/css/highlight/brown-paper.css","hash":"4967ca23f5465a40972eff5b853809a12706f71d","modified":1653227569559},{"_id":"public/css/highlight/googlecode.css","hash":"b2baebd4ffb36110c716531e94be914180fc9caf","modified":1653227569559},{"_id":"public/css/highlight/idea.css","hash":"27647e73ac75f98d1519825011fe19d63ab19f1a","modified":1653227569559},{"_id":"public/css/highlight/github-gist.css","hash":"f8714f28f71206ebe8dd1a61d178bc1052f9246c","modified":1653227569559},{"_id":"public/css/color_mode/default.css","hash":"e991cf9b111c3bf538573ebb02a98eab498f26ce","modified":1653227569559},{"_id":"public/css/highlight/dark.css","hash":"aa5ea7d787478548136b3bbfca571f408e3b83de","modified":1653227569559},{"_id":"public/css/highlight/darkula.css","hash":"d9ec2b3c225cf97a3106fef780a013da5863351d","modified":1653227569559},{"_id":"public/css/highlight/rainbow.css","hash":"4ec8bede7a0b77958c95536d76d2084f15031d79","modified":1653227569559},{"_id":"public/css/highlight/solarized-dark.css","hash":"9864f120d9e4c17d332974063cd6b158204cd8e1","modified":1653227569559},{"_id":"public/css/highlight/solarized-light.css","hash":"a52da02d0b3610e068bb21aee6a55b8288f7b83a","modified":1653227569559},{"_id":"public/css/highlight/tomorrow.css","hash":"914507e95eefdc343445066c2084df60b04cfb1e","modified":1653227569559},{"_id":"public/css/highlight/zenburn.css","hash":"d0be7e39f26b55e4012144f8724c34985ff3212d","modified":1653227569559},{"_id":"public/css/highlight/vs.css","hash":"4bc7118cbf33a476208489caef118abbb40c9020","modified":1653227569559},{"_id":"public/css/highlight/xcode.css","hash":"4cc639d46ca5e7d8ca7860e1319b50b47a59ff23","modified":1653227569559},{"_id":"public/css/partials/footer.css","hash":"d1dfd7bd071085af8d4e80f70648b83112c287d1","modified":1653227569559},{"_id":"public/css/highlight/school-book.css","hash":"886980d440f173c96d257817257591c084b049c5","modified":1653227569559},{"_id":"public/css/partials/header.css","hash":"9418e2e0ce38edc4172a3df4f5cd2291693231d8","modified":1653227569559},{"_id":"public/css/partials/paginator.css","hash":"a240b9e4fc2b46f2cf4465c21805e594eadadd18","modified":1653227569559},{"_id":"public/css/partials/post_gallery.css","hash":"68e15fcd0dee015577207ca4d3c5976e10ce704b","modified":1653227569559},{"_id":"public/css/post/code.css","hash":"d6c0ca745b227758cc866d8abbae4e8bb1dd62a6","modified":1653227569559},{"_id":"public/css/partials/profile.css","hash":"f1d000f5cb5d63ba6ecce3c6125f9bb759e35c00","modified":1653227569559},{"_id":"public/css/post/post_head.css","hash":"bec000cd9916923a8d9796e3035fbba00f841c62","modified":1653227569559},{"_id":"public/css/post/post_content.css","hash":"067b56302dabd1453fc83f5557986e333e7c1d8c","modified":1653227569559},{"_id":"public/css/post/table.css","hash":"85cf601b8e4edffee02f6a4d33be417a366ff0f8","modified":1653227569559},{"_id":"public/css/post/post_footer.css","hash":"d0758b9a0940a796324b37dd8a4f1bef55dd8e91","modified":1653227569559},{"_id":"public/css/partials/post_list.css","hash":"da9c93a05e009188815e7c394e1fcff4e9b10722","modified":1653227569559},{"_id":"public/css/post/tag_plugin.css","hash":"d970523561929959648ccd6cb79dc3af1161fbd1","modified":1653227569559},{"_id":"public/css/post/media.css","hash":"60cfd57533bf5105853bd7adb91866385d1eca43","modified":1653227569559},{"_id":"public/css/post/post_comment.css","hash":"9310f53d17d2c369f03d0cab980688847aed0078","modified":1653227569559},{"_id":"public/css/post/task_list.css","hash":"e2763e10a606771345ed27e208f41a972c5d591f","modified":1653227569559},{"_id":"public/css/style.css","hash":"8e18e57087977cf41b8025808e0125470921c44b","modified":1653227569559},{"_id":"public/fonts/roboto_mono/RobotoMono-VariableFont_wght.ttf","hash":"2094dc3e76a8e206c081e5ad494226caa4eaa81f","modified":1653227569559},{"_id":"public/fonts/inter/Inter.ttf","hash":"62349d6842fa9aa327596276c9f94c2439dd41f5","modified":1653227569559},{"_id":"themes/frame/languages/zh-cn.yml","hash":"7a4bfe081ebb07598668bdc91e37501c1e065ac7","modified":1653196404631},{"_id":"source/404/404.md","hash":"19cec9cde7323e894ccd0bbf0425963f5e9b94b7","modified":1653260631826},{"_id":"source/en/404/404.md","hash":"d1065b87c459bad802689d93c2f95cd42d7ddaeb","modified":1653260631825},{"_id":"source/en/404/index.md","hash":"4ebd335b48ff383184ea46e719c0a82bbc277c34","modified":1653262603393},{"_id":"source/404/index.md","hash":"9ae566de3bd90d012fbe635f476cc2f06973095d","modified":1653262603393},{"_id":"public/404/index.html","hash":"f7fd69f78b3621e6d63d38d2bcc99c1972265f84","modified":1653261941858},{"_id":"public/en/404/index.html","hash":"b2585eb4c02a44101ac539fc7ae6fae1d3d67941","modified":1653261941858},{"_id":"public/404.html","hash":"724422436fd53488f645ec55ef75601a6470edb0","modified":1653262606503},{"_id":"public/en/404.html","hash":"10b5a73473b8b440f5dc8fceebc6f1bd58b9a0d9","modified":1653262606503},{"_id":"source/_posts/en/make-grid-multiple-selectable-in-swiftUI.md","hash":"9c25da84db45b9de58bf6f5ee600a6b654c1983b","modified":1657428481818},{"_id":"source/_posts/bosswift-the-programer-command-launcher.md","hash":"fb827cf3773da71be9a529f0b63331993f68d4d7","modified":1657531933762},{"_id":"source/_posts/en/bosswift-the-programer-command-launcher.md","hash":"25f6fd95cf1526a9b38a3c55cc43a08061a6f1c5","modified":1657541337853},{"_id":"public/en/posts/make-grid-multiple-selectable-in-swiftUI/index.html","hash":"ce902b7937cab661f1307762c5e3d936f9672536","modified":1657519786363},{"_id":"public/archives/2022/07/index.html","hash":"d515fea5b6aebe2fe2eeee277940d69870f1c834","modified":1657519786363},{"_id":"public/en/archives/2022/07/index.html","hash":"e85197067c377b38f6c95a484b066ea8b3e2d96c","modified":1657519786363},{"_id":"public/tags/Bosswift/index.html","hash":"d4020f4156e5e8092fc66f750da9fdef0feacd08","modified":1657519786363},{"_id":"public/tags/Command-Launcher/index.html","hash":"18ca48db7c1074bf07f7d7c53b6ee4e6ca545599","modified":1657519786363},{"_id":"public/en/tags/Bosswift/index.html","hash":"c1557627112f3aeb7f33dd0b4e3754cef79285b7","modified":1657519786363},{"_id":"public/en/tags/Command-Launcher/index.html","hash":"e569e019035160029c743b1e9236ae65266bcbbf","modified":1657519786363},{"_id":"public/en/tags/Git/index.html","hash":"29d0c75f5f4da611bb50ff20664b17bebe351236","modified":1657519786363},{"_id":"public/tags/Git/index.html","hash":"61f085ec212afe4fc4d33741372954edb7c804e0","modified":1657519786363},{"_id":"public/posts/bosswift-the-programer-command-launcher/index.html","hash":"9540f8fa305d08ccefa46ad5f69b4ac8b1670f27","modified":1663420218091},{"_id":"public/en/posts/bosswift-the-programer-command-launcher/index.html","hash":"d7c231c76ea517c6a9f5ac0eb42ba71c45ae591e","modified":1663420218091},{"_id":"source/_posts/kedamanga-changelog.md","hash":"7cc4749957e3f4a3b50ddc8072cbf1a60515c3dd","modified":1707744679804},{"_id":"source/_posts/en/kedamanga-changelog.md","hash":"1e742eaeccc8d9cb35a460c0b4b3a6b651fbb3ca","modified":1707744891852},{"_id":"public/posts/kedamanga-changelog/index.html","hash":"a11a559ba22ec2ea40c232156291d1e09bc2ead2","modified":1707744898839},{"_id":"public/en/posts/kedamanga-changelog/index.html","hash":"7e30a76debc2585710599a4b794cf16ebc98b829","modified":1707744898839},{"_id":"public/archives/2022/09/index.html","hash":"0ef6b456e2a4f64ba781a05f7f174ad85d6906e1","modified":1663420218091},{"_id":"public/en/archives/2022/09/index.html","hash":"70154db722cf387aa5908324985c8022258c781e","modified":1663420218091},{"_id":"public/tags/Kedamanga/index.html","hash":"51fa661ec0ed379c5fabe589b6c5765962e56a84","modified":1698240959731},{"_id":"public/tags/可达漫画/index.html","hash":"f308bc0291b092e77b6087bc75f359cbd3557dde","modified":1698240959731},{"_id":"public/en/tags/Kedamanga/index.html","hash":"6307ac202da0bba3dc12498fb95efb8bbc143bbb","modified":1698240959731},{"_id":"public/archives/2023/10/index.html","hash":"8706d89342abd6a1edf2f1fb6b7f1092c77e4956","modified":1698240959731},{"_id":"public/en/archives/2023/index.html","hash":"92aed3a5ac95c567c20794872d6d6620d4eb4eac","modified":1698240959731},{"_id":"public/en/archives/2023/10/index.html","hash":"d95fc22ffcf22232ce994214154c859741e26732","modified":1698240959731},{"_id":"public/archives/2023/index.html","hash":"a133aa2f24ff7770f6d2cc5ff7e20bc473d933e2","modified":1698240959731},{"_id":"source/_posts/en/kedamanga-support.md","hash":"6340b25a0e9c373ec6036ed6606d4edcfd1e1aa0","modified":1707642413867},{"_id":"public/en/posts/kedamanga-support/index.html","hash":"895784ed7aa56f3b553d16edb3271fd5f3848d43","modified":1707744898839},{"_id":"public/en/archives/2024/index.html","hash":"a0e91c1a917780812c423a62df1be36415e04bdc","modified":1707642420858},{"_id":"public/en/archives/2024/02/index.html","hash":"3121fe917afbced05d0278fbd1c56071f18327e9","modified":1707642420858},{"_id":"public/en/tags/Kedamanga-KedaReader/index.html","hash":"38361d027fe615ef5bc3ddbf0768b336016cb470","modified":1707642420858}],"Category":[{"name":"人生","_id":"cl3gtogs400070xur6zst1ori"},{"name":"gallery","_id":"cl3gtogs5000a0xurh16c4zkx"}],"Data":[],"Page":[{"title":"'tag'","layout":"tag","_content":"","source":"tags/index.md","raw":"---\ntitle: '''tag'''\nlayout: tag\n---","date":"2022-05-21T00:41:00.574Z","updated":"2022-05-21T00:41:00.574Z","path":"tags/index.html","comments":1,"_id":"cl3gtogrz00000xur89jpee66","content":"","site":{"data":{}},"_tags":[],"_categories":[],"excerpt":"","more":""},{"title":"'tag'","layout":"tag","_content":"","source":"en/tags/index.md","raw":"---\ntitle: '''tag'''\nlayout: tag\n---","date":"2022-05-21T00:40:56.286Z","updated":"2022-05-21T00:40:38.063Z","path":"en/tags/index.html","comments":1,"_id":"cl3gtogs200020xur6wfohjkd","content":"","site":{"data":{}},"_tags":[],"lang":"en","_categories":[],"excerpt":"","more":""},{"title":"","date":"2022-05-22T23:04:34.000Z","_content":"\n![Not-found](https://s2.loli.net/2022/05/23/YsDpfeyc7bJlOij.gif)","source":"404/index.md","raw":"---\ntitle: \ndate: 2022-05-23 07:04:34\npermalink: /404.html\n---\n\n![Not-found](https://s2.loli.net/2022/05/23/YsDpfeyc7bJlOij.gif)","updated":"2022-05-22T23:36:43.393Z","path":"/404.html","_id":"cl3hwrmw00000qhur75dchn1o","comments":1,"layout":"page","content":"<p><img src=\"https://s2.loli.net/2022/05/23/YsDpfeyc7bJlOij.gif\" alt=\"Not-found\"></p>\n","site":{"data":{}},"_tags":[],"excerpt":"","more":"<p><img src=\"https://s2.loli.net/2022/05/23/YsDpfeyc7bJlOij.gif\" alt=\"Not-found\"></p>\n"},{"title":"","date":"2022-05-22T23:04:34.000Z","_content":"\n![Not-found](https://s2.loli.net/2022/05/23/YsDpfeyc7bJlOij.gif)","source":"en/404/index.md","raw":"---\ntitle: \ndate: 2022-05-23 07:04:34\npermalink: /en/404.html\n---\n\n![Not-found](https://s2.loli.net/2022/05/23/YsDpfeyc7bJlOij.gif)","updated":"2022-05-22T23:36:43.393Z","path":"/en/404.html","_id":"cl3hwrmw10001qhur3tzv0mx8","comments":1,"layout":"page","content":"<p><img src=\"https://s2.loli.net/2022/05/23/YsDpfeyc7bJlOij.gif\" alt=\"Not-found\"></p>\n","site":{"data":{}},"_tags":[],"excerpt":"","more":"<p><img src=\"https://s2.loli.net/2022/05/23/YsDpfeyc7bJlOij.gif\" alt=\"Not-found\"></p>\n"}],"Post":[{"title":"博客开始营业","date":"2022-05-19T15:20:05.000Z","_content":"\n马马虎虎地也算做了很久的程序员了（或许也没那么久。\n\n近来愈发觉得有个能自说自话的地方，对磨练自己表达能力大有裨益，于是这个小博客就开张了。\n\n2019 年开始就慢慢从 Web 前端转 iOS 开发了，目前进展还不错，不知道从什么内容写起，就先从分享一些 SwiftUI 的实践和技巧开始吧。","source":"_posts/on-blog-launch.md","raw":"---\ntitle: 博客开始营业\ndate: 2022-05-19 23:20:05\ntags:\n- Flag\n---\n\n马马虎虎地也算做了很久的程序员了（或许也没那么久。\n\n近来愈发觉得有个能自说自话的地方，对磨练自己表达能力大有裨益，于是这个小博客就开张了。\n\n2019 年开始就慢慢从 Web 前端转 iOS 开发了，目前进展还不错，不知道从什么内容写起，就先从分享一些 SwiftUI 的实践和技巧开始吧。","slug":"on-blog-launch","published":1,"updated":"2022-05-22T04:32:38.757Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3gtogs000010xur2axk66u1","content":"<p>马马虎虎地也算做了很久的程序员了（或许也没那么久。</p>\n<p>近来愈发觉得有个能自说自话的地方，对磨练自己表达能力大有裨益，于是这个小博客就开张了。</p>\n<p>2019 年开始就慢慢从 Web 前端转 iOS 开发了，目前进展还不错，不知道从什么内容写起，就先从分享一些 SwiftUI 的实践和技巧开始吧。</p>\n","site":{"data":{}},"_tags":[],"_categories":[],"excerpt":"","more":"<p>马马虎虎地也算做了很久的程序员了（或许也没那么久。</p>\n<p>近来愈发觉得有个能自说自话的地方，对磨练自己表达能力大有裨益，于是这个小博客就开张了。</p>\n<p>2019 年开始就慢慢从 Web 前端转 iOS 开发了，目前进展还不错，不知道从什么内容写起，就先从分享一些 SwiftUI 的实践和技巧开始吧。</p>\n"},{"title":"纪念我的爸爸。","date":"2022-01-10T16:00:00.000Z","featured_image":"https://s2.loli.net/2022/05/19/ynQPmzBY5j8fqGS.jpg","_content":"\n2022 年 1 月 10 日，腊月初八，爸爸走了，享年 56 岁。\n\n# 时间，就非要这么快吗？\n「**BB一个啊呜Check-in**」，这是以前同事霞姐的女儿跟我瞎玩的时候随口编给我的名字，虽然没什么意义但我就是记住了，现在想想这个名字挺有哲学意义的。\n\n世上所有人都是某时某刻，「**小 BB 一个，啊呜着 Check-in 到这世界**」，问题是老天爷从不跟你商量什么时候你会 Check-out。\n\n10 月底的时候，从接到爸爸确诊肝癌的噩耗，一直到爸爸去世，只有短短两个多月时间。\n我接到消息后立刻就动身回家，先是在汕头中心医院里陪护了一周，出院后又在家陪了爸爸一个月，之后我做了一个让我后悔很久的决定，为了老爸的医疗费我回来找工作了，这一走，就是天人两隔。\n\n# 关于我的爸爸\n爸是土生土长的潮汕人，但跟很多人印象中的潮汕大男子主义形象相去甚远，他可吊儿郎当了，嘻嘻哈哈跟孩子们特别玩得来，小时候我爸最爱做的事就是抱我起来拿胡子渣扎我扎到哭！\n\n他故作深沉的时候，基本上我的屁股就要挨打了，就连打我都跟别人不一样，别人都是偷偷在家教训孩子，他非要上街追我，让我很没面子。有一次追我的时候我感觉要被他一个大巴掌呼后脑勺了，赶紧原地蹲下来，他自己惯性太大摔了一下，爬起来一边笑一边打我！\n\n因我太调皮，这样的苍蝇拍打屁股都打坏好几支了。\n\n![cyp](https://s2.loli.net/2022/05/19/7Gc6NUaBC98swhO.jpg)\n\n现在想来，老爸对我性格的影响是挺大的，我也没个正经时候每天嘻嘻哈哈的，也特别喜欢跟小孩子们玩。\n\n老爸只有初中学历，听得懂普通话却不太会说，他蹩脚的普通话是我的一大快乐源泉，看他跟镇子上的外地人打交道特别有意思。\n\n即使操着蹩脚普通话，爸爸还是把几个孩子都培养上了大学，小学的时候我有很多同学特别是女同学，读着读着家里就让退学回去帮忙赚钱了，连初中都没上，可是我们家孩子不管男孩女孩只要想读书，爸爸从没说过半个不字。即使是我这种不学无术的娃，爸也支持我去读了中专。\n\n爸妈一直把我们几个小孩照顾得很好，这是妹妹出生前的一张家庭照。\n![family](https://s2.loli.net/2022/05/19/8S6epUlrf1kVuLs.jpg)\n\n这是妹妹三岁的时候，爸妈难得花钱去镇上照相馆拍的全家福。\n\n![family](https://s2.loli.net/2022/05/19/56yKQ2klJhfBTZ4.jpg)\n\n那时爸爸 40 出头，眼神却充满朝气，不夸张地说精神气貌比现在很多年轻人都好多了。\n\n\n为了照顾家里四个小孩，年轻时候爸爸做过很多活计：\n - 扛着采购的一大袋小商品，连坐五天的绿皮火车去青岛摆摊做生意\n - 去工地上给工人做饭\n - 在镇子上开鞋店\n - 一砖一瓦地把家里房子给盖起来了\n - ...\n\n爸爸干过很多活，不过爸爸最让我骄傲的职业是 “大厨师”\n\n老爸做的菜是最好吃的，他炸的鸡腿比什么 KFC 麦当劳要好吃上百倍，鸡鸭鱼肉海鲜他样样都会做，就连早上的碎肉粥也煮得比外边馆子好吃。每年的年夜饭基本都是爸爸在张罗，对我而言所谓的年味其实就是爸爸做的饭香味。\n\n![年夜饭](https://s2.loli.net/2022/05/19/P4KqE8DBASe3wtr.jpg)\n![年夜饭](https://s2.loli.net/2022/05/19/9YaHhz8vDPKfUAI.jpg)\n![早餐](https://s2.loli.net/2022/05/19/8SOeIMmzWL1kjVy.jpg)\n\n在他身上从没有什么 “巧父难为无米之炊”。\n06 年「**珍珠**」台风登陆那段时间家里经济很困难，镇子上又处处积大水，出不了门买不了米，一家人只能躲在屋子里担心下一顿饭，爸爸却像变魔术一样从柜子里拿出一袋鱿鱼，用酒精和一个小金属盆就烤了一顿鱿鱼大餐，我至今还记得那滋味，从此酒精烤鱿鱼成了我回家跟我爸必点的菜品。\n\n![酒精烤鱿鱼](https://s2.loli.net/2022/05/19/bjtLxiWgUePNZCK.jpg)\n\n老爸做饭太香的后果就是我没办法照顾好自己，去汕头上中专之前我体重一直很正常，出去后没有爸妈管，读书那几年我甚至有点营养不良。。。\n\n小时候的爸爸是无所不能的，大到盖房子刷油漆，小到修自行车，好像什么都会，总是抽着烟就把活干了，问他啥他都能把我唬得一愣一愣的（还骗我说米老鼠就是米缸里偷米的小老鼠，有机会就给我抓一只，到我工作了都没抓到，他是忘了，我还记得呢！）。\n\n![Handy-man](https://s2.loli.net/2022/05/19/UvRpsyO3JgPxQt6.jpg)\n\n长大了慢慢发现爸爸也有不懂的东西，有他用不惯的洗衣机，有他不会打字的手机，也有他修不好的宽带。我回忆不起第一次我爸跟我请教电脑问题时我的神情，不过不用说一定很欠扁。\n\n# 我与老爸\n\n小学的时候，放学后总要缠着爸爸骑家里的凤凰老单车载我去买菜，不是因为我多体贴会帮忙，主要是想买什么菜都是我说了算，集市里还有一家老面馆，有时候嫌我烦，爸会点一份小面把我放在里头一个人吃面，买完菜再来拎我回家。\n\n小学时有多粘爸爸，青春期就有多烦爸爸，我的青春期非常叛逆，叛逆到我自己都觉得有点不可思议，以至于放着高中不读，自己去选了一个汕头的中专软件专业，想早点出来赚钱过独立生活，想远离父母。总之就是想方设法跟爸妈对着干，特别想证明自己。\n\n那时候跟老爸吵过好多架，不过最后老爸还是支持我的决定，在我软磨硬磨下还给我配了台 4k 多的笔记本电脑，就让我滚去汕头读书了，入学那天是我人生第一次坐大巴车。\n\n自打我出远门读书后，跟爸爸相处的时间就越来越少了，偶尔要生活费的时候才会厚脸皮打个电话撒撒娇，参加工作后甚至连电话都很少打了，只有逢年过节的时候才回去一段时间。\n\n那阵子，周末回家要坐没有固定时刻表的大巴车，一直坐到镇子公路入口，老爸会骑着电动车突突突地来接我回家，路上我再跟他唧唧哇哇说一堆学校的事，周日下午老爸再突突突把我送到公路入口，陪我等车嘱咐我注意安全。\n\n工作以后还是一样的大巴，一样的公路入口，一样的电动车突突突声，不一样的是老爸越来越白的头发，每多工作一年我都越能理解老爸的辛苦，回家路上的话却越来越少，因为觉得 “爸你该歇会儿了” 这种话太矫情。\n\n后来我继续作死，网上找到个工作机会，就跟我爸借了几千块，买了机票来西安工作了（记得买机票那天因为价格波动，多花了200块，可心疼了）。\n\n来了西安以后回家的次数就更少了，但每次回家爸爸都很替我骄傲，总跟别人说我特别厉害能一个人跑那么远去工作，工资还涨那么快 balabala 的，那时候我开始往家里寄钱，觉得终于能证明自己特别开心。\n\n# 这幸福的日子就在今年结束了。\n\n10 月底我姐告诉我老爸脸色越来越差肚子也在变大，去中心医院检查后确诊了肝癌晚期，当时感觉天都要塌了，立马买了机票回家。\n\n在医院看到我爸憔悴模样的时候差点就哭了，但还是强忍住了，只是抱了抱他然后开始耍宝想让他开心点。\n\n我们不想让他知道病情，就骗他说是比较严重的肝硬化要好好调养，家里人也纠结过无数次要不要说，最后决定不要让他担心，好好过完最后的日子。\n\n那天天气特别好，家里人都来看望爸爸，爸爸很开心一直在说话。\n![happy](https://s2.loli.net/2022/05/19/zutRaYhbL6fjWPQ.jpg)\n\n回汕头后的第一周，我一个人陪着老爸在医院调养，那时候他除了腹水很涨，有点憔悴以外，整个人还是很清醒的，睡得着也吃得下东西，有几次胃口好到能吃下一整碗牛肉粿条。\n\n中心医院靠近海滨路，我偶尔会带爸爸去海边走走，一路上讲我在汕头读书工作的事挺开心的，但每每快走到海边的时候爸爸就累了，该死的肝癌让他愈发容易累了，甚至坐一会儿屁股都会很痛。\n\n那一周每天除了打点滴，照顾三餐，削削水果以外，最开心的就是终于能敞开了跟爸爸聊天了，我回来后爸爸心情特别好，聊了很多他年轻时还有我出生前的事，讲他以前怎么种田，怎么搜罗鼓捣田里各种吃的，怎么学煮饭学修鞋，怎么坐五天火车去青岛摆摊，怎么被骗钱。。。从我老叔聊到小叔，大姑聊到小姑，聊到我们家还有个从未见过面的台湾远远远远房亲戚。\n\n那时候我才真切感受到老爸是活了半个世纪的人了，我其实只陪他走过一半不到的人生，老爸年轻过，也有意气风发的时候，做生意被坑后也会很迷茫，但他从不跟我们说这些事，他为了我们吃过的那些苦，老实说放我身上我不一定受得了。\n\n一周后给爸爸办理了出院手续，回家继续调养，当时医生已经告知没什么太好的治疗方案，到了晚期肝移植也不现实，只有靶向药这条路可以试试了。\n\n回家后又过了一周，我 27 岁生日那天，没有什么蛋糕和蜡烛，因为肝癌引发的便秘，生日是陪老爸老妈在医院急诊度过的。\n\n挺高兴的事是我弟给爸买了只鹦鹉🦜，最后这段日子里老爸每天都要逗逗这只小鹦鹉，跟小时候逗我们一样。\n\n![bird](https://s2.loli.net/2022/05/19/saISOHqVcfdCoNm.jpg)\n\n老爸的旧手机太卡了，我给老爸买了一部 iPhone 13，他嘴上骂我浪费钱，过没几天就真香了，每次有人来看望他都要显摆一下我给他买的 iPhone。\n\n我姐还给搞了个麻将桌，让我爸没事教我们搓麻将。\n![majiang](https://s2.loli.net/2022/05/19/5Qqpb2vzxeyLPYH.jpg)\n\n老爸一直都很关心我，连我开发的小 App 叫什么名字他都知道，总问我是不是要开工作室要自己给自己发工资，收到钱了会不会给他提成。\n\n# 最后的日子\n出院后爸爸的病情挺稳定的，我们一直觉得靶向药有慢慢在起作用，开始抱有希望。\n\n谁曾想上周六早上一醒来就开始干呕吐血，身体状况开始急转直下，周天的时候爸爸已经开始神智不清，怎么喊他都没反应。\n\n挣扎了一宿，1 月 10 号，农历腊月初八，早晨 10:37 分，爸爸永远离开了我们。\n\n我一直想着等我攒够钱有点事业成家了，可以每年带着孩子还有爸妈四处旅游，把中国逛个遍拍一堆老年人旅游照回家里摆着得瑟，可以带着孩子义正严辞去跟爸妈把小时候的压岁钱讨回来，可以带爸妈逛大商场，包场看老电影。。。\n\n可我偏心的爸爸啊，只给了我他抚养我长大的记忆，却不给我报答的机会，非要教我子欲养而亲不待的道理。\n\n爸爸短暂的一生没有什么世俗意义上的大成就，更不是什么潮汕大老板，爸爸甚至有很多坏毛病，爱抽烟也爱熬夜，中年以后也爱乱发脾气。\n\n可是爸爸做的饭世界第一好吃，爸爸用双手养活了全家人，爸爸盖的房子坚固又温馨，爸爸供我们读书，爸爸陪我们长大，爸爸带我们去海边玩，爸爸教我们游泳，爸爸带我去买菜，爸爸偷带我出去吃夜宵，爸爸过年跟我赌钱会赖账，爸爸教我劳动最光荣，爸爸收到我的红包会乐开花，爸爸用我买的手机会跟别人显摆，爸爸中年发福了会去晨跑，爸爸晨跑完会嘲讽我不挪窝，爸爸其实想跟我聊很多很多，**爸爸永远是我的爸爸**！！！\n\n爸爸是很坚强的，爸爸只是累了先休息了，爸爸放心去吧，妈妈有孩子们照顾。\n\n答应我爸爸，如果天国有集市，等我去见你的时候，一定要骑单车载我去买菜。\n\n![heaven](https://s2.loli.net/2022/05/19/UYPQnVpywEtWDTZ.jpg)\n","source":"_posts/to-papa.md","raw":"---\ntitle: \"纪念我的爸爸。\"\ndate: 2022-01-11\ncategories:\n- 人生\n- [gallery]\ntags:\n- Life\nfeatured_image: https://s2.loli.net/2022/05/19/ynQPmzBY5j8fqGS.jpg\n---\n\n2022 年 1 月 10 日，腊月初八，爸爸走了，享年 56 岁。\n\n# 时间，就非要这么快吗？\n「**BB一个啊呜Check-in**」，这是以前同事霞姐的女儿跟我瞎玩的时候随口编给我的名字，虽然没什么意义但我就是记住了，现在想想这个名字挺有哲学意义的。\n\n世上所有人都是某时某刻，「**小 BB 一个，啊呜着 Check-in 到这世界**」，问题是老天爷从不跟你商量什么时候你会 Check-out。\n\n10 月底的时候，从接到爸爸确诊肝癌的噩耗，一直到爸爸去世，只有短短两个多月时间。\n我接到消息后立刻就动身回家，先是在汕头中心医院里陪护了一周，出院后又在家陪了爸爸一个月，之后我做了一个让我后悔很久的决定，为了老爸的医疗费我回来找工作了，这一走，就是天人两隔。\n\n# 关于我的爸爸\n爸是土生土长的潮汕人，但跟很多人印象中的潮汕大男子主义形象相去甚远，他可吊儿郎当了，嘻嘻哈哈跟孩子们特别玩得来，小时候我爸最爱做的事就是抱我起来拿胡子渣扎我扎到哭！\n\n他故作深沉的时候，基本上我的屁股就要挨打了，就连打我都跟别人不一样，别人都是偷偷在家教训孩子，他非要上街追我，让我很没面子。有一次追我的时候我感觉要被他一个大巴掌呼后脑勺了，赶紧原地蹲下来，他自己惯性太大摔了一下，爬起来一边笑一边打我！\n\n因我太调皮，这样的苍蝇拍打屁股都打坏好几支了。\n\n![cyp](https://s2.loli.net/2022/05/19/7Gc6NUaBC98swhO.jpg)\n\n现在想来，老爸对我性格的影响是挺大的，我也没个正经时候每天嘻嘻哈哈的，也特别喜欢跟小孩子们玩。\n\n老爸只有初中学历，听得懂普通话却不太会说，他蹩脚的普通话是我的一大快乐源泉，看他跟镇子上的外地人打交道特别有意思。\n\n即使操着蹩脚普通话，爸爸还是把几个孩子都培养上了大学，小学的时候我有很多同学特别是女同学，读着读着家里就让退学回去帮忙赚钱了，连初中都没上，可是我们家孩子不管男孩女孩只要想读书，爸爸从没说过半个不字。即使是我这种不学无术的娃，爸也支持我去读了中专。\n\n爸妈一直把我们几个小孩照顾得很好，这是妹妹出生前的一张家庭照。\n![family](https://s2.loli.net/2022/05/19/8S6epUlrf1kVuLs.jpg)\n\n这是妹妹三岁的时候，爸妈难得花钱去镇上照相馆拍的全家福。\n\n![family](https://s2.loli.net/2022/05/19/56yKQ2klJhfBTZ4.jpg)\n\n那时爸爸 40 出头，眼神却充满朝气，不夸张地说精神气貌比现在很多年轻人都好多了。\n\n\n为了照顾家里四个小孩，年轻时候爸爸做过很多活计：\n - 扛着采购的一大袋小商品，连坐五天的绿皮火车去青岛摆摊做生意\n - 去工地上给工人做饭\n - 在镇子上开鞋店\n - 一砖一瓦地把家里房子给盖起来了\n - ...\n\n爸爸干过很多活，不过爸爸最让我骄傲的职业是 “大厨师”\n\n老爸做的菜是最好吃的，他炸的鸡腿比什么 KFC 麦当劳要好吃上百倍，鸡鸭鱼肉海鲜他样样都会做，就连早上的碎肉粥也煮得比外边馆子好吃。每年的年夜饭基本都是爸爸在张罗，对我而言所谓的年味其实就是爸爸做的饭香味。\n\n![年夜饭](https://s2.loli.net/2022/05/19/P4KqE8DBASe3wtr.jpg)\n![年夜饭](https://s2.loli.net/2022/05/19/9YaHhz8vDPKfUAI.jpg)\n![早餐](https://s2.loli.net/2022/05/19/8SOeIMmzWL1kjVy.jpg)\n\n在他身上从没有什么 “巧父难为无米之炊”。\n06 年「**珍珠**」台风登陆那段时间家里经济很困难，镇子上又处处积大水，出不了门买不了米，一家人只能躲在屋子里担心下一顿饭，爸爸却像变魔术一样从柜子里拿出一袋鱿鱼，用酒精和一个小金属盆就烤了一顿鱿鱼大餐，我至今还记得那滋味，从此酒精烤鱿鱼成了我回家跟我爸必点的菜品。\n\n![酒精烤鱿鱼](https://s2.loli.net/2022/05/19/bjtLxiWgUePNZCK.jpg)\n\n老爸做饭太香的后果就是我没办法照顾好自己，去汕头上中专之前我体重一直很正常，出去后没有爸妈管，读书那几年我甚至有点营养不良。。。\n\n小时候的爸爸是无所不能的，大到盖房子刷油漆，小到修自行车，好像什么都会，总是抽着烟就把活干了，问他啥他都能把我唬得一愣一愣的（还骗我说米老鼠就是米缸里偷米的小老鼠，有机会就给我抓一只，到我工作了都没抓到，他是忘了，我还记得呢！）。\n\n![Handy-man](https://s2.loli.net/2022/05/19/UvRpsyO3JgPxQt6.jpg)\n\n长大了慢慢发现爸爸也有不懂的东西，有他用不惯的洗衣机，有他不会打字的手机，也有他修不好的宽带。我回忆不起第一次我爸跟我请教电脑问题时我的神情，不过不用说一定很欠扁。\n\n# 我与老爸\n\n小学的时候，放学后总要缠着爸爸骑家里的凤凰老单车载我去买菜，不是因为我多体贴会帮忙，主要是想买什么菜都是我说了算，集市里还有一家老面馆，有时候嫌我烦，爸会点一份小面把我放在里头一个人吃面，买完菜再来拎我回家。\n\n小学时有多粘爸爸，青春期就有多烦爸爸，我的青春期非常叛逆，叛逆到我自己都觉得有点不可思议，以至于放着高中不读，自己去选了一个汕头的中专软件专业，想早点出来赚钱过独立生活，想远离父母。总之就是想方设法跟爸妈对着干，特别想证明自己。\n\n那时候跟老爸吵过好多架，不过最后老爸还是支持我的决定，在我软磨硬磨下还给我配了台 4k 多的笔记本电脑，就让我滚去汕头读书了，入学那天是我人生第一次坐大巴车。\n\n自打我出远门读书后，跟爸爸相处的时间就越来越少了，偶尔要生活费的时候才会厚脸皮打个电话撒撒娇，参加工作后甚至连电话都很少打了，只有逢年过节的时候才回去一段时间。\n\n那阵子，周末回家要坐没有固定时刻表的大巴车，一直坐到镇子公路入口，老爸会骑着电动车突突突地来接我回家，路上我再跟他唧唧哇哇说一堆学校的事，周日下午老爸再突突突把我送到公路入口，陪我等车嘱咐我注意安全。\n\n工作以后还是一样的大巴，一样的公路入口，一样的电动车突突突声，不一样的是老爸越来越白的头发，每多工作一年我都越能理解老爸的辛苦，回家路上的话却越来越少，因为觉得 “爸你该歇会儿了” 这种话太矫情。\n\n后来我继续作死，网上找到个工作机会，就跟我爸借了几千块，买了机票来西安工作了（记得买机票那天因为价格波动，多花了200块，可心疼了）。\n\n来了西安以后回家的次数就更少了，但每次回家爸爸都很替我骄傲，总跟别人说我特别厉害能一个人跑那么远去工作，工资还涨那么快 balabala 的，那时候我开始往家里寄钱，觉得终于能证明自己特别开心。\n\n# 这幸福的日子就在今年结束了。\n\n10 月底我姐告诉我老爸脸色越来越差肚子也在变大，去中心医院检查后确诊了肝癌晚期，当时感觉天都要塌了，立马买了机票回家。\n\n在医院看到我爸憔悴模样的时候差点就哭了，但还是强忍住了，只是抱了抱他然后开始耍宝想让他开心点。\n\n我们不想让他知道病情，就骗他说是比较严重的肝硬化要好好调养，家里人也纠结过无数次要不要说，最后决定不要让他担心，好好过完最后的日子。\n\n那天天气特别好，家里人都来看望爸爸，爸爸很开心一直在说话。\n![happy](https://s2.loli.net/2022/05/19/zutRaYhbL6fjWPQ.jpg)\n\n回汕头后的第一周，我一个人陪着老爸在医院调养，那时候他除了腹水很涨，有点憔悴以外，整个人还是很清醒的，睡得着也吃得下东西，有几次胃口好到能吃下一整碗牛肉粿条。\n\n中心医院靠近海滨路，我偶尔会带爸爸去海边走走，一路上讲我在汕头读书工作的事挺开心的，但每每快走到海边的时候爸爸就累了，该死的肝癌让他愈发容易累了，甚至坐一会儿屁股都会很痛。\n\n那一周每天除了打点滴，照顾三餐，削削水果以外，最开心的就是终于能敞开了跟爸爸聊天了，我回来后爸爸心情特别好，聊了很多他年轻时还有我出生前的事，讲他以前怎么种田，怎么搜罗鼓捣田里各种吃的，怎么学煮饭学修鞋，怎么坐五天火车去青岛摆摊，怎么被骗钱。。。从我老叔聊到小叔，大姑聊到小姑，聊到我们家还有个从未见过面的台湾远远远远房亲戚。\n\n那时候我才真切感受到老爸是活了半个世纪的人了，我其实只陪他走过一半不到的人生，老爸年轻过，也有意气风发的时候，做生意被坑后也会很迷茫，但他从不跟我们说这些事，他为了我们吃过的那些苦，老实说放我身上我不一定受得了。\n\n一周后给爸爸办理了出院手续，回家继续调养，当时医生已经告知没什么太好的治疗方案，到了晚期肝移植也不现实，只有靶向药这条路可以试试了。\n\n回家后又过了一周，我 27 岁生日那天，没有什么蛋糕和蜡烛，因为肝癌引发的便秘，生日是陪老爸老妈在医院急诊度过的。\n\n挺高兴的事是我弟给爸买了只鹦鹉🦜，最后这段日子里老爸每天都要逗逗这只小鹦鹉，跟小时候逗我们一样。\n\n![bird](https://s2.loli.net/2022/05/19/saISOHqVcfdCoNm.jpg)\n\n老爸的旧手机太卡了，我给老爸买了一部 iPhone 13，他嘴上骂我浪费钱，过没几天就真香了，每次有人来看望他都要显摆一下我给他买的 iPhone。\n\n我姐还给搞了个麻将桌，让我爸没事教我们搓麻将。\n![majiang](https://s2.loli.net/2022/05/19/5Qqpb2vzxeyLPYH.jpg)\n\n老爸一直都很关心我，连我开发的小 App 叫什么名字他都知道，总问我是不是要开工作室要自己给自己发工资，收到钱了会不会给他提成。\n\n# 最后的日子\n出院后爸爸的病情挺稳定的，我们一直觉得靶向药有慢慢在起作用，开始抱有希望。\n\n谁曾想上周六早上一醒来就开始干呕吐血，身体状况开始急转直下，周天的时候爸爸已经开始神智不清，怎么喊他都没反应。\n\n挣扎了一宿，1 月 10 号，农历腊月初八，早晨 10:37 分，爸爸永远离开了我们。\n\n我一直想着等我攒够钱有点事业成家了，可以每年带着孩子还有爸妈四处旅游，把中国逛个遍拍一堆老年人旅游照回家里摆着得瑟，可以带着孩子义正严辞去跟爸妈把小时候的压岁钱讨回来，可以带爸妈逛大商场，包场看老电影。。。\n\n可我偏心的爸爸啊，只给了我他抚养我长大的记忆，却不给我报答的机会，非要教我子欲养而亲不待的道理。\n\n爸爸短暂的一生没有什么世俗意义上的大成就，更不是什么潮汕大老板，爸爸甚至有很多坏毛病，爱抽烟也爱熬夜，中年以后也爱乱发脾气。\n\n可是爸爸做的饭世界第一好吃，爸爸用双手养活了全家人，爸爸盖的房子坚固又温馨，爸爸供我们读书，爸爸陪我们长大，爸爸带我们去海边玩，爸爸教我们游泳，爸爸带我去买菜，爸爸偷带我出去吃夜宵，爸爸过年跟我赌钱会赖账，爸爸教我劳动最光荣，爸爸收到我的红包会乐开花，爸爸用我买的手机会跟别人显摆，爸爸中年发福了会去晨跑，爸爸晨跑完会嘲讽我不挪窝，爸爸其实想跟我聊很多很多，**爸爸永远是我的爸爸**！！！\n\n爸爸是很坚强的，爸爸只是累了先休息了，爸爸放心去吧，妈妈有孩子们照顾。\n\n答应我爸爸，如果天国有集市，等我去见你的时候，一定要骑单车载我去买菜。\n\n![heaven](https://s2.loli.net/2022/05/19/UYPQnVpywEtWDTZ.jpg)\n","slug":"to-papa","published":1,"updated":"2022-05-22T04:30:46.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3gtogs200030xur1p41b69a","content":"<p>2022 年 1 月 10 日，腊月初八，爸爸走了，享年 56 岁。</p>\n<h1 id=\"时间，就非要这么快吗？\"><a href=\"#时间，就非要这么快吗？\" class=\"headerlink\" title=\"时间，就非要这么快吗？\"></a>时间，就非要这么快吗？</h1><p>「<strong>BB一个啊呜Check-in</strong>」，这是以前同事霞姐的女儿跟我瞎玩的时候随口编给我的名字，虽然没什么意义但我就是记住了，现在想想这个名字挺有哲学意义的。</p>\n<p>世上所有人都是某时某刻，「<strong>小 BB 一个，啊呜着 Check-in 到这世界</strong>」，问题是老天爷从不跟你商量什么时候你会 Check-out。</p>\n<p>10 月底的时候，从接到爸爸确诊肝癌的噩耗，一直到爸爸去世，只有短短两个多月时间。<br>我接到消息后立刻就动身回家，先是在汕头中心医院里陪护了一周，出院后又在家陪了爸爸一个月，之后我做了一个让我后悔很久的决定，为了老爸的医疗费我回来找工作了，这一走，就是天人两隔。</p>\n<h1 id=\"关于我的爸爸\"><a href=\"#关于我的爸爸\" class=\"headerlink\" title=\"关于我的爸爸\"></a>关于我的爸爸</h1><p>爸是土生土长的潮汕人，但跟很多人印象中的潮汕大男子主义形象相去甚远，他可吊儿郎当了，嘻嘻哈哈跟孩子们特别玩得来，小时候我爸最爱做的事就是抱我起来拿胡子渣扎我扎到哭！</p>\n<p>他故作深沉的时候，基本上我的屁股就要挨打了，就连打我都跟别人不一样，别人都是偷偷在家教训孩子，他非要上街追我，让我很没面子。有一次追我的时候我感觉要被他一个大巴掌呼后脑勺了，赶紧原地蹲下来，他自己惯性太大摔了一下，爬起来一边笑一边打我！</p>\n<p>因我太调皮，这样的苍蝇拍打屁股都打坏好几支了。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/7Gc6NUaBC98swhO.jpg\" alt=\"cyp\"></p>\n<p>现在想来，老爸对我性格的影响是挺大的，我也没个正经时候每天嘻嘻哈哈的，也特别喜欢跟小孩子们玩。</p>\n<p>老爸只有初中学历，听得懂普通话却不太会说，他蹩脚的普通话是我的一大快乐源泉，看他跟镇子上的外地人打交道特别有意思。</p>\n<p>即使操着蹩脚普通话，爸爸还是把几个孩子都培养上了大学，小学的时候我有很多同学特别是女同学，读着读着家里就让退学回去帮忙赚钱了，连初中都没上，可是我们家孩子不管男孩女孩只要想读书，爸爸从没说过半个不字。即使是我这种不学无术的娃，爸也支持我去读了中专。</p>\n<p>爸妈一直把我们几个小孩照顾得很好，这是妹妹出生前的一张家庭照。<br><img src=\"https://s2.loli.net/2022/05/19/8S6epUlrf1kVuLs.jpg\" alt=\"family\"></p>\n<p>这是妹妹三岁的时候，爸妈难得花钱去镇上照相馆拍的全家福。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/56yKQ2klJhfBTZ4.jpg\" alt=\"family\"></p>\n<p>那时爸爸 40 出头，眼神却充满朝气，不夸张地说精神气貌比现在很多年轻人都好多了。</p>\n<p>为了照顾家里四个小孩，年轻时候爸爸做过很多活计：</p>\n<ul>\n<li>扛着采购的一大袋小商品，连坐五天的绿皮火车去青岛摆摊做生意</li>\n<li>去工地上给工人做饭</li>\n<li>在镇子上开鞋店</li>\n<li>一砖一瓦地把家里房子给盖起来了</li>\n<li>…</li>\n</ul>\n<p>爸爸干过很多活，不过爸爸最让我骄傲的职业是 “大厨师”</p>\n<p>老爸做的菜是最好吃的，他炸的鸡腿比什么 KFC 麦当劳要好吃上百倍，鸡鸭鱼肉海鲜他样样都会做，就连早上的碎肉粥也煮得比外边馆子好吃。每年的年夜饭基本都是爸爸在张罗，对我而言所谓的年味其实就是爸爸做的饭香味。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/P4KqE8DBASe3wtr.jpg\" alt=\"年夜饭\"><br><img src=\"https://s2.loli.net/2022/05/19/9YaHhz8vDPKfUAI.jpg\" alt=\"年夜饭\"><br><img src=\"https://s2.loli.net/2022/05/19/8SOeIMmzWL1kjVy.jpg\" alt=\"早餐\"></p>\n<p>在他身上从没有什么 “巧父难为无米之炊”。<br>06 年「<strong>珍珠</strong>」台风登陆那段时间家里经济很困难，镇子上又处处积大水，出不了门买不了米，一家人只能躲在屋子里担心下一顿饭，爸爸却像变魔术一样从柜子里拿出一袋鱿鱼，用酒精和一个小金属盆就烤了一顿鱿鱼大餐，我至今还记得那滋味，从此酒精烤鱿鱼成了我回家跟我爸必点的菜品。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/bjtLxiWgUePNZCK.jpg\" alt=\"酒精烤鱿鱼\"></p>\n<p>老爸做饭太香的后果就是我没办法照顾好自己，去汕头上中专之前我体重一直很正常，出去后没有爸妈管，读书那几年我甚至有点营养不良。。。</p>\n<p>小时候的爸爸是无所不能的，大到盖房子刷油漆，小到修自行车，好像什么都会，总是抽着烟就把活干了，问他啥他都能把我唬得一愣一愣的（还骗我说米老鼠就是米缸里偷米的小老鼠，有机会就给我抓一只，到我工作了都没抓到，他是忘了，我还记得呢！）。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/UvRpsyO3JgPxQt6.jpg\" alt=\"Handy-man\"></p>\n<p>长大了慢慢发现爸爸也有不懂的东西，有他用不惯的洗衣机，有他不会打字的手机，也有他修不好的宽带。我回忆不起第一次我爸跟我请教电脑问题时我的神情，不过不用说一定很欠扁。</p>\n<h1 id=\"我与老爸\"><a href=\"#我与老爸\" class=\"headerlink\" title=\"我与老爸\"></a>我与老爸</h1><p>小学的时候，放学后总要缠着爸爸骑家里的凤凰老单车载我去买菜，不是因为我多体贴会帮忙，主要是想买什么菜都是我说了算，集市里还有一家老面馆，有时候嫌我烦，爸会点一份小面把我放在里头一个人吃面，买完菜再来拎我回家。</p>\n<p>小学时有多粘爸爸，青春期就有多烦爸爸，我的青春期非常叛逆，叛逆到我自己都觉得有点不可思议，以至于放着高中不读，自己去选了一个汕头的中专软件专业，想早点出来赚钱过独立生活，想远离父母。总之就是想方设法跟爸妈对着干，特别想证明自己。</p>\n<p>那时候跟老爸吵过好多架，不过最后老爸还是支持我的决定，在我软磨硬磨下还给我配了台 4k 多的笔记本电脑，就让我滚去汕头读书了，入学那天是我人生第一次坐大巴车。</p>\n<p>自打我出远门读书后，跟爸爸相处的时间就越来越少了，偶尔要生活费的时候才会厚脸皮打个电话撒撒娇，参加工作后甚至连电话都很少打了，只有逢年过节的时候才回去一段时间。</p>\n<p>那阵子，周末回家要坐没有固定时刻表的大巴车，一直坐到镇子公路入口，老爸会骑着电动车突突突地来接我回家，路上我再跟他唧唧哇哇说一堆学校的事，周日下午老爸再突突突把我送到公路入口，陪我等车嘱咐我注意安全。</p>\n<p>工作以后还是一样的大巴，一样的公路入口，一样的电动车突突突声，不一样的是老爸越来越白的头发，每多工作一年我都越能理解老爸的辛苦，回家路上的话却越来越少，因为觉得 “爸你该歇会儿了” 这种话太矫情。</p>\n<p>后来我继续作死，网上找到个工作机会，就跟我爸借了几千块，买了机票来西安工作了（记得买机票那天因为价格波动，多花了200块，可心疼了）。</p>\n<p>来了西安以后回家的次数就更少了，但每次回家爸爸都很替我骄傲，总跟别人说我特别厉害能一个人跑那么远去工作，工资还涨那么快 balabala 的，那时候我开始往家里寄钱，觉得终于能证明自己特别开心。</p>\n<h1 id=\"这幸福的日子就在今年结束了。\"><a href=\"#这幸福的日子就在今年结束了。\" class=\"headerlink\" title=\"这幸福的日子就在今年结束了。\"></a>这幸福的日子就在今年结束了。</h1><p>10 月底我姐告诉我老爸脸色越来越差肚子也在变大，去中心医院检查后确诊了肝癌晚期，当时感觉天都要塌了，立马买了机票回家。</p>\n<p>在医院看到我爸憔悴模样的时候差点就哭了，但还是强忍住了，只是抱了抱他然后开始耍宝想让他开心点。</p>\n<p>我们不想让他知道病情，就骗他说是比较严重的肝硬化要好好调养，家里人也纠结过无数次要不要说，最后决定不要让他担心，好好过完最后的日子。</p>\n<p>那天天气特别好，家里人都来看望爸爸，爸爸很开心一直在说话。<br><img src=\"https://s2.loli.net/2022/05/19/zutRaYhbL6fjWPQ.jpg\" alt=\"happy\"></p>\n<p>回汕头后的第一周，我一个人陪着老爸在医院调养，那时候他除了腹水很涨，有点憔悴以外，整个人还是很清醒的，睡得着也吃得下东西，有几次胃口好到能吃下一整碗牛肉粿条。</p>\n<p>中心医院靠近海滨路，我偶尔会带爸爸去海边走走，一路上讲我在汕头读书工作的事挺开心的，但每每快走到海边的时候爸爸就累了，该死的肝癌让他愈发容易累了，甚至坐一会儿屁股都会很痛。</p>\n<p>那一周每天除了打点滴，照顾三餐，削削水果以外，最开心的就是终于能敞开了跟爸爸聊天了，我回来后爸爸心情特别好，聊了很多他年轻时还有我出生前的事，讲他以前怎么种田，怎么搜罗鼓捣田里各种吃的，怎么学煮饭学修鞋，怎么坐五天火车去青岛摆摊，怎么被骗钱。。。从我老叔聊到小叔，大姑聊到小姑，聊到我们家还有个从未见过面的台湾远远远远房亲戚。</p>\n<p>那时候我才真切感受到老爸是活了半个世纪的人了，我其实只陪他走过一半不到的人生，老爸年轻过，也有意气风发的时候，做生意被坑后也会很迷茫，但他从不跟我们说这些事，他为了我们吃过的那些苦，老实说放我身上我不一定受得了。</p>\n<p>一周后给爸爸办理了出院手续，回家继续调养，当时医生已经告知没什么太好的治疗方案，到了晚期肝移植也不现实，只有靶向药这条路可以试试了。</p>\n<p>回家后又过了一周，我 27 岁生日那天，没有什么蛋糕和蜡烛，因为肝癌引发的便秘，生日是陪老爸老妈在医院急诊度过的。</p>\n<p>挺高兴的事是我弟给爸买了只鹦鹉🦜，最后这段日子里老爸每天都要逗逗这只小鹦鹉，跟小时候逗我们一样。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/saISOHqVcfdCoNm.jpg\" alt=\"bird\"></p>\n<p>老爸的旧手机太卡了，我给老爸买了一部 iPhone 13，他嘴上骂我浪费钱，过没几天就真香了，每次有人来看望他都要显摆一下我给他买的 iPhone。</p>\n<p>我姐还给搞了个麻将桌，让我爸没事教我们搓麻将。<br><img src=\"https://s2.loli.net/2022/05/19/5Qqpb2vzxeyLPYH.jpg\" alt=\"majiang\"></p>\n<p>老爸一直都很关心我，连我开发的小 App 叫什么名字他都知道，总问我是不是要开工作室要自己给自己发工资，收到钱了会不会给他提成。</p>\n<h1 id=\"最后的日子\"><a href=\"#最后的日子\" class=\"headerlink\" title=\"最后的日子\"></a>最后的日子</h1><p>出院后爸爸的病情挺稳定的，我们一直觉得靶向药有慢慢在起作用，开始抱有希望。</p>\n<p>谁曾想上周六早上一醒来就开始干呕吐血，身体状况开始急转直下，周天的时候爸爸已经开始神智不清，怎么喊他都没反应。</p>\n<p>挣扎了一宿，1 月 10 号，农历腊月初八，早晨 10:37 分，爸爸永远离开了我们。</p>\n<p>我一直想着等我攒够钱有点事业成家了，可以每年带着孩子还有爸妈四处旅游，把中国逛个遍拍一堆老年人旅游照回家里摆着得瑟，可以带着孩子义正严辞去跟爸妈把小时候的压岁钱讨回来，可以带爸妈逛大商场，包场看老电影。。。</p>\n<p>可我偏心的爸爸啊，只给了我他抚养我长大的记忆，却不给我报答的机会，非要教我子欲养而亲不待的道理。</p>\n<p>爸爸短暂的一生没有什么世俗意义上的大成就，更不是什么潮汕大老板，爸爸甚至有很多坏毛病，爱抽烟也爱熬夜，中年以后也爱乱发脾气。</p>\n<p>可是爸爸做的饭世界第一好吃，爸爸用双手养活了全家人，爸爸盖的房子坚固又温馨，爸爸供我们读书，爸爸陪我们长大，爸爸带我们去海边玩，爸爸教我们游泳，爸爸带我去买菜，爸爸偷带我出去吃夜宵，爸爸过年跟我赌钱会赖账，爸爸教我劳动最光荣，爸爸收到我的红包会乐开花，爸爸用我买的手机会跟别人显摆，爸爸中年发福了会去晨跑，爸爸晨跑完会嘲讽我不挪窝，爸爸其实想跟我聊很多很多，<strong>爸爸永远是我的爸爸</strong>！！！</p>\n<p>爸爸是很坚强的，爸爸只是累了先休息了，爸爸放心去吧，妈妈有孩子们照顾。</p>\n<p>答应我爸爸，如果天国有集市，等我去见你的时候，一定要骑单车载我去买菜。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/UYPQnVpywEtWDTZ.jpg\" alt=\"heaven\"></p>\n","site":{"data":{}},"_tags":[],"_categories":[{"name":"人生","path":"categories/人生/"},{"name":"gallery","path":"categories/gallery/"}],"excerpt":"","more":"<p>2022 年 1 月 10 日，腊月初八，爸爸走了，享年 56 岁。</p>\n<h1 id=\"时间，就非要这么快吗？\"><a href=\"#时间，就非要这么快吗？\" class=\"headerlink\" title=\"时间，就非要这么快吗？\"></a>时间，就非要这么快吗？</h1><p>「<strong>BB一个啊呜Check-in</strong>」，这是以前同事霞姐的女儿跟我瞎玩的时候随口编给我的名字，虽然没什么意义但我就是记住了，现在想想这个名字挺有哲学意义的。</p>\n<p>世上所有人都是某时某刻，「<strong>小 BB 一个，啊呜着 Check-in 到这世界</strong>」，问题是老天爷从不跟你商量什么时候你会 Check-out。</p>\n<p>10 月底的时候，从接到爸爸确诊肝癌的噩耗，一直到爸爸去世，只有短短两个多月时间。<br>我接到消息后立刻就动身回家，先是在汕头中心医院里陪护了一周，出院后又在家陪了爸爸一个月，之后我做了一个让我后悔很久的决定，为了老爸的医疗费我回来找工作了，这一走，就是天人两隔。</p>\n<h1 id=\"关于我的爸爸\"><a href=\"#关于我的爸爸\" class=\"headerlink\" title=\"关于我的爸爸\"></a>关于我的爸爸</h1><p>爸是土生土长的潮汕人，但跟很多人印象中的潮汕大男子主义形象相去甚远，他可吊儿郎当了，嘻嘻哈哈跟孩子们特别玩得来，小时候我爸最爱做的事就是抱我起来拿胡子渣扎我扎到哭！</p>\n<p>他故作深沉的时候，基本上我的屁股就要挨打了，就连打我都跟别人不一样，别人都是偷偷在家教训孩子，他非要上街追我，让我很没面子。有一次追我的时候我感觉要被他一个大巴掌呼后脑勺了，赶紧原地蹲下来，他自己惯性太大摔了一下，爬起来一边笑一边打我！</p>\n<p>因我太调皮，这样的苍蝇拍打屁股都打坏好几支了。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/7Gc6NUaBC98swhO.jpg\" alt=\"cyp\"></p>\n<p>现在想来，老爸对我性格的影响是挺大的，我也没个正经时候每天嘻嘻哈哈的，也特别喜欢跟小孩子们玩。</p>\n<p>老爸只有初中学历，听得懂普通话却不太会说，他蹩脚的普通话是我的一大快乐源泉，看他跟镇子上的外地人打交道特别有意思。</p>\n<p>即使操着蹩脚普通话，爸爸还是把几个孩子都培养上了大学，小学的时候我有很多同学特别是女同学，读着读着家里就让退学回去帮忙赚钱了，连初中都没上，可是我们家孩子不管男孩女孩只要想读书，爸爸从没说过半个不字。即使是我这种不学无术的娃，爸也支持我去读了中专。</p>\n<p>爸妈一直把我们几个小孩照顾得很好，这是妹妹出生前的一张家庭照。<br><img src=\"https://s2.loli.net/2022/05/19/8S6epUlrf1kVuLs.jpg\" alt=\"family\"></p>\n<p>这是妹妹三岁的时候，爸妈难得花钱去镇上照相馆拍的全家福。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/56yKQ2klJhfBTZ4.jpg\" alt=\"family\"></p>\n<p>那时爸爸 40 出头，眼神却充满朝气，不夸张地说精神气貌比现在很多年轻人都好多了。</p>\n<p>为了照顾家里四个小孩，年轻时候爸爸做过很多活计：</p>\n<ul>\n<li>扛着采购的一大袋小商品，连坐五天的绿皮火车去青岛摆摊做生意</li>\n<li>去工地上给工人做饭</li>\n<li>在镇子上开鞋店</li>\n<li>一砖一瓦地把家里房子给盖起来了</li>\n<li>…</li>\n</ul>\n<p>爸爸干过很多活，不过爸爸最让我骄傲的职业是 “大厨师”</p>\n<p>老爸做的菜是最好吃的，他炸的鸡腿比什么 KFC 麦当劳要好吃上百倍，鸡鸭鱼肉海鲜他样样都会做，就连早上的碎肉粥也煮得比外边馆子好吃。每年的年夜饭基本都是爸爸在张罗，对我而言所谓的年味其实就是爸爸做的饭香味。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/P4KqE8DBASe3wtr.jpg\" alt=\"年夜饭\"><br><img src=\"https://s2.loli.net/2022/05/19/9YaHhz8vDPKfUAI.jpg\" alt=\"年夜饭\"><br><img src=\"https://s2.loli.net/2022/05/19/8SOeIMmzWL1kjVy.jpg\" alt=\"早餐\"></p>\n<p>在他身上从没有什么 “巧父难为无米之炊”。<br>06 年「<strong>珍珠</strong>」台风登陆那段时间家里经济很困难，镇子上又处处积大水，出不了门买不了米，一家人只能躲在屋子里担心下一顿饭，爸爸却像变魔术一样从柜子里拿出一袋鱿鱼，用酒精和一个小金属盆就烤了一顿鱿鱼大餐，我至今还记得那滋味，从此酒精烤鱿鱼成了我回家跟我爸必点的菜品。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/bjtLxiWgUePNZCK.jpg\" alt=\"酒精烤鱿鱼\"></p>\n<p>老爸做饭太香的后果就是我没办法照顾好自己，去汕头上中专之前我体重一直很正常，出去后没有爸妈管，读书那几年我甚至有点营养不良。。。</p>\n<p>小时候的爸爸是无所不能的，大到盖房子刷油漆，小到修自行车，好像什么都会，总是抽着烟就把活干了，问他啥他都能把我唬得一愣一愣的（还骗我说米老鼠就是米缸里偷米的小老鼠，有机会就给我抓一只，到我工作了都没抓到，他是忘了，我还记得呢！）。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/UvRpsyO3JgPxQt6.jpg\" alt=\"Handy-man\"></p>\n<p>长大了慢慢发现爸爸也有不懂的东西，有他用不惯的洗衣机，有他不会打字的手机，也有他修不好的宽带。我回忆不起第一次我爸跟我请教电脑问题时我的神情，不过不用说一定很欠扁。</p>\n<h1 id=\"我与老爸\"><a href=\"#我与老爸\" class=\"headerlink\" title=\"我与老爸\"></a>我与老爸</h1><p>小学的时候，放学后总要缠着爸爸骑家里的凤凰老单车载我去买菜，不是因为我多体贴会帮忙，主要是想买什么菜都是我说了算，集市里还有一家老面馆，有时候嫌我烦，爸会点一份小面把我放在里头一个人吃面，买完菜再来拎我回家。</p>\n<p>小学时有多粘爸爸，青春期就有多烦爸爸，我的青春期非常叛逆，叛逆到我自己都觉得有点不可思议，以至于放着高中不读，自己去选了一个汕头的中专软件专业，想早点出来赚钱过独立生活，想远离父母。总之就是想方设法跟爸妈对着干，特别想证明自己。</p>\n<p>那时候跟老爸吵过好多架，不过最后老爸还是支持我的决定，在我软磨硬磨下还给我配了台 4k 多的笔记本电脑，就让我滚去汕头读书了，入学那天是我人生第一次坐大巴车。</p>\n<p>自打我出远门读书后，跟爸爸相处的时间就越来越少了，偶尔要生活费的时候才会厚脸皮打个电话撒撒娇，参加工作后甚至连电话都很少打了，只有逢年过节的时候才回去一段时间。</p>\n<p>那阵子，周末回家要坐没有固定时刻表的大巴车，一直坐到镇子公路入口，老爸会骑着电动车突突突地来接我回家，路上我再跟他唧唧哇哇说一堆学校的事，周日下午老爸再突突突把我送到公路入口，陪我等车嘱咐我注意安全。</p>\n<p>工作以后还是一样的大巴，一样的公路入口，一样的电动车突突突声，不一样的是老爸越来越白的头发，每多工作一年我都越能理解老爸的辛苦，回家路上的话却越来越少，因为觉得 “爸你该歇会儿了” 这种话太矫情。</p>\n<p>后来我继续作死，网上找到个工作机会，就跟我爸借了几千块，买了机票来西安工作了（记得买机票那天因为价格波动，多花了200块，可心疼了）。</p>\n<p>来了西安以后回家的次数就更少了，但每次回家爸爸都很替我骄傲，总跟别人说我特别厉害能一个人跑那么远去工作，工资还涨那么快 balabala 的，那时候我开始往家里寄钱，觉得终于能证明自己特别开心。</p>\n<h1 id=\"这幸福的日子就在今年结束了。\"><a href=\"#这幸福的日子就在今年结束了。\" class=\"headerlink\" title=\"这幸福的日子就在今年结束了。\"></a>这幸福的日子就在今年结束了。</h1><p>10 月底我姐告诉我老爸脸色越来越差肚子也在变大，去中心医院检查后确诊了肝癌晚期，当时感觉天都要塌了，立马买了机票回家。</p>\n<p>在医院看到我爸憔悴模样的时候差点就哭了，但还是强忍住了，只是抱了抱他然后开始耍宝想让他开心点。</p>\n<p>我们不想让他知道病情，就骗他说是比较严重的肝硬化要好好调养，家里人也纠结过无数次要不要说，最后决定不要让他担心，好好过完最后的日子。</p>\n<p>那天天气特别好，家里人都来看望爸爸，爸爸很开心一直在说话。<br><img src=\"https://s2.loli.net/2022/05/19/zutRaYhbL6fjWPQ.jpg\" alt=\"happy\"></p>\n<p>回汕头后的第一周，我一个人陪着老爸在医院调养，那时候他除了腹水很涨，有点憔悴以外，整个人还是很清醒的，睡得着也吃得下东西，有几次胃口好到能吃下一整碗牛肉粿条。</p>\n<p>中心医院靠近海滨路，我偶尔会带爸爸去海边走走，一路上讲我在汕头读书工作的事挺开心的，但每每快走到海边的时候爸爸就累了，该死的肝癌让他愈发容易累了，甚至坐一会儿屁股都会很痛。</p>\n<p>那一周每天除了打点滴，照顾三餐，削削水果以外，最开心的就是终于能敞开了跟爸爸聊天了，我回来后爸爸心情特别好，聊了很多他年轻时还有我出生前的事，讲他以前怎么种田，怎么搜罗鼓捣田里各种吃的，怎么学煮饭学修鞋，怎么坐五天火车去青岛摆摊，怎么被骗钱。。。从我老叔聊到小叔，大姑聊到小姑，聊到我们家还有个从未见过面的台湾远远远远房亲戚。</p>\n<p>那时候我才真切感受到老爸是活了半个世纪的人了，我其实只陪他走过一半不到的人生，老爸年轻过，也有意气风发的时候，做生意被坑后也会很迷茫，但他从不跟我们说这些事，他为了我们吃过的那些苦，老实说放我身上我不一定受得了。</p>\n<p>一周后给爸爸办理了出院手续，回家继续调养，当时医生已经告知没什么太好的治疗方案，到了晚期肝移植也不现实，只有靶向药这条路可以试试了。</p>\n<p>回家后又过了一周，我 27 岁生日那天，没有什么蛋糕和蜡烛，因为肝癌引发的便秘，生日是陪老爸老妈在医院急诊度过的。</p>\n<p>挺高兴的事是我弟给爸买了只鹦鹉🦜，最后这段日子里老爸每天都要逗逗这只小鹦鹉，跟小时候逗我们一样。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/saISOHqVcfdCoNm.jpg\" alt=\"bird\"></p>\n<p>老爸的旧手机太卡了，我给老爸买了一部 iPhone 13，他嘴上骂我浪费钱，过没几天就真香了，每次有人来看望他都要显摆一下我给他买的 iPhone。</p>\n<p>我姐还给搞了个麻将桌，让我爸没事教我们搓麻将。<br><img src=\"https://s2.loli.net/2022/05/19/5Qqpb2vzxeyLPYH.jpg\" alt=\"majiang\"></p>\n<p>老爸一直都很关心我，连我开发的小 App 叫什么名字他都知道，总问我是不是要开工作室要自己给自己发工资，收到钱了会不会给他提成。</p>\n<h1 id=\"最后的日子\"><a href=\"#最后的日子\" class=\"headerlink\" title=\"最后的日子\"></a>最后的日子</h1><p>出院后爸爸的病情挺稳定的，我们一直觉得靶向药有慢慢在起作用，开始抱有希望。</p>\n<p>谁曾想上周六早上一醒来就开始干呕吐血，身体状况开始急转直下，周天的时候爸爸已经开始神智不清，怎么喊他都没反应。</p>\n<p>挣扎了一宿，1 月 10 号，农历腊月初八，早晨 10:37 分，爸爸永远离开了我们。</p>\n<p>我一直想着等我攒够钱有点事业成家了，可以每年带着孩子还有爸妈四处旅游，把中国逛个遍拍一堆老年人旅游照回家里摆着得瑟，可以带着孩子义正严辞去跟爸妈把小时候的压岁钱讨回来，可以带爸妈逛大商场，包场看老电影。。。</p>\n<p>可我偏心的爸爸啊，只给了我他抚养我长大的记忆，却不给我报答的机会，非要教我子欲养而亲不待的道理。</p>\n<p>爸爸短暂的一生没有什么世俗意义上的大成就，更不是什么潮汕大老板，爸爸甚至有很多坏毛病，爱抽烟也爱熬夜，中年以后也爱乱发脾气。</p>\n<p>可是爸爸做的饭世界第一好吃，爸爸用双手养活了全家人，爸爸盖的房子坚固又温馨，爸爸供我们读书，爸爸陪我们长大，爸爸带我们去海边玩，爸爸教我们游泳，爸爸带我去买菜，爸爸偷带我出去吃夜宵，爸爸过年跟我赌钱会赖账，爸爸教我劳动最光荣，爸爸收到我的红包会乐开花，爸爸用我买的手机会跟别人显摆，爸爸中年发福了会去晨跑，爸爸晨跑完会嘲讽我不挪窝，爸爸其实想跟我聊很多很多，<strong>爸爸永远是我的爸爸</strong>！！！</p>\n<p>爸爸是很坚强的，爸爸只是累了先休息了，爸爸放心去吧，妈妈有孩子们照顾。</p>\n<p>答应我爸爸，如果天国有集市，等我去见你的时候，一定要骑单车载我去买菜。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/UYPQnVpywEtWDTZ.jpg\" alt=\"heaven\"></p>\n"},{"title":"打造小而美，Doll - 菜单栏小助手","date":"2022-01-27T16:00:00.000Z","featured_image":"https://s2.loli.net/2022/05/19/yhvJYpoaSHuMXcD.jpg","_content":"\n今天给大家分享（~~安利~~）我最近开发的一个 macOS app - **Doll**，它能改善你的 Mac 菜单栏体验。\n\n\n## 解决什么问题？\n如果你的 Mac 使用习惯也和我一样，喜欢【自动隐藏 Dock + 窗口全屏】进行日常工作，那么时不时地 **_遗漏工作消息_** 一定是你的日常。\n\n为什么总会遗漏消息？因为全屏的时候，Menu Bar 会隐藏，自动隐藏的 Dock 又很不好调出来（甚至可能划拉了五六下都出不来）。这两个 App 常驻的位置都看不到了，那一旦你没有看到一开始的消息通知（分神了或者喝茶喝水去了），等你回来继续工作，你根本不会意识到需要去调出 Dock 看看有没有红点点（当然离开座位要锁屏噢朋友）。\n\n非全屏模式也并非高枕无忧，我常用的 **Slack**，**Mail**，**Microsoft Teams** 之类的应用是没有菜单栏常驻图标的，只能通过 Dock 确认有没有新消息，你专心写代码的时候也不会时常调出 Dock。\n\n![dock-only](https://s2.loli.net/2022/05/19/XbqsVyT3EYFeMJU.png)\n\n如果应用提供了菜单栏常驻图标，那这个问题就可以很大程度上缓解，因为就算没有新消息的时候，为了看时间你也会时不时地喵上几眼菜单栏，而菜单栏比 Dock 更易见得多，就算隐藏了也只需要把鼠标移动到屏幕上方即可快速显示。\n\n**Doll** 解决的就是这么一个小小小小小...众需求，它可以帮你把 Dock 上的图标和未读消息同步到菜单栏上！\n\n![showcase](https://s2.loli.net/2022/05/19/moFvwhnVE7iUbjt.png)\n\n## 如何获取\n我把 **Doll** 开源并托管在了 Github 上，你可以去这个[页面下载 dmg 安装文件](https://github.com/xiaogdgenuine/Doll/releases)\n\n## 如何安装\n双击 dmg 文件，把 Doll.app 拖到 Application 目录\n![install](https://s2.loli.net/2022/05/19/15VfosQmnRw2Ppc.png)\n\n双击打开 Doll，此时系统应该会提示你这是未被验证的开发者发布的程序，不允许你打开，这是正常的因为我只是简单地发布了个未签名的 dmg 文件，并没有准备上架 App Store，点击 OK 继续。\n![prevent-open](https://s2.loli.net/2022/05/19/Tj5WC2XLZ6EgFzi.png)\n\nCommand + Space 打开 System Preferences > Security > General > Open anyway\n![open-anyway](https://s2.loli.net/2022/05/19/STHDeVWO1UJ5igy.png)\n\n## 如何使用\n使用方法很简单，App 启动后会要求你选择一个 App 进行观测，同时你也可以进行搜索:\n\n![usage](https://s2.loli.net/2022/05/19/6GmFulcTeUJsNIX.png)\n\n当你选择好要观测的 App 后，**Doll** 会请求你授予 **Accessibility API** 权限: \n![ask-for-permission](https://s2.loli.net/2022/05/19/ZfTzyiFx1r2PpkL.png)\n\n确保你授予了 **Doll.app** 使用 **Accessibility API** 的权限否则观测不会起任何作用。\n![grant-permission](https://s2.loli.net/2022/05/19/geSnwF1Y6DRItW4.png)\n\n搞定!\n**Doll** 现在会自动同步 Dock 的 App Badge 信息到菜单栏对应的图标，你不用再担心漏回消息了!\n\n# 切换当前观测的 App\n如果被观测的 App 正在运行, 点击菜单栏图标只会简单地打开那个 App。\n\n如果你想更改设置，只需要按住 \"**_Option 键(⌥)_**\" 然后点击图标.\n\n![config](https://s2.loli.net/2022/05/19/vZRXOU2AqTMlNiI.png)\n\n# 同时监测多个 App\n没有问题，点击这个小加号就行。\n![multiple-monitor](https://s2.loli.net/2022/05/19/G4cgpbK9sajNSWh.png)\n\n## 为什么需要 Accessibility API 权限？不会有安全隐患吧？\n**_绝对！不要！相信！互联网！_**\n\n当然有风险当然有隐患，没事不要瞎装软件。\n\n[**Doll**](https://github.com/xiaogdgenuine/Doll) 是开源的，如果你不放心我提供的 dmg 包，随时欢迎你克隆，审查，修改代码然后编译属于你自己的安装包。\n\n## **Doll**？什么怪名字。\n\n**Doll** 这个名字来自我很喜欢的动画[《黑之契约者》](https://zh.wikipedia.org/wiki/DARKER_THAN_BLACK), 动画里如果一个 **_契约者_** 一直使用他的超能力但却从不支付 **代价**, 那么最终他的能力会失控，丧失自我成为毫无感情的 **_Doll_**，终日面无表情（误.\n\n![doll](https://s2.loli.net/2022/05/19/yhvJYpoaSHuMXcD.jpg)\n\n如果我们工作中使用了太多的 **专注能力** 却从来不支付 **代价**，我们会变成什么呢～ >>__<<.\n\n\n## 怎么实现的？\n整个项目的 UI 完全由 SwiftUI 实现。\n\n核心的获取 Badge 信息的代码存放在单独的一个叫 [MonitorCore](https://github.com/xiaogdgenuine/Doll/tree/main/MonitorCore) 的 Swift Package 中，使用了 macOS 的 Accessibility API，因为 API 的限制，**Doll** 只能通过 Polling 的方式每隔 1s 同步一次 Badge 信息，不过无需担心性能，因为每个轮询操作只是简单的读取和设置文本，而且一天最多执行 86400 次，对 Mac 来说洒洒水而已啦。\n\n具体细节就有劳各位自己看代码啦。\n\n\n## 近来的一些些感想\n\n### 学习一门新语言的建议\n因为最近刚加入了很优秀的 iOS 开发团队，为了不拖后腿一直在恶补 Swift 各种语法和新特性，这个学习的过程也有一些心得想分享一下。\n\n我以前是专职前端开发的，最近一年多才慢慢接触 iOS 开发，这个小项目也是我为了用熟 Swift 语言的各种新特性给自己找的课题。\n\n以前学一门计算机语言时我喜欢把一整本教程书啃完再动手实践，一边看书一边心里还会默念类似 “啊这都要单独写出来吗谁不懂啊”，“不就是个尾递归优化嘛又在这水页数” 的话，可每每到了看完书要动手的时候就抓瞎了，好像什么语法都懂，但就是没有兴趣用这门语言写点东西，最后往往就不了了之，过个一年半载语法又忘光了，学 Java, Python，Ruby 都是这样。\n\n但其实我也有学得蛮好的语言，C# 尽管多年没复习了每年还是能用它写点自娱自乐的 Windows 软件，JavaScript 更不用说是看家吃饭的手艺，轮子一个接一个造，近两年来 Swift 也是用得越来越熟练，甚至还开发了一个广受好评的 [App](https://apps.apple.com/cn/app/%E5%8F%AF%E8%BE%BE%E6%BC%AB%E7%94%BB-%E6%9C%AC%E5%9C%B0%E6%BC%AB%E7%94%BB%E9%98%85%E8%AF%BB%E5%99%A8/id1545372338)。\n\n回顾一下我用得最好的这三门语言，发觉我反而没有系统地学过它们，\n- C# 能学起来是因为想用 WPF 实现一个炫酷的桌面聊天软件。\n- JavaScript 能学起来是因为第一家公司的宣传网站是我一个人搭的。\n- Swift 能学起来是因为我买了 iPad 想好好看漫画而不得。\n\n基本上稍微系统地学习这些语言都是在我已经做出了一点成果之后了，需要更精进的时候我才会去买一些书来看，而且此时我的针对性很强，我要解决的就是开发过程中遇到的非常具体的问题，要买什么书要学什么技术我基本也都门清了。\n\n而怎么也学不好的那几门语言，是因为我就从没想好用它们做点什么，学习的动力来源非常单一：“这么火应该学”。\n\n说出来不怕大伙笑话，什么异步多线程编程，竞态资源，自旋锁，信号量，Async Await，内存泄露排查，性能调优，我这种半路出家的刚入行那几年根本连概念都看不懂，书也看不下去。\n\n可一旦开始写一个感兴趣的项目了，我就想提高它的稳定性，改善它的性能，各种变着法想让它更好用，于是这个过程里我就什么语言特性都学到了，用得也更扎实了，成就感是非常强的，经常解决完问题后激动地原地跺 JoJo！\n\n说到底计算机科学还是更偏向实践一些，因此对于语言初学者，不管你在学什么语言，我的建议是学完简单的基础后就先把书合起来吧，马上动手去做点东西才能保住你那份热情，前期多做，后期多学，会是正反馈周期比较合理的方式。\n\n### iOS 开发的效率\n搞 iOS 开发的同学们，SwiftUI 现在必须立刻马上武装到你的技能树上，投资回报率是近几年最高的了！\n\n**Doll** 仅仅花了我 3 个晚上就写完了，90% 的时间其实花在了查 macOS 的 API 文档上，UI 部分可以说毫无阻力，想哪写哪，随时预览随时调节。\n\n虽然因为用了较新的 SwiftUI 所以 **Doll** 只能跑在 macOS 11.0(Big Sur) 以上的系统，但这个牺牲完全值得！如果我为了兼容老系统改用 UIKit 实现界面，我这会儿应该还在纠结为什么 UICollectionViewDataSource 就是不更新，Layout Constraints 应该 Enable 哪几个，Disable 哪几个，要怎么实现数据绑定。。。等我实现出一版 UIKit，竞品早已经迭代了好几版 UI 了。\n    \n\n### 规划\n虽然说有想法就赶紧上机开码的感觉特别爽（谁开机谁知道），但该缓一缓的时候还是得及时刹车。\n\n开发 **Doll** 的时候我就犯了急性子的大错，想当然觉得全屏模式时，应该在有新消息的时候显示一个小小的通知 Popover 好让用户注意到。为了实现这个 Popover 又花了一小时查怎么确定当前窗口是全屏模式（实名吐槽 Apple 烂文档，交了那么多钱就这体验），然后又一顿调试终于实现了。\n\n最后当我在全屏模式下发了一条测试消息的时候，我傻眼了：\n\n![useless](https://s2.loli.net/2022/05/19/QuxcpK2rw6URBez.png)\n\n你说这一个多小时能找谁要回来？其实脑子只要停下来想一想马上就能意识到这个功能鸡肋至极，可是脑子说不行，你不能停，这个 idea 太棒了用户一定会赞不绝口的！\n\n这种错我还是偶尔会犯，对抗本能太难了，这个鸡肋功能就留在 **Doll** 里作为提醒吧。\n\n\n## 最后\n希望 **Doll** 这个小作品能小小地提高大家的工作体验，也祝愿各位大姑娘小伙子们能找回那种开发软件解决问题的纯粹乐趣。\n","source":"_posts/doll-the-badge-catcher.md","raw":"---\ntitle: \"打造小而美，Doll - 菜单栏小助手\"\ndate: 2022-01-28\ncategories:\n- [gallery]\ntags:\n- Doll\n- Menu bar\n- Productivity\nfeatured_image: https://s2.loli.net/2022/05/19/yhvJYpoaSHuMXcD.jpg\n---\n\n今天给大家分享（~~安利~~）我最近开发的一个 macOS app - **Doll**，它能改善你的 Mac 菜单栏体验。\n\n\n## 解决什么问题？\n如果你的 Mac 使用习惯也和我一样，喜欢【自动隐藏 Dock + 窗口全屏】进行日常工作，那么时不时地 **_遗漏工作消息_** 一定是你的日常。\n\n为什么总会遗漏消息？因为全屏的时候，Menu Bar 会隐藏，自动隐藏的 Dock 又很不好调出来（甚至可能划拉了五六下都出不来）。这两个 App 常驻的位置都看不到了，那一旦你没有看到一开始的消息通知（分神了或者喝茶喝水去了），等你回来继续工作，你根本不会意识到需要去调出 Dock 看看有没有红点点（当然离开座位要锁屏噢朋友）。\n\n非全屏模式也并非高枕无忧，我常用的 **Slack**，**Mail**，**Microsoft Teams** 之类的应用是没有菜单栏常驻图标的，只能通过 Dock 确认有没有新消息，你专心写代码的时候也不会时常调出 Dock。\n\n![dock-only](https://s2.loli.net/2022/05/19/XbqsVyT3EYFeMJU.png)\n\n如果应用提供了菜单栏常驻图标，那这个问题就可以很大程度上缓解，因为就算没有新消息的时候，为了看时间你也会时不时地喵上几眼菜单栏，而菜单栏比 Dock 更易见得多，就算隐藏了也只需要把鼠标移动到屏幕上方即可快速显示。\n\n**Doll** 解决的就是这么一个小小小小小...众需求，它可以帮你把 Dock 上的图标和未读消息同步到菜单栏上！\n\n![showcase](https://s2.loli.net/2022/05/19/moFvwhnVE7iUbjt.png)\n\n## 如何获取\n我把 **Doll** 开源并托管在了 Github 上，你可以去这个[页面下载 dmg 安装文件](https://github.com/xiaogdgenuine/Doll/releases)\n\n## 如何安装\n双击 dmg 文件，把 Doll.app 拖到 Application 目录\n![install](https://s2.loli.net/2022/05/19/15VfosQmnRw2Ppc.png)\n\n双击打开 Doll，此时系统应该会提示你这是未被验证的开发者发布的程序，不允许你打开，这是正常的因为我只是简单地发布了个未签名的 dmg 文件，并没有准备上架 App Store，点击 OK 继续。\n![prevent-open](https://s2.loli.net/2022/05/19/Tj5WC2XLZ6EgFzi.png)\n\nCommand + Space 打开 System Preferences > Security > General > Open anyway\n![open-anyway](https://s2.loli.net/2022/05/19/STHDeVWO1UJ5igy.png)\n\n## 如何使用\n使用方法很简单，App 启动后会要求你选择一个 App 进行观测，同时你也可以进行搜索:\n\n![usage](https://s2.loli.net/2022/05/19/6GmFulcTeUJsNIX.png)\n\n当你选择好要观测的 App 后，**Doll** 会请求你授予 **Accessibility API** 权限: \n![ask-for-permission](https://s2.loli.net/2022/05/19/ZfTzyiFx1r2PpkL.png)\n\n确保你授予了 **Doll.app** 使用 **Accessibility API** 的权限否则观测不会起任何作用。\n![grant-permission](https://s2.loli.net/2022/05/19/geSnwF1Y6DRItW4.png)\n\n搞定!\n**Doll** 现在会自动同步 Dock 的 App Badge 信息到菜单栏对应的图标，你不用再担心漏回消息了!\n\n# 切换当前观测的 App\n如果被观测的 App 正在运行, 点击菜单栏图标只会简单地打开那个 App。\n\n如果你想更改设置，只需要按住 \"**_Option 键(⌥)_**\" 然后点击图标.\n\n![config](https://s2.loli.net/2022/05/19/vZRXOU2AqTMlNiI.png)\n\n# 同时监测多个 App\n没有问题，点击这个小加号就行。\n![multiple-monitor](https://s2.loli.net/2022/05/19/G4cgpbK9sajNSWh.png)\n\n## 为什么需要 Accessibility API 权限？不会有安全隐患吧？\n**_绝对！不要！相信！互联网！_**\n\n当然有风险当然有隐患，没事不要瞎装软件。\n\n[**Doll**](https://github.com/xiaogdgenuine/Doll) 是开源的，如果你不放心我提供的 dmg 包，随时欢迎你克隆，审查，修改代码然后编译属于你自己的安装包。\n\n## **Doll**？什么怪名字。\n\n**Doll** 这个名字来自我很喜欢的动画[《黑之契约者》](https://zh.wikipedia.org/wiki/DARKER_THAN_BLACK), 动画里如果一个 **_契约者_** 一直使用他的超能力但却从不支付 **代价**, 那么最终他的能力会失控，丧失自我成为毫无感情的 **_Doll_**，终日面无表情（误.\n\n![doll](https://s2.loli.net/2022/05/19/yhvJYpoaSHuMXcD.jpg)\n\n如果我们工作中使用了太多的 **专注能力** 却从来不支付 **代价**，我们会变成什么呢～ >>__<<.\n\n\n## 怎么实现的？\n整个项目的 UI 完全由 SwiftUI 实现。\n\n核心的获取 Badge 信息的代码存放在单独的一个叫 [MonitorCore](https://github.com/xiaogdgenuine/Doll/tree/main/MonitorCore) 的 Swift Package 中，使用了 macOS 的 Accessibility API，因为 API 的限制，**Doll** 只能通过 Polling 的方式每隔 1s 同步一次 Badge 信息，不过无需担心性能，因为每个轮询操作只是简单的读取和设置文本，而且一天最多执行 86400 次，对 Mac 来说洒洒水而已啦。\n\n具体细节就有劳各位自己看代码啦。\n\n\n## 近来的一些些感想\n\n### 学习一门新语言的建议\n因为最近刚加入了很优秀的 iOS 开发团队，为了不拖后腿一直在恶补 Swift 各种语法和新特性，这个学习的过程也有一些心得想分享一下。\n\n我以前是专职前端开发的，最近一年多才慢慢接触 iOS 开发，这个小项目也是我为了用熟 Swift 语言的各种新特性给自己找的课题。\n\n以前学一门计算机语言时我喜欢把一整本教程书啃完再动手实践，一边看书一边心里还会默念类似 “啊这都要单独写出来吗谁不懂啊”，“不就是个尾递归优化嘛又在这水页数” 的话，可每每到了看完书要动手的时候就抓瞎了，好像什么语法都懂，但就是没有兴趣用这门语言写点东西，最后往往就不了了之，过个一年半载语法又忘光了，学 Java, Python，Ruby 都是这样。\n\n但其实我也有学得蛮好的语言，C# 尽管多年没复习了每年还是能用它写点自娱自乐的 Windows 软件，JavaScript 更不用说是看家吃饭的手艺，轮子一个接一个造，近两年来 Swift 也是用得越来越熟练，甚至还开发了一个广受好评的 [App](https://apps.apple.com/cn/app/%E5%8F%AF%E8%BE%BE%E6%BC%AB%E7%94%BB-%E6%9C%AC%E5%9C%B0%E6%BC%AB%E7%94%BB%E9%98%85%E8%AF%BB%E5%99%A8/id1545372338)。\n\n回顾一下我用得最好的这三门语言，发觉我反而没有系统地学过它们，\n- C# 能学起来是因为想用 WPF 实现一个炫酷的桌面聊天软件。\n- JavaScript 能学起来是因为第一家公司的宣传网站是我一个人搭的。\n- Swift 能学起来是因为我买了 iPad 想好好看漫画而不得。\n\n基本上稍微系统地学习这些语言都是在我已经做出了一点成果之后了，需要更精进的时候我才会去买一些书来看，而且此时我的针对性很强，我要解决的就是开发过程中遇到的非常具体的问题，要买什么书要学什么技术我基本也都门清了。\n\n而怎么也学不好的那几门语言，是因为我就从没想好用它们做点什么，学习的动力来源非常单一：“这么火应该学”。\n\n说出来不怕大伙笑话，什么异步多线程编程，竞态资源，自旋锁，信号量，Async Await，内存泄露排查，性能调优，我这种半路出家的刚入行那几年根本连概念都看不懂，书也看不下去。\n\n可一旦开始写一个感兴趣的项目了，我就想提高它的稳定性，改善它的性能，各种变着法想让它更好用，于是这个过程里我就什么语言特性都学到了，用得也更扎实了，成就感是非常强的，经常解决完问题后激动地原地跺 JoJo！\n\n说到底计算机科学还是更偏向实践一些，因此对于语言初学者，不管你在学什么语言，我的建议是学完简单的基础后就先把书合起来吧，马上动手去做点东西才能保住你那份热情，前期多做，后期多学，会是正反馈周期比较合理的方式。\n\n### iOS 开发的效率\n搞 iOS 开发的同学们，SwiftUI 现在必须立刻马上武装到你的技能树上，投资回报率是近几年最高的了！\n\n**Doll** 仅仅花了我 3 个晚上就写完了，90% 的时间其实花在了查 macOS 的 API 文档上，UI 部分可以说毫无阻力，想哪写哪，随时预览随时调节。\n\n虽然因为用了较新的 SwiftUI 所以 **Doll** 只能跑在 macOS 11.0(Big Sur) 以上的系统，但这个牺牲完全值得！如果我为了兼容老系统改用 UIKit 实现界面，我这会儿应该还在纠结为什么 UICollectionViewDataSource 就是不更新，Layout Constraints 应该 Enable 哪几个，Disable 哪几个，要怎么实现数据绑定。。。等我实现出一版 UIKit，竞品早已经迭代了好几版 UI 了。\n    \n\n### 规划\n虽然说有想法就赶紧上机开码的感觉特别爽（谁开机谁知道），但该缓一缓的时候还是得及时刹车。\n\n开发 **Doll** 的时候我就犯了急性子的大错，想当然觉得全屏模式时，应该在有新消息的时候显示一个小小的通知 Popover 好让用户注意到。为了实现这个 Popover 又花了一小时查怎么确定当前窗口是全屏模式（实名吐槽 Apple 烂文档，交了那么多钱就这体验），然后又一顿调试终于实现了。\n\n最后当我在全屏模式下发了一条测试消息的时候，我傻眼了：\n\n![useless](https://s2.loli.net/2022/05/19/QuxcpK2rw6URBez.png)\n\n你说这一个多小时能找谁要回来？其实脑子只要停下来想一想马上就能意识到这个功能鸡肋至极，可是脑子说不行，你不能停，这个 idea 太棒了用户一定会赞不绝口的！\n\n这种错我还是偶尔会犯，对抗本能太难了，这个鸡肋功能就留在 **Doll** 里作为提醒吧。\n\n\n## 最后\n希望 **Doll** 这个小作品能小小地提高大家的工作体验，也祝愿各位大姑娘小伙子们能找回那种开发软件解决问题的纯粹乐趣。\n","slug":"doll-the-badge-catcher","published":1,"updated":"2022-05-22T04:32:40.363Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3gtogs300050xurdkg31mom","content":"<p>今天给大家分享（<del>安利</del>）我最近开发的一个 macOS app - <strong>Doll</strong>，它能改善你的 Mac 菜单栏体验。</p>\n<h2 id=\"解决什么问题？\"><a href=\"#解决什么问题？\" class=\"headerlink\" title=\"解决什么问题？\"></a>解决什么问题？</h2><p>如果你的 Mac 使用习惯也和我一样，喜欢【自动隐藏 Dock + 窗口全屏】进行日常工作，那么时不时地 <strong><em>遗漏工作消息</em></strong> 一定是你的日常。</p>\n<p>为什么总会遗漏消息？因为全屏的时候，Menu Bar 会隐藏，自动隐藏的 Dock 又很不好调出来（甚至可能划拉了五六下都出不来）。这两个 App 常驻的位置都看不到了，那一旦你没有看到一开始的消息通知（分神了或者喝茶喝水去了），等你回来继续工作，你根本不会意识到需要去调出 Dock 看看有没有红点点（当然离开座位要锁屏噢朋友）。</p>\n<p>非全屏模式也并非高枕无忧，我常用的 <strong>Slack</strong>，<strong>Mail</strong>，<strong>Microsoft Teams</strong> 之类的应用是没有菜单栏常驻图标的，只能通过 Dock 确认有没有新消息，你专心写代码的时候也不会时常调出 Dock。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/XbqsVyT3EYFeMJU.png\" alt=\"dock-only\"></p>\n<p>如果应用提供了菜单栏常驻图标，那这个问题就可以很大程度上缓解，因为就算没有新消息的时候，为了看时间你也会时不时地喵上几眼菜单栏，而菜单栏比 Dock 更易见得多，就算隐藏了也只需要把鼠标移动到屏幕上方即可快速显示。</p>\n<p><strong>Doll</strong> 解决的就是这么一个小小小小小…众需求，它可以帮你把 Dock 上的图标和未读消息同步到菜单栏上！</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/moFvwhnVE7iUbjt.png\" alt=\"showcase\"></p>\n<h2 id=\"如何获取\"><a href=\"#如何获取\" class=\"headerlink\" title=\"如何获取\"></a>如何获取</h2><p>我把 <strong>Doll</strong> 开源并托管在了 Github 上，你可以去这个<a href=\"https://github.com/xiaogdgenuine/Doll/releases\">页面下载 dmg 安装文件</a></p>\n<h2 id=\"如何安装\"><a href=\"#如何安装\" class=\"headerlink\" title=\"如何安装\"></a>如何安装</h2><p>双击 dmg 文件，把 Doll.app 拖到 Application 目录<br><img src=\"https://s2.loli.net/2022/05/19/15VfosQmnRw2Ppc.png\" alt=\"install\"></p>\n<p>双击打开 Doll，此时系统应该会提示你这是未被验证的开发者发布的程序，不允许你打开，这是正常的因为我只是简单地发布了个未签名的 dmg 文件，并没有准备上架 App Store，点击 OK 继续。<br><img src=\"https://s2.loli.net/2022/05/19/Tj5WC2XLZ6EgFzi.png\" alt=\"prevent-open\"></p>\n<p>Command + Space 打开 System Preferences &gt; Security &gt; General &gt; Open anyway<br><img src=\"https://s2.loli.net/2022/05/19/STHDeVWO1UJ5igy.png\" alt=\"open-anyway\"></p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>使用方法很简单，App 启动后会要求你选择一个 App 进行观测，同时你也可以进行搜索:</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/6GmFulcTeUJsNIX.png\" alt=\"usage\"></p>\n<p>当你选择好要观测的 App 后，<strong>Doll</strong> 会请求你授予 <strong>Accessibility API</strong> 权限:<br><img src=\"https://s2.loli.net/2022/05/19/ZfTzyiFx1r2PpkL.png\" alt=\"ask-for-permission\"></p>\n<p>确保你授予了 <strong>Doll.app</strong> 使用 <strong>Accessibility API</strong> 的权限否则观测不会起任何作用。<br><img src=\"https://s2.loli.net/2022/05/19/geSnwF1Y6DRItW4.png\" alt=\"grant-permission\"></p>\n<p>搞定!<br><strong>Doll</strong> 现在会自动同步 Dock 的 App Badge 信息到菜单栏对应的图标，你不用再担心漏回消息了!</p>\n<h1 id=\"切换当前观测的-App\"><a href=\"#切换当前观测的-App\" class=\"headerlink\" title=\"切换当前观测的 App\"></a>切换当前观测的 App</h1><p>如果被观测的 App 正在运行, 点击菜单栏图标只会简单地打开那个 App。</p>\n<p>如果你想更改设置，只需要按住 “<strong><em>Option 键(⌥)</em></strong>“ 然后点击图标.</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/vZRXOU2AqTMlNiI.png\" alt=\"config\"></p>\n<h1 id=\"同时监测多个-App\"><a href=\"#同时监测多个-App\" class=\"headerlink\" title=\"同时监测多个 App\"></a>同时监测多个 App</h1><p>没有问题，点击这个小加号就行。<br><img src=\"https://s2.loli.net/2022/05/19/G4cgpbK9sajNSWh.png\" alt=\"multiple-monitor\"></p>\n<h2 id=\"为什么需要-Accessibility-API-权限？不会有安全隐患吧？\"><a href=\"#为什么需要-Accessibility-API-权限？不会有安全隐患吧？\" class=\"headerlink\" title=\"为什么需要 Accessibility API 权限？不会有安全隐患吧？\"></a>为什么需要 Accessibility API 权限？不会有安全隐患吧？</h2><p><strong><em>绝对！不要！相信！互联网！</em></strong></p>\n<p>当然有风险当然有隐患，没事不要瞎装软件。</p>\n<p><a href=\"https://github.com/xiaogdgenuine/Doll\"><strong>Doll</strong></a> 是开源的，如果你不放心我提供的 dmg 包，随时欢迎你克隆，审查，修改代码然后编译属于你自己的安装包。</p>\n<h2 id=\"Doll？什么怪名字。\"><a href=\"#Doll？什么怪名字。\" class=\"headerlink\" title=\"Doll？什么怪名字。\"></a><strong>Doll</strong>？什么怪名字。</h2><p><strong>Doll</strong> 这个名字来自我很喜欢的动画<a href=\"https://zh.wikipedia.org/wiki/DARKER_THAN_BLACK\">《黑之契约者》</a>, 动画里如果一个 <strong><em>契约者</em></strong> 一直使用他的超能力但却从不支付 <strong>代价</strong>, 那么最终他的能力会失控，丧失自我成为毫无感情的 **<em>Doll</em>**，终日面无表情（误.</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/yhvJYpoaSHuMXcD.jpg\" alt=\"doll\"></p>\n<p>如果我们工作中使用了太多的 <strong>专注能力</strong> 却从来不支付 <strong>代价</strong>，我们会变成什么呢～ &gt;&gt;__&lt;&lt;.</p>\n<h2 id=\"怎么实现的？\"><a href=\"#怎么实现的？\" class=\"headerlink\" title=\"怎么实现的？\"></a>怎么实现的？</h2><p>整个项目的 UI 完全由 SwiftUI 实现。</p>\n<p>核心的获取 Badge 信息的代码存放在单独的一个叫 <a href=\"https://github.com/xiaogdgenuine/Doll/tree/main/MonitorCore\">MonitorCore</a> 的 Swift Package 中，使用了 macOS 的 Accessibility API，因为 API 的限制，<strong>Doll</strong> 只能通过 Polling 的方式每隔 1s 同步一次 Badge 信息，不过无需担心性能，因为每个轮询操作只是简单的读取和设置文本，而且一天最多执行 86400 次，对 Mac 来说洒洒水而已啦。</p>\n<p>具体细节就有劳各位自己看代码啦。</p>\n<h2 id=\"近来的一些些感想\"><a href=\"#近来的一些些感想\" class=\"headerlink\" title=\"近来的一些些感想\"></a>近来的一些些感想</h2><h3 id=\"学习一门新语言的建议\"><a href=\"#学习一门新语言的建议\" class=\"headerlink\" title=\"学习一门新语言的建议\"></a>学习一门新语言的建议</h3><p>因为最近刚加入了很优秀的 iOS 开发团队，为了不拖后腿一直在恶补 Swift 各种语法和新特性，这个学习的过程也有一些心得想分享一下。</p>\n<p>我以前是专职前端开发的，最近一年多才慢慢接触 iOS 开发，这个小项目也是我为了用熟 Swift 语言的各种新特性给自己找的课题。</p>\n<p>以前学一门计算机语言时我喜欢把一整本教程书啃完再动手实践，一边看书一边心里还会默念类似 “啊这都要单独写出来吗谁不懂啊”，“不就是个尾递归优化嘛又在这水页数” 的话，可每每到了看完书要动手的时候就抓瞎了，好像什么语法都懂，但就是没有兴趣用这门语言写点东西，最后往往就不了了之，过个一年半载语法又忘光了，学 Java, Python，Ruby 都是这样。</p>\n<p>但其实我也有学得蛮好的语言，C# 尽管多年没复习了每年还是能用它写点自娱自乐的 Windows 软件，JavaScript 更不用说是看家吃饭的手艺，轮子一个接一个造，近两年来 Swift 也是用得越来越熟练，甚至还开发了一个广受好评的 <a href=\"https://apps.apple.com/cn/app/%E5%8F%AF%E8%BE%BE%E6%BC%AB%E7%94%BB-%E6%9C%AC%E5%9C%B0%E6%BC%AB%E7%94%BB%E9%98%85%E8%AF%BB%E5%99%A8/id1545372338\">App</a>。</p>\n<p>回顾一下我用得最好的这三门语言，发觉我反而没有系统地学过它们，</p>\n<ul>\n<li>C# 能学起来是因为想用 WPF 实现一个炫酷的桌面聊天软件。</li>\n<li>JavaScript 能学起来是因为第一家公司的宣传网站是我一个人搭的。</li>\n<li>Swift 能学起来是因为我买了 iPad 想好好看漫画而不得。</li>\n</ul>\n<p>基本上稍微系统地学习这些语言都是在我已经做出了一点成果之后了，需要更精进的时候我才会去买一些书来看，而且此时我的针对性很强，我要解决的就是开发过程中遇到的非常具体的问题，要买什么书要学什么技术我基本也都门清了。</p>\n<p>而怎么也学不好的那几门语言，是因为我就从没想好用它们做点什么，学习的动力来源非常单一：“这么火应该学”。</p>\n<p>说出来不怕大伙笑话，什么异步多线程编程，竞态资源，自旋锁，信号量，Async Await，内存泄露排查，性能调优，我这种半路出家的刚入行那几年根本连概念都看不懂，书也看不下去。</p>\n<p>可一旦开始写一个感兴趣的项目了，我就想提高它的稳定性，改善它的性能，各种变着法想让它更好用，于是这个过程里我就什么语言特性都学到了，用得也更扎实了，成就感是非常强的，经常解决完问题后激动地原地跺 JoJo！</p>\n<p>说到底计算机科学还是更偏向实践一些，因此对于语言初学者，不管你在学什么语言，我的建议是学完简单的基础后就先把书合起来吧，马上动手去做点东西才能保住你那份热情，前期多做，后期多学，会是正反馈周期比较合理的方式。</p>\n<h3 id=\"iOS-开发的效率\"><a href=\"#iOS-开发的效率\" class=\"headerlink\" title=\"iOS 开发的效率\"></a>iOS 开发的效率</h3><p>搞 iOS 开发的同学们，SwiftUI 现在必须立刻马上武装到你的技能树上，投资回报率是近几年最高的了！</p>\n<p><strong>Doll</strong> 仅仅花了我 3 个晚上就写完了，90% 的时间其实花在了查 macOS 的 API 文档上，UI 部分可以说毫无阻力，想哪写哪，随时预览随时调节。</p>\n<p>虽然因为用了较新的 SwiftUI 所以 <strong>Doll</strong> 只能跑在 macOS 11.0(Big Sur) 以上的系统，但这个牺牲完全值得！如果我为了兼容老系统改用 UIKit 实现界面，我这会儿应该还在纠结为什么 UICollectionViewDataSource 就是不更新，Layout Constraints 应该 Enable 哪几个，Disable 哪几个，要怎么实现数据绑定。。。等我实现出一版 UIKit，竞品早已经迭代了好几版 UI 了。</p>\n<h3 id=\"规划\"><a href=\"#规划\" class=\"headerlink\" title=\"规划\"></a>规划</h3><p>虽然说有想法就赶紧上机开码的感觉特别爽（谁开机谁知道），但该缓一缓的时候还是得及时刹车。</p>\n<p>开发 <strong>Doll</strong> 的时候我就犯了急性子的大错，想当然觉得全屏模式时，应该在有新消息的时候显示一个小小的通知 Popover 好让用户注意到。为了实现这个 Popover 又花了一小时查怎么确定当前窗口是全屏模式（实名吐槽 Apple 烂文档，交了那么多钱就这体验），然后又一顿调试终于实现了。</p>\n<p>最后当我在全屏模式下发了一条测试消息的时候，我傻眼了：</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/QuxcpK2rw6URBez.png\" alt=\"useless\"></p>\n<p>你说这一个多小时能找谁要回来？其实脑子只要停下来想一想马上就能意识到这个功能鸡肋至极，可是脑子说不行，你不能停，这个 idea 太棒了用户一定会赞不绝口的！</p>\n<p>这种错我还是偶尔会犯，对抗本能太难了，这个鸡肋功能就留在 <strong>Doll</strong> 里作为提醒吧。</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>希望 <strong>Doll</strong> 这个小作品能小小地提高大家的工作体验，也祝愿各位大姑娘小伙子们能找回那种开发软件解决问题的纯粹乐趣。</p>\n","site":{"data":{}},"_tags":[],"_categories":[{"name":"gallery","path":"categories/gallery/"}],"excerpt":"","more":"<p>今天给大家分享（<del>安利</del>）我最近开发的一个 macOS app - <strong>Doll</strong>，它能改善你的 Mac 菜单栏体验。</p>\n<h2 id=\"解决什么问题？\"><a href=\"#解决什么问题？\" class=\"headerlink\" title=\"解决什么问题？\"></a>解决什么问题？</h2><p>如果你的 Mac 使用习惯也和我一样，喜欢【自动隐藏 Dock + 窗口全屏】进行日常工作，那么时不时地 <strong><em>遗漏工作消息</em></strong> 一定是你的日常。</p>\n<p>为什么总会遗漏消息？因为全屏的时候，Menu Bar 会隐藏，自动隐藏的 Dock 又很不好调出来（甚至可能划拉了五六下都出不来）。这两个 App 常驻的位置都看不到了，那一旦你没有看到一开始的消息通知（分神了或者喝茶喝水去了），等你回来继续工作，你根本不会意识到需要去调出 Dock 看看有没有红点点（当然离开座位要锁屏噢朋友）。</p>\n<p>非全屏模式也并非高枕无忧，我常用的 <strong>Slack</strong>，<strong>Mail</strong>，<strong>Microsoft Teams</strong> 之类的应用是没有菜单栏常驻图标的，只能通过 Dock 确认有没有新消息，你专心写代码的时候也不会时常调出 Dock。</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/XbqsVyT3EYFeMJU.png\" alt=\"dock-only\"></p>\n<p>如果应用提供了菜单栏常驻图标，那这个问题就可以很大程度上缓解，因为就算没有新消息的时候，为了看时间你也会时不时地喵上几眼菜单栏，而菜单栏比 Dock 更易见得多，就算隐藏了也只需要把鼠标移动到屏幕上方即可快速显示。</p>\n<p><strong>Doll</strong> 解决的就是这么一个小小小小小…众需求，它可以帮你把 Dock 上的图标和未读消息同步到菜单栏上！</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/moFvwhnVE7iUbjt.png\" alt=\"showcase\"></p>\n<h2 id=\"如何获取\"><a href=\"#如何获取\" class=\"headerlink\" title=\"如何获取\"></a>如何获取</h2><p>我把 <strong>Doll</strong> 开源并托管在了 Github 上，你可以去这个<a href=\"https://github.com/xiaogdgenuine/Doll/releases\">页面下载 dmg 安装文件</a></p>\n<h2 id=\"如何安装\"><a href=\"#如何安装\" class=\"headerlink\" title=\"如何安装\"></a>如何安装</h2><p>双击 dmg 文件，把 Doll.app 拖到 Application 目录<br><img src=\"https://s2.loli.net/2022/05/19/15VfosQmnRw2Ppc.png\" alt=\"install\"></p>\n<p>双击打开 Doll，此时系统应该会提示你这是未被验证的开发者发布的程序，不允许你打开，这是正常的因为我只是简单地发布了个未签名的 dmg 文件，并没有准备上架 App Store，点击 OK 继续。<br><img src=\"https://s2.loli.net/2022/05/19/Tj5WC2XLZ6EgFzi.png\" alt=\"prevent-open\"></p>\n<p>Command + Space 打开 System Preferences &gt; Security &gt; General &gt; Open anyway<br><img src=\"https://s2.loli.net/2022/05/19/STHDeVWO1UJ5igy.png\" alt=\"open-anyway\"></p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>使用方法很简单，App 启动后会要求你选择一个 App 进行观测，同时你也可以进行搜索:</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/6GmFulcTeUJsNIX.png\" alt=\"usage\"></p>\n<p>当你选择好要观测的 App 后，<strong>Doll</strong> 会请求你授予 <strong>Accessibility API</strong> 权限:<br><img src=\"https://s2.loli.net/2022/05/19/ZfTzyiFx1r2PpkL.png\" alt=\"ask-for-permission\"></p>\n<p>确保你授予了 <strong>Doll.app</strong> 使用 <strong>Accessibility API</strong> 的权限否则观测不会起任何作用。<br><img src=\"https://s2.loli.net/2022/05/19/geSnwF1Y6DRItW4.png\" alt=\"grant-permission\"></p>\n<p>搞定!<br><strong>Doll</strong> 现在会自动同步 Dock 的 App Badge 信息到菜单栏对应的图标，你不用再担心漏回消息了!</p>\n<h1 id=\"切换当前观测的-App\"><a href=\"#切换当前观测的-App\" class=\"headerlink\" title=\"切换当前观测的 App\"></a>切换当前观测的 App</h1><p>如果被观测的 App 正在运行, 点击菜单栏图标只会简单地打开那个 App。</p>\n<p>如果你想更改设置，只需要按住 “<strong><em>Option 键(⌥)</em></strong>“ 然后点击图标.</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/vZRXOU2AqTMlNiI.png\" alt=\"config\"></p>\n<h1 id=\"同时监测多个-App\"><a href=\"#同时监测多个-App\" class=\"headerlink\" title=\"同时监测多个 App\"></a>同时监测多个 App</h1><p>没有问题，点击这个小加号就行。<br><img src=\"https://s2.loli.net/2022/05/19/G4cgpbK9sajNSWh.png\" alt=\"multiple-monitor\"></p>\n<h2 id=\"为什么需要-Accessibility-API-权限？不会有安全隐患吧？\"><a href=\"#为什么需要-Accessibility-API-权限？不会有安全隐患吧？\" class=\"headerlink\" title=\"为什么需要 Accessibility API 权限？不会有安全隐患吧？\"></a>为什么需要 Accessibility API 权限？不会有安全隐患吧？</h2><p><strong><em>绝对！不要！相信！互联网！</em></strong></p>\n<p>当然有风险当然有隐患，没事不要瞎装软件。</p>\n<p><a href=\"https://github.com/xiaogdgenuine/Doll\"><strong>Doll</strong></a> 是开源的，如果你不放心我提供的 dmg 包，随时欢迎你克隆，审查，修改代码然后编译属于你自己的安装包。</p>\n<h2 id=\"Doll？什么怪名字。\"><a href=\"#Doll？什么怪名字。\" class=\"headerlink\" title=\"Doll？什么怪名字。\"></a><strong>Doll</strong>？什么怪名字。</h2><p><strong>Doll</strong> 这个名字来自我很喜欢的动画<a href=\"https://zh.wikipedia.org/wiki/DARKER_THAN_BLACK\">《黑之契约者》</a>, 动画里如果一个 <strong><em>契约者</em></strong> 一直使用他的超能力但却从不支付 <strong>代价</strong>, 那么最终他的能力会失控，丧失自我成为毫无感情的 **<em>Doll</em>**，终日面无表情（误.</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/yhvJYpoaSHuMXcD.jpg\" alt=\"doll\"></p>\n<p>如果我们工作中使用了太多的 <strong>专注能力</strong> 却从来不支付 <strong>代价</strong>，我们会变成什么呢～ &gt;&gt;__&lt;&lt;.</p>\n<h2 id=\"怎么实现的？\"><a href=\"#怎么实现的？\" class=\"headerlink\" title=\"怎么实现的？\"></a>怎么实现的？</h2><p>整个项目的 UI 完全由 SwiftUI 实现。</p>\n<p>核心的获取 Badge 信息的代码存放在单独的一个叫 <a href=\"https://github.com/xiaogdgenuine/Doll/tree/main/MonitorCore\">MonitorCore</a> 的 Swift Package 中，使用了 macOS 的 Accessibility API，因为 API 的限制，<strong>Doll</strong> 只能通过 Polling 的方式每隔 1s 同步一次 Badge 信息，不过无需担心性能，因为每个轮询操作只是简单的读取和设置文本，而且一天最多执行 86400 次，对 Mac 来说洒洒水而已啦。</p>\n<p>具体细节就有劳各位自己看代码啦。</p>\n<h2 id=\"近来的一些些感想\"><a href=\"#近来的一些些感想\" class=\"headerlink\" title=\"近来的一些些感想\"></a>近来的一些些感想</h2><h3 id=\"学习一门新语言的建议\"><a href=\"#学习一门新语言的建议\" class=\"headerlink\" title=\"学习一门新语言的建议\"></a>学习一门新语言的建议</h3><p>因为最近刚加入了很优秀的 iOS 开发团队，为了不拖后腿一直在恶补 Swift 各种语法和新特性，这个学习的过程也有一些心得想分享一下。</p>\n<p>我以前是专职前端开发的，最近一年多才慢慢接触 iOS 开发，这个小项目也是我为了用熟 Swift 语言的各种新特性给自己找的课题。</p>\n<p>以前学一门计算机语言时我喜欢把一整本教程书啃完再动手实践，一边看书一边心里还会默念类似 “啊这都要单独写出来吗谁不懂啊”，“不就是个尾递归优化嘛又在这水页数” 的话，可每每到了看完书要动手的时候就抓瞎了，好像什么语法都懂，但就是没有兴趣用这门语言写点东西，最后往往就不了了之，过个一年半载语法又忘光了，学 Java, Python，Ruby 都是这样。</p>\n<p>但其实我也有学得蛮好的语言，C# 尽管多年没复习了每年还是能用它写点自娱自乐的 Windows 软件，JavaScript 更不用说是看家吃饭的手艺，轮子一个接一个造，近两年来 Swift 也是用得越来越熟练，甚至还开发了一个广受好评的 <a href=\"https://apps.apple.com/cn/app/%E5%8F%AF%E8%BE%BE%E6%BC%AB%E7%94%BB-%E6%9C%AC%E5%9C%B0%E6%BC%AB%E7%94%BB%E9%98%85%E8%AF%BB%E5%99%A8/id1545372338\">App</a>。</p>\n<p>回顾一下我用得最好的这三门语言，发觉我反而没有系统地学过它们，</p>\n<ul>\n<li>C# 能学起来是因为想用 WPF 实现一个炫酷的桌面聊天软件。</li>\n<li>JavaScript 能学起来是因为第一家公司的宣传网站是我一个人搭的。</li>\n<li>Swift 能学起来是因为我买了 iPad 想好好看漫画而不得。</li>\n</ul>\n<p>基本上稍微系统地学习这些语言都是在我已经做出了一点成果之后了，需要更精进的时候我才会去买一些书来看，而且此时我的针对性很强，我要解决的就是开发过程中遇到的非常具体的问题，要买什么书要学什么技术我基本也都门清了。</p>\n<p>而怎么也学不好的那几门语言，是因为我就从没想好用它们做点什么，学习的动力来源非常单一：“这么火应该学”。</p>\n<p>说出来不怕大伙笑话，什么异步多线程编程，竞态资源，自旋锁，信号量，Async Await，内存泄露排查，性能调优，我这种半路出家的刚入行那几年根本连概念都看不懂，书也看不下去。</p>\n<p>可一旦开始写一个感兴趣的项目了，我就想提高它的稳定性，改善它的性能，各种变着法想让它更好用，于是这个过程里我就什么语言特性都学到了，用得也更扎实了，成就感是非常强的，经常解决完问题后激动地原地跺 JoJo！</p>\n<p>说到底计算机科学还是更偏向实践一些，因此对于语言初学者，不管你在学什么语言，我的建议是学完简单的基础后就先把书合起来吧，马上动手去做点东西才能保住你那份热情，前期多做，后期多学，会是正反馈周期比较合理的方式。</p>\n<h3 id=\"iOS-开发的效率\"><a href=\"#iOS-开发的效率\" class=\"headerlink\" title=\"iOS 开发的效率\"></a>iOS 开发的效率</h3><p>搞 iOS 开发的同学们，SwiftUI 现在必须立刻马上武装到你的技能树上，投资回报率是近几年最高的了！</p>\n<p><strong>Doll</strong> 仅仅花了我 3 个晚上就写完了，90% 的时间其实花在了查 macOS 的 API 文档上，UI 部分可以说毫无阻力，想哪写哪，随时预览随时调节。</p>\n<p>虽然因为用了较新的 SwiftUI 所以 <strong>Doll</strong> 只能跑在 macOS 11.0(Big Sur) 以上的系统，但这个牺牲完全值得！如果我为了兼容老系统改用 UIKit 实现界面，我这会儿应该还在纠结为什么 UICollectionViewDataSource 就是不更新，Layout Constraints 应该 Enable 哪几个，Disable 哪几个，要怎么实现数据绑定。。。等我实现出一版 UIKit，竞品早已经迭代了好几版 UI 了。</p>\n<h3 id=\"规划\"><a href=\"#规划\" class=\"headerlink\" title=\"规划\"></a>规划</h3><p>虽然说有想法就赶紧上机开码的感觉特别爽（谁开机谁知道），但该缓一缓的时候还是得及时刹车。</p>\n<p>开发 <strong>Doll</strong> 的时候我就犯了急性子的大错，想当然觉得全屏模式时，应该在有新消息的时候显示一个小小的通知 Popover 好让用户注意到。为了实现这个 Popover 又花了一小时查怎么确定当前窗口是全屏模式（实名吐槽 Apple 烂文档，交了那么多钱就这体验），然后又一顿调试终于实现了。</p>\n<p>最后当我在全屏模式下发了一条测试消息的时候，我傻眼了：</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/QuxcpK2rw6URBez.png\" alt=\"useless\"></p>\n<p>你说这一个多小时能找谁要回来？其实脑子只要停下来想一想马上就能意识到这个功能鸡肋至极，可是脑子说不行，你不能停，这个 idea 太棒了用户一定会赞不绝口的！</p>\n<p>这种错我还是偶尔会犯，对抗本能太难了，这个鸡肋功能就留在 <strong>Doll</strong> 里作为提醒吧。</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>希望 <strong>Doll</strong> 这个小作品能小小地提高大家的工作体验，也祝愿各位大姑娘小伙子们能找回那种开发软件解决问题的纯粹乐趣。</p>\n"},{"title":"Doll - The badge catcher","date":"2022-01-27T16:00:00.000Z","featured_image":"https://s2.loli.net/2022/05/19/yhvJYpoaSHuMXcD.jpg","_content":"\n# Doll is a Mac app that help you catch up important messages!\n\nIn **macOS**, It feels really great when you hide the **Dock**, open a **full screen** window and focus on your task.\n\nBut we are not living in an ideal world, your teammates may need your help anytime, and when you are in focus mode, occasionally you just _**forgot to respond**_!\n\nMessage apps like **Mail**, **Slack** and **Microsoft Teams** don't even offer a **_menu bar icon_** at all, so if you're working in a full screen window, or looking at another extra Monitor screen which can't show the Dock, there is no way you will notice the unread messages!\n\n![dock-only](https://s2.loli.net/2022/05/19/XbqsVyT3EYFeMJU.png)\n \n(Sorry the notification center did notice you, but they will soon dismiss after a short period, if you miss that, you miss the message)\n\n![Notification center](https://s2.loli.net/2022/05/22/ihuQU6exGvSPDLq.png)\n\nIt would be great if we could put the icon and badge of these apps into the **_Menu bar_**, that way we can always easily notice new messages across screens, just like this:\n\n![showcase](https://s2.loli.net/2022/05/19/moFvwhnVE7iUbjt.png)\n\n# Doll?\nIn my favor animation [《Darker than dark》](https://en.wikipedia.org/wiki/Darker_than_Black), if a **_Contractor_** use his power and never willing to pay the cost, eventually he will lose control of his power, become an emotionless **_Doll_**.\n\nIf we use too much **focus power** without paying the cost, what will we become >>__<<.\n\n# Install\nYou can download the latest dmg file from [here](https://github.com/xiaogdgenuine/Doll/releases/latest)\nMinimum system requirement: **_macOS 11.0_** (Big Sur)\n\n# How to use?\nIt's simple, first you search and select the app you want to monitor:\n\n![usage](https://s2.loli.net/2022/05/19/6GmFulcTeUJsNIX.png)\n\nThen Doll will ask for your permission to use the Accessibility API: \n\n![ask-for-permission](https://s2.loli.net/2022/05/19/ZfTzyiFx1r2PpkL.png)\n\nPlease make sure you grant that permission to **Doll.app** otherwise nothing will be monitored!\n\n![grant-permission](https://s2.loli.net/2022/05/19/geSnwF1Y6DRItW4.png)\n\nDone, you are all setup!\nDoll now will monitor all the badge update in the Dock, and sync the numbers into the menu bar!\n\n![running](https://s2.loli.net/2022/05/22/P3RfDlmjkShe2UT.png)\n\n# I want to monitor more apps!\nYou get it for free!\n\n![multiple-monitor](https://s2.loli.net/2022/05/19/G4cgpbK9sajNSWh.png)\n\n# I want to change the Monitor app\nIf the monitored app is running, click on the menu bar icon will simply open that app.\n\nBut if you want to change stuffs, just hold the \"**_Option key(⌥)_**\" and click on the icon.\n\n![config](https://s2.loli.net/2022/05/19/vZRXOU2AqTMlNiI.png)\n\n# Security concern about the permission?\n**_Never! Ever! Trust! Anybody! in Internet!_**\n\n**[Doll](https://github.com/xiaogdgenuine/Doll)** is open source, you are free to download, review, modify and compile your own version of the app, go ahead and happy coding~\n\n\n# How the app works?\n**Doll** utils the [macOS Accessibility API](https://developer.apple.com/library/archive/documentation/Accessibility/Conceptual/AccessibilityMacOSX/OSXAXmodel.html#//apple_ref/doc/uid/TP40001078-CH208-TPXREF101), it will sync the latest badge text to menu bar from every Monitored app in the **Dock** element.\n\nDue to the limitation of Accessibility API(Can't watch for element's attribute value change), Doll has to sync badges by every second(Yep, the infamy **_Polling_** style).\n\nBut don't worry about the performance, after all the synchronization happens only 864000 times per day, and all it does is just read and set few element's text, that's an operation executed less than **1ms**!\n\nIf you found any potential Bug or Performance issue, feel free to submit a PR!\n\n\n","source":"_posts/en/doll-the-badge-catcher.md","raw":"\n---\ntitle: \"Doll - The badge catcher\"\ndate: 2022-01-28\ncategories:\n- [gallery]\ntags:\n- Doll\n- Menu bar\n- Productivity\nfeatured_image: https://s2.loli.net/2022/05/19/yhvJYpoaSHuMXcD.jpg\n---\n\n# Doll is a Mac app that help you catch up important messages!\n\nIn **macOS**, It feels really great when you hide the **Dock**, open a **full screen** window and focus on your task.\n\nBut we are not living in an ideal world, your teammates may need your help anytime, and when you are in focus mode, occasionally you just _**forgot to respond**_!\n\nMessage apps like **Mail**, **Slack** and **Microsoft Teams** don't even offer a **_menu bar icon_** at all, so if you're working in a full screen window, or looking at another extra Monitor screen which can't show the Dock, there is no way you will notice the unread messages!\n\n![dock-only](https://s2.loli.net/2022/05/19/XbqsVyT3EYFeMJU.png)\n \n(Sorry the notification center did notice you, but they will soon dismiss after a short period, if you miss that, you miss the message)\n\n![Notification center](https://s2.loli.net/2022/05/22/ihuQU6exGvSPDLq.png)\n\nIt would be great if we could put the icon and badge of these apps into the **_Menu bar_**, that way we can always easily notice new messages across screens, just like this:\n\n![showcase](https://s2.loli.net/2022/05/19/moFvwhnVE7iUbjt.png)\n\n# Doll?\nIn my favor animation [《Darker than dark》](https://en.wikipedia.org/wiki/Darker_than_Black), if a **_Contractor_** use his power and never willing to pay the cost, eventually he will lose control of his power, become an emotionless **_Doll_**.\n\nIf we use too much **focus power** without paying the cost, what will we become >>__<<.\n\n# Install\nYou can download the latest dmg file from [here](https://github.com/xiaogdgenuine/Doll/releases/latest)\nMinimum system requirement: **_macOS 11.0_** (Big Sur)\n\n# How to use?\nIt's simple, first you search and select the app you want to monitor:\n\n![usage](https://s2.loli.net/2022/05/19/6GmFulcTeUJsNIX.png)\n\nThen Doll will ask for your permission to use the Accessibility API: \n\n![ask-for-permission](https://s2.loli.net/2022/05/19/ZfTzyiFx1r2PpkL.png)\n\nPlease make sure you grant that permission to **Doll.app** otherwise nothing will be monitored!\n\n![grant-permission](https://s2.loli.net/2022/05/19/geSnwF1Y6DRItW4.png)\n\nDone, you are all setup!\nDoll now will monitor all the badge update in the Dock, and sync the numbers into the menu bar!\n\n![running](https://s2.loli.net/2022/05/22/P3RfDlmjkShe2UT.png)\n\n# I want to monitor more apps!\nYou get it for free!\n\n![multiple-monitor](https://s2.loli.net/2022/05/19/G4cgpbK9sajNSWh.png)\n\n# I want to change the Monitor app\nIf the monitored app is running, click on the menu bar icon will simply open that app.\n\nBut if you want to change stuffs, just hold the \"**_Option key(⌥)_**\" and click on the icon.\n\n![config](https://s2.loli.net/2022/05/19/vZRXOU2AqTMlNiI.png)\n\n# Security concern about the permission?\n**_Never! Ever! Trust! Anybody! in Internet!_**\n\n**[Doll](https://github.com/xiaogdgenuine/Doll)** is open source, you are free to download, review, modify and compile your own version of the app, go ahead and happy coding~\n\n\n# How the app works?\n**Doll** utils the [macOS Accessibility API](https://developer.apple.com/library/archive/documentation/Accessibility/Conceptual/AccessibilityMacOSX/OSXAXmodel.html#//apple_ref/doc/uid/TP40001078-CH208-TPXREF101), it will sync the latest badge text to menu bar from every Monitored app in the **Dock** element.\n\nDue to the limitation of Accessibility API(Can't watch for element's attribute value change), Doll has to sync badges by every second(Yep, the infamy **_Polling_** style).\n\nBut don't worry about the performance, after all the synchronization happens only 864000 times per day, and all it does is just read and set few element's text, that's an operation executed less than **1ms**!\n\nIf you found any potential Bug or Performance issue, feel free to submit a PR!\n\n\n","slug":"doll-the-badge-catcher","published":1,"lang":"en","updated":"2022-05-22T16:01:01.184Z","_id":"cl3gtogs400060xurb8sq7n6l","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Doll-is-a-Mac-app-that-help-you-catch-up-important-messages\"><a href=\"#Doll-is-a-Mac-app-that-help-you-catch-up-important-messages\" class=\"headerlink\" title=\"Doll is a Mac app that help you catch up important messages!\"></a>Doll is a Mac app that help you catch up important messages!</h1><p>In <strong>macOS</strong>, It feels really great when you hide the <strong>Dock</strong>, open a <strong>full screen</strong> window and focus on your task.</p>\n<p>But we are not living in an ideal world, your teammates may need your help anytime, and when you are in focus mode, occasionally you just <em><strong>forgot to respond</strong></em>!</p>\n<p>Message apps like <strong>Mail</strong>, <strong>Slack</strong> and <strong>Microsoft Teams</strong> don’t even offer a <strong><em>menu bar icon</em></strong> at all, so if you’re working in a full screen window, or looking at another extra Monitor screen which can’t show the Dock, there is no way you will notice the unread messages!</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/XbqsVyT3EYFeMJU.png\" alt=\"dock-only\"></p>\n<p>(Sorry the notification center did notice you, but they will soon dismiss after a short period, if you miss that, you miss the message)</p>\n<p><img src=\"https://s2.loli.net/2022/05/22/ihuQU6exGvSPDLq.png\" alt=\"Notification center\"></p>\n<p>It would be great if we could put the icon and badge of these apps into the <strong><em>Menu bar</em></strong>, that way we can always easily notice new messages across screens, just like this:</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/moFvwhnVE7iUbjt.png\" alt=\"showcase\"></p>\n<h1 id=\"Doll\"><a href=\"#Doll\" class=\"headerlink\" title=\"Doll?\"></a>Doll?</h1><p>In my favor animation <a href=\"https://en.wikipedia.org/wiki/Darker_than_Black\">《Darker than dark》</a>, if a <strong><em>Contractor</em></strong> use his power and never willing to pay the cost, eventually he will lose control of his power, become an emotionless <strong><em>Doll</em></strong>.</p>\n<p>If we use too much <strong>focus power</strong> without paying the cost, what will we become &gt;&gt;__&lt;&lt;.</p>\n<h1 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h1><p>You can download the latest dmg file from <a href=\"https://github.com/xiaogdgenuine/Doll/releases/latest\">here</a><br>Minimum system requirement: <strong><em>macOS 11.0</em></strong> (Big Sur)</p>\n<h1 id=\"How-to-use\"><a href=\"#How-to-use\" class=\"headerlink\" title=\"How to use?\"></a>How to use?</h1><p>It’s simple, first you search and select the app you want to monitor:</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/6GmFulcTeUJsNIX.png\" alt=\"usage\"></p>\n<p>Then Doll will ask for your permission to use the Accessibility API: </p>\n<p><img src=\"https://s2.loli.net/2022/05/19/ZfTzyiFx1r2PpkL.png\" alt=\"ask-for-permission\"></p>\n<p>Please make sure you grant that permission to <strong>Doll.app</strong> otherwise nothing will be monitored!</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/geSnwF1Y6DRItW4.png\" alt=\"grant-permission\"></p>\n<p>Done, you are all setup!<br>Doll now will monitor all the badge update in the Dock, and sync the numbers into the menu bar!</p>\n<p><img src=\"https://s2.loli.net/2022/05/22/P3RfDlmjkShe2UT.png\" alt=\"running\"></p>\n<h1 id=\"I-want-to-monitor-more-apps\"><a href=\"#I-want-to-monitor-more-apps\" class=\"headerlink\" title=\"I want to monitor more apps!\"></a>I want to monitor more apps!</h1><p>You get it for free!</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/G4cgpbK9sajNSWh.png\" alt=\"multiple-monitor\"></p>\n<h1 id=\"I-want-to-change-the-Monitor-app\"><a href=\"#I-want-to-change-the-Monitor-app\" class=\"headerlink\" title=\"I want to change the Monitor app\"></a>I want to change the Monitor app</h1><p>If the monitored app is running, click on the menu bar icon will simply open that app.</p>\n<p>But if you want to change stuffs, just hold the “<strong><em>Option key(⌥)</em></strong>“ and click on the icon.</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/vZRXOU2AqTMlNiI.png\" alt=\"config\"></p>\n<h1 id=\"Security-concern-about-the-permission\"><a href=\"#Security-concern-about-the-permission\" class=\"headerlink\" title=\"Security concern about the permission?\"></a>Security concern about the permission?</h1><p><strong><em>Never! Ever! Trust! Anybody! in Internet!</em></strong></p>\n<p><strong><a href=\"https://github.com/xiaogdgenuine/Doll\">Doll</a></strong> is open source, you are free to download, review, modify and compile your own version of the app, go ahead and happy coding~</p>\n<h1 id=\"How-the-app-works\"><a href=\"#How-the-app-works\" class=\"headerlink\" title=\"How the app works?\"></a>How the app works?</h1><p><strong>Doll</strong> utils the <a href=\"https://developer.apple.com/library/archive/documentation/Accessibility/Conceptual/AccessibilityMacOSX/OSXAXmodel.html#//apple_ref/doc/uid/TP40001078-CH208-TPXREF101\">macOS Accessibility API</a>, it will sync the latest badge text to menu bar from every Monitored app in the <strong>Dock</strong> element.</p>\n<p>Due to the limitation of Accessibility API(Can’t watch for element’s attribute value change), Doll has to sync badges by every second(Yep, the infamy <strong><em>Polling</em></strong> style).</p>\n<p>But don’t worry about the performance, after all the synchronization happens only 864000 times per day, and all it does is just read and set few element’s text, that’s an operation executed less than <strong>1ms</strong>!</p>\n<p>If you found any potential Bug or Performance issue, feel free to submit a PR!</p>\n","site":{"data":{}},"_tags":[],"excerpt":"","more":"<h1 id=\"Doll-is-a-Mac-app-that-help-you-catch-up-important-messages\"><a href=\"#Doll-is-a-Mac-app-that-help-you-catch-up-important-messages\" class=\"headerlink\" title=\"Doll is a Mac app that help you catch up important messages!\"></a>Doll is a Mac app that help you catch up important messages!</h1><p>In <strong>macOS</strong>, It feels really great when you hide the <strong>Dock</strong>, open a <strong>full screen</strong> window and focus on your task.</p>\n<p>But we are not living in an ideal world, your teammates may need your help anytime, and when you are in focus mode, occasionally you just <em><strong>forgot to respond</strong></em>!</p>\n<p>Message apps like <strong>Mail</strong>, <strong>Slack</strong> and <strong>Microsoft Teams</strong> don’t even offer a <strong><em>menu bar icon</em></strong> at all, so if you’re working in a full screen window, or looking at another extra Monitor screen which can’t show the Dock, there is no way you will notice the unread messages!</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/XbqsVyT3EYFeMJU.png\" alt=\"dock-only\"></p>\n<p>(Sorry the notification center did notice you, but they will soon dismiss after a short period, if you miss that, you miss the message)</p>\n<p><img src=\"https://s2.loli.net/2022/05/22/ihuQU6exGvSPDLq.png\" alt=\"Notification center\"></p>\n<p>It would be great if we could put the icon and badge of these apps into the <strong><em>Menu bar</em></strong>, that way we can always easily notice new messages across screens, just like this:</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/moFvwhnVE7iUbjt.png\" alt=\"showcase\"></p>\n<h1 id=\"Doll\"><a href=\"#Doll\" class=\"headerlink\" title=\"Doll?\"></a>Doll?</h1><p>In my favor animation <a href=\"https://en.wikipedia.org/wiki/Darker_than_Black\">《Darker than dark》</a>, if a <strong><em>Contractor</em></strong> use his power and never willing to pay the cost, eventually he will lose control of his power, become an emotionless <strong><em>Doll</em></strong>.</p>\n<p>If we use too much <strong>focus power</strong> without paying the cost, what will we become &gt;&gt;__&lt;&lt;.</p>\n<h1 id=\"Install\"><a href=\"#Install\" class=\"headerlink\" title=\"Install\"></a>Install</h1><p>You can download the latest dmg file from <a href=\"https://github.com/xiaogdgenuine/Doll/releases/latest\">here</a><br>Minimum system requirement: <strong><em>macOS 11.0</em></strong> (Big Sur)</p>\n<h1 id=\"How-to-use\"><a href=\"#How-to-use\" class=\"headerlink\" title=\"How to use?\"></a>How to use?</h1><p>It’s simple, first you search and select the app you want to monitor:</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/6GmFulcTeUJsNIX.png\" alt=\"usage\"></p>\n<p>Then Doll will ask for your permission to use the Accessibility API: </p>\n<p><img src=\"https://s2.loli.net/2022/05/19/ZfTzyiFx1r2PpkL.png\" alt=\"ask-for-permission\"></p>\n<p>Please make sure you grant that permission to <strong>Doll.app</strong> otherwise nothing will be monitored!</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/geSnwF1Y6DRItW4.png\" alt=\"grant-permission\"></p>\n<p>Done, you are all setup!<br>Doll now will monitor all the badge update in the Dock, and sync the numbers into the menu bar!</p>\n<p><img src=\"https://s2.loli.net/2022/05/22/P3RfDlmjkShe2UT.png\" alt=\"running\"></p>\n<h1 id=\"I-want-to-monitor-more-apps\"><a href=\"#I-want-to-monitor-more-apps\" class=\"headerlink\" title=\"I want to monitor more apps!\"></a>I want to monitor more apps!</h1><p>You get it for free!</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/G4cgpbK9sajNSWh.png\" alt=\"multiple-monitor\"></p>\n<h1 id=\"I-want-to-change-the-Monitor-app\"><a href=\"#I-want-to-change-the-Monitor-app\" class=\"headerlink\" title=\"I want to change the Monitor app\"></a>I want to change the Monitor app</h1><p>If the monitored app is running, click on the menu bar icon will simply open that app.</p>\n<p>But if you want to change stuffs, just hold the “<strong><em>Option key(⌥)</em></strong>“ and click on the icon.</p>\n<p><img src=\"https://s2.loli.net/2022/05/19/vZRXOU2AqTMlNiI.png\" alt=\"config\"></p>\n<h1 id=\"Security-concern-about-the-permission\"><a href=\"#Security-concern-about-the-permission\" class=\"headerlink\" title=\"Security concern about the permission?\"></a>Security concern about the permission?</h1><p><strong><em>Never! Ever! Trust! Anybody! in Internet!</em></strong></p>\n<p><strong><a href=\"https://github.com/xiaogdgenuine/Doll\">Doll</a></strong> is open source, you are free to download, review, modify and compile your own version of the app, go ahead and happy coding~</p>\n<h1 id=\"How-the-app-works\"><a href=\"#How-the-app-works\" class=\"headerlink\" title=\"How the app works?\"></a>How the app works?</h1><p><strong>Doll</strong> utils the <a href=\"https://developer.apple.com/library/archive/documentation/Accessibility/Conceptual/AccessibilityMacOSX/OSXAXmodel.html#//apple_ref/doc/uid/TP40001078-CH208-TPXREF101\">macOS Accessibility API</a>, it will sync the latest badge text to menu bar from every Monitored app in the <strong>Dock</strong> element.</p>\n<p>Due to the limitation of Accessibility API(Can’t watch for element’s attribute value change), Doll has to sync badges by every second(Yep, the infamy <strong><em>Polling</em></strong> style).</p>\n<p>But don’t worry about the performance, after all the synchronization happens only 864000 times per day, and all it does is just read and set few element’s text, that’s an operation executed less than <strong>1ms</strong>!</p>\n<p>If you found any potential Bug or Performance issue, feel free to submit a PR!</p>\n"},{"title":"Make Grid multiple selectable in SwiftUI","date":"2022-05-22T23:53:48.000Z","indexing":false,"_content":"\nSwiftUI, I love you, now.... please please please give me what I want :cry.\n\nIt's hard to belive that 3 years after launch, SwiftUI still don't have perfect solution to replace ***UICollectionView***, Grid components like **LazyVGrid** or **LazyHGrid** is the replacement I used most of time, when I only need a clasic flow-layouted collection view.\n\nBut these two boys come with a limitation, they do a pretty good job on layout, not thing to complain about, except that they don't have out-of-box selection capability, things like this need to be done manually:\n\n![Grid-Selection](https://s2.loli.net/2022/05/23/1MoqscZtybSVpKJ.png)\n\nIt's totally do-able, and super easy with SwiftUI + some State management code.\n\n## Now here is a hard one, user would expect pan to select gesture to be supported too:\n\n![Pan-to-select](https://s2.loli.net/2022/05/23/2ZVnkKb6BHDczsS.gif)\n\n\n\n\n\nAs far as I know, we are unlucky, no open-sourced solution for that yet, don't count on Apple and don't start crying, let's get our hands dirty and sove this!\n\n\n\n## Setup the Desk\n\nLet's create some data as a start point:\n\n````swift\nstruct Group: Hashable {\n    let title: String\n    let items: [Item]\n}\n\nstruct Item: Hashable {\n    let title: String\n}\n\nlet mockData = [\n    Group(title: \"Numbers\",\n          items: \"0123456789\"\n                    .map{ Item(title: String($0)) }),\n    Group(title: \"Letters\",\n          items: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n                    .map{ Item(title: String($0)) })\n]\n````\n\nThen we create a LazyVGrid to render these data:\n\n````swift\nstruct GridView: View {\n    @State var columns: [GridItem] = [\n        GridItem(.adaptive(minimum: 150), spacing: 16),\n    ]\n\n    var body: some View {\n        ScrollView {\n            LazyVGrid(\n                    columns: columns,\n                    alignment: .center,\n                    spacing: 16,\n                    pinnedViews: .sectionHeaders\n            ) {\n                ForEach(Array(mockData.enumerated()), id: \\.element) { (groupIndex, group) in\n                    Section(header: Text(group.title)) {\n                        ForEach(Array(group.items.enumerated()), id: \\.element) { (itemIndex, item) in\n                            \n                            // The cell\n                            Text(item.title)\n                                .padding()\n                                .frame(maxWidth: .infinity, maxHeight: .infinity)\n                                .background(Color.blue)\n                            \n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n````\n\nThis should give us a LazyVGrid with two sections:\n\n![start-point](https://s2.loli.net/2022/05/23/tqaURvOgsfcwyTi.png)\n\n## What we need?\n\nSimply 3 steps:\n\n1. A way to intercept the Pan gesture of scrollable container\n2. Calculate the selection area base on that Pan gesture.\n3. Select/un-select items under that selection area.\n\nFirst step is super easy, we gonna use: https://github.com/siteline/SwiftUI-Introspect, it can help us get the scrolling container, once we did it, we can attach a new Pan gesture to the scrollable container.\n\n\n\n\n\n## Oh did I mention that you also need to auto scroll the container?\n","source":"_posts/en/make-grid-multiple-selectable-in-swiftUI.md","raw":"---\ntitle: Make Grid multiple selectable in SwiftUI\ndate: 2022-05-23 07:53:48\nindexing: false\ntags:\n- SwiftUI\n- Grid\n- Happy Hacky\n---\n\nSwiftUI, I love you, now.... please please please give me what I want :cry.\n\nIt's hard to belive that 3 years after launch, SwiftUI still don't have perfect solution to replace ***UICollectionView***, Grid components like **LazyVGrid** or **LazyHGrid** is the replacement I used most of time, when I only need a clasic flow-layouted collection view.\n\nBut these two boys come with a limitation, they do a pretty good job on layout, not thing to complain about, except that they don't have out-of-box selection capability, things like this need to be done manually:\n\n![Grid-Selection](https://s2.loli.net/2022/05/23/1MoqscZtybSVpKJ.png)\n\nIt's totally do-able, and super easy with SwiftUI + some State management code.\n\n## Now here is a hard one, user would expect pan to select gesture to be supported too:\n\n![Pan-to-select](https://s2.loli.net/2022/05/23/2ZVnkKb6BHDczsS.gif)\n\n\n\n\n\nAs far as I know, we are unlucky, no open-sourced solution for that yet, don't count on Apple and don't start crying, let's get our hands dirty and sove this!\n\n\n\n## Setup the Desk\n\nLet's create some data as a start point:\n\n````swift\nstruct Group: Hashable {\n    let title: String\n    let items: [Item]\n}\n\nstruct Item: Hashable {\n    let title: String\n}\n\nlet mockData = [\n    Group(title: \"Numbers\",\n          items: \"0123456789\"\n                    .map{ Item(title: String($0)) }),\n    Group(title: \"Letters\",\n          items: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n                    .map{ Item(title: String($0)) })\n]\n````\n\nThen we create a LazyVGrid to render these data:\n\n````swift\nstruct GridView: View {\n    @State var columns: [GridItem] = [\n        GridItem(.adaptive(minimum: 150), spacing: 16),\n    ]\n\n    var body: some View {\n        ScrollView {\n            LazyVGrid(\n                    columns: columns,\n                    alignment: .center,\n                    spacing: 16,\n                    pinnedViews: .sectionHeaders\n            ) {\n                ForEach(Array(mockData.enumerated()), id: \\.element) { (groupIndex, group) in\n                    Section(header: Text(group.title)) {\n                        ForEach(Array(group.items.enumerated()), id: \\.element) { (itemIndex, item) in\n                            \n                            // The cell\n                            Text(item.title)\n                                .padding()\n                                .frame(maxWidth: .infinity, maxHeight: .infinity)\n                                .background(Color.blue)\n                            \n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n````\n\nThis should give us a LazyVGrid with two sections:\n\n![start-point](https://s2.loli.net/2022/05/23/tqaURvOgsfcwyTi.png)\n\n## What we need?\n\nSimply 3 steps:\n\n1. A way to intercept the Pan gesture of scrollable container\n2. Calculate the selection area base on that Pan gesture.\n3. Select/un-select items under that selection area.\n\nFirst step is super easy, we gonna use: https://github.com/siteline/SwiftUI-Introspect, it can help us get the scrolling container, once we did it, we can attach a new Pan gesture to the scrollable container.\n\n\n\n\n\n## Oh did I mention that you also need to auto scroll the container?\n","slug":"make-grid-multiple-selectable-in-swiftUI","published":1,"lang":"en","updated":"2022-07-10T04:48:01.818Z","_id":"cl3i055r90000y0ur1ncr8swx","comments":1,"layout":"post","photos":[],"link":"","content":"<p>SwiftUI, I love you, now…. please please please give me what I want :cry.</p>\n<p>It’s hard to belive that 3 years after launch, SwiftUI still don’t have perfect solution to replace <em><strong>UICollectionView</strong></em>, Grid components like <strong>LazyVGrid</strong> or <strong>LazyHGrid</strong> is the replacement I used most of time, when I only need a clasic flow-layouted collection view.</p>\n<p>But these two boys come with a limitation, they do a pretty good job on layout, not thing to complain about, except that they don’t have out-of-box selection capability, things like this need to be done manually:</p>\n<p><img src=\"https://s2.loli.net/2022/05/23/1MoqscZtybSVpKJ.png\" alt=\"Grid-Selection\"></p>\n<p>It’s totally do-able, and super easy with SwiftUI + some State management code.</p>\n<h2 id=\"Now-here-is-a-hard-one-user-would-expect-pan-to-select-gesture-to-be-supported-too\"><a href=\"#Now-here-is-a-hard-one-user-would-expect-pan-to-select-gesture-to-be-supported-too\" class=\"headerlink\" title=\"Now here is a hard one, user would expect pan to select gesture to be supported too:\"></a>Now here is a hard one, user would expect pan to select gesture to be supported too:</h2><p><img src=\"https://s2.loli.net/2022/05/23/2ZVnkKb6BHDczsS.gif\" alt=\"Pan-to-select\"></p>\n<p>As far as I know, we are unlucky, no open-sourced solution for that yet, don’t count on Apple and don’t start crying, let’s get our hands dirty and sove this!</p>\n<h2 id=\"Setup-the-Desk\"><a href=\"#Setup-the-Desk\" class=\"headerlink\" title=\"Setup the Desk\"></a>Setup the Desk</h2><p>Let’s create some data as a start point:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Group</span>: <span class=\"title class_\">Hashable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> title: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> items: [<span class=\"type\">Item</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Item</span>: <span class=\"title class_\">Hashable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> title: <span class=\"type\">String</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> mockData <span class=\"operator\">=</span> [</span><br><span class=\"line\">    <span class=\"type\">Group</span>(title: <span class=\"string\">&quot;Numbers&quot;</span>,</span><br><span class=\"line\">          items: <span class=\"string\">&quot;0123456789&quot;</span></span><br><span class=\"line\">                    .map&#123; <span class=\"type\">Item</span>(title: <span class=\"type\">String</span>(<span class=\"variable\">$0</span>)) &#125;),</span><br><span class=\"line\">    <span class=\"type\">Group</span>(title: <span class=\"string\">&quot;Letters&quot;</span>,</span><br><span class=\"line\">          items: <span class=\"string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class=\"line\">                    .map&#123; <span class=\"type\">Item</span>(title: <span class=\"type\">String</span>(<span class=\"variable\">$0</span>)) &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>Then we create a LazyVGrid to render these data:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">GridView</span>: <span class=\"title class_\">View</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@State</span> <span class=\"keyword\">var</span> columns: [<span class=\"type\">GridItem</span>] <span class=\"operator\">=</span> [</span><br><span class=\"line\">        <span class=\"type\">GridItem</span>(.adaptive(minimum: <span class=\"number\">150</span>), spacing: <span class=\"number\">16</span>),</span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> body: <span class=\"keyword\">some</span> <span class=\"type\">View</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ScrollView</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">LazyVGrid</span>(</span><br><span class=\"line\">                    columns: columns,</span><br><span class=\"line\">                    alignment: .center,</span><br><span class=\"line\">                    spacing: <span class=\"number\">16</span>,</span><br><span class=\"line\">                    pinnedViews: .sectionHeaders</span><br><span class=\"line\">            ) &#123;</span><br><span class=\"line\">                <span class=\"type\">ForEach</span>(<span class=\"type\">Array</span>(mockData.enumerated()), id: \\.element) &#123; (groupIndex, group) <span class=\"keyword\">in</span></span><br><span class=\"line\">                    <span class=\"type\">Section</span>(header: <span class=\"type\">Text</span>(group.title)) &#123;</span><br><span class=\"line\">                        <span class=\"type\">ForEach</span>(<span class=\"type\">Array</span>(group.items.enumerated()), id: \\.element) &#123; (itemIndex, item) <span class=\"keyword\">in</span></span><br><span class=\"line\">                            </span><br><span class=\"line\">                            <span class=\"comment\">// The cell</span></span><br><span class=\"line\">                            <span class=\"type\">Text</span>(item.title)</span><br><span class=\"line\">                                .padding()</span><br><span class=\"line\">                                .frame(maxWidth: .infinity, maxHeight: .infinity)</span><br><span class=\"line\">                                .background(<span class=\"type\">Color</span>.blue)</span><br><span class=\"line\">                            </span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>This should give us a LazyVGrid with two sections:</p>\n<p><img src=\"https://s2.loli.net/2022/05/23/tqaURvOgsfcwyTi.png\" alt=\"start-point\"></p>\n<h2 id=\"What-we-need\"><a href=\"#What-we-need\" class=\"headerlink\" title=\"What we need?\"></a>What we need?</h2><p>Simply 3 steps:</p>\n<ol>\n<li>A way to intercept the Pan gesture of scrollable container</li>\n<li>Calculate the selection area base on that Pan gesture.</li>\n<li>Select&#x2F;un-select items under that selection area.</li>\n</ol>\n<p>First step is super easy, we gonna use: <a href=\"https://github.com/siteline/SwiftUI-Introspect\">https://github.com/siteline/SwiftUI-Introspect</a>, it can help us get the scrolling container, once we did it, we can attach a new Pan gesture to the scrollable container.</p>\n<h2 id=\"Oh-did-I-mention-that-you-also-need-to-auto-scroll-the-container\"><a href=\"#Oh-did-I-mention-that-you-also-need-to-auto-scroll-the-container\" class=\"headerlink\" title=\"Oh did I mention that you also need to auto scroll the container?\"></a>Oh did I mention that you also need to auto scroll the container?</h2>","site":{"data":{}},"excerpt":"","more":"<p>SwiftUI, I love you, now…. please please please give me what I want :cry.</p>\n<p>It’s hard to belive that 3 years after launch, SwiftUI still don’t have perfect solution to replace <em><strong>UICollectionView</strong></em>, Grid components like <strong>LazyVGrid</strong> or <strong>LazyHGrid</strong> is the replacement I used most of time, when I only need a clasic flow-layouted collection view.</p>\n<p>But these two boys come with a limitation, they do a pretty good job on layout, not thing to complain about, except that they don’t have out-of-box selection capability, things like this need to be done manually:</p>\n<p><img src=\"https://s2.loli.net/2022/05/23/1MoqscZtybSVpKJ.png\" alt=\"Grid-Selection\"></p>\n<p>It’s totally do-able, and super easy with SwiftUI + some State management code.</p>\n<h2 id=\"Now-here-is-a-hard-one-user-would-expect-pan-to-select-gesture-to-be-supported-too\"><a href=\"#Now-here-is-a-hard-one-user-would-expect-pan-to-select-gesture-to-be-supported-too\" class=\"headerlink\" title=\"Now here is a hard one, user would expect pan to select gesture to be supported too:\"></a>Now here is a hard one, user would expect pan to select gesture to be supported too:</h2><p><img src=\"https://s2.loli.net/2022/05/23/2ZVnkKb6BHDczsS.gif\" alt=\"Pan-to-select\"></p>\n<p>As far as I know, we are unlucky, no open-sourced solution for that yet, don’t count on Apple and don’t start crying, let’s get our hands dirty and sove this!</p>\n<h2 id=\"Setup-the-Desk\"><a href=\"#Setup-the-Desk\" class=\"headerlink\" title=\"Setup the Desk\"></a>Setup the Desk</h2><p>Let’s create some data as a start point:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Group</span>: <span class=\"title class_\">Hashable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> title: <span class=\"type\">String</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> items: [<span class=\"type\">Item</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Item</span>: <span class=\"title class_\">Hashable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> title: <span class=\"type\">String</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> mockData <span class=\"operator\">=</span> [</span><br><span class=\"line\">    <span class=\"type\">Group</span>(title: <span class=\"string\">&quot;Numbers&quot;</span>,</span><br><span class=\"line\">          items: <span class=\"string\">&quot;0123456789&quot;</span></span><br><span class=\"line\">                    .map&#123; <span class=\"type\">Item</span>(title: <span class=\"type\">String</span>(<span class=\"variable\">$0</span>)) &#125;),</span><br><span class=\"line\">    <span class=\"type\">Group</span>(title: <span class=\"string\">&quot;Letters&quot;</span>,</span><br><span class=\"line\">          items: <span class=\"string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span></span><br><span class=\"line\">                    .map&#123; <span class=\"type\">Item</span>(title: <span class=\"type\">String</span>(<span class=\"variable\">$0</span>)) &#125;)</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p>Then we create a LazyVGrid to render these data:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">GridView</span>: <span class=\"title class_\">View</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@State</span> <span class=\"keyword\">var</span> columns: [<span class=\"type\">GridItem</span>] <span class=\"operator\">=</span> [</span><br><span class=\"line\">        <span class=\"type\">GridItem</span>(.adaptive(minimum: <span class=\"number\">150</span>), spacing: <span class=\"number\">16</span>),</span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> body: <span class=\"keyword\">some</span> <span class=\"type\">View</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ScrollView</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">LazyVGrid</span>(</span><br><span class=\"line\">                    columns: columns,</span><br><span class=\"line\">                    alignment: .center,</span><br><span class=\"line\">                    spacing: <span class=\"number\">16</span>,</span><br><span class=\"line\">                    pinnedViews: .sectionHeaders</span><br><span class=\"line\">            ) &#123;</span><br><span class=\"line\">                <span class=\"type\">ForEach</span>(<span class=\"type\">Array</span>(mockData.enumerated()), id: \\.element) &#123; (groupIndex, group) <span class=\"keyword\">in</span></span><br><span class=\"line\">                    <span class=\"type\">Section</span>(header: <span class=\"type\">Text</span>(group.title)) &#123;</span><br><span class=\"line\">                        <span class=\"type\">ForEach</span>(<span class=\"type\">Array</span>(group.items.enumerated()), id: \\.element) &#123; (itemIndex, item) <span class=\"keyword\">in</span></span><br><span class=\"line\">                            </span><br><span class=\"line\">                            <span class=\"comment\">// The cell</span></span><br><span class=\"line\">                            <span class=\"type\">Text</span>(item.title)</span><br><span class=\"line\">                                .padding()</span><br><span class=\"line\">                                .frame(maxWidth: .infinity, maxHeight: .infinity)</span><br><span class=\"line\">                                .background(<span class=\"type\">Color</span>.blue)</span><br><span class=\"line\">                            </span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>This should give us a LazyVGrid with two sections:</p>\n<p><img src=\"https://s2.loli.net/2022/05/23/tqaURvOgsfcwyTi.png\" alt=\"start-point\"></p>\n<h2 id=\"What-we-need\"><a href=\"#What-we-need\" class=\"headerlink\" title=\"What we need?\"></a>What we need?</h2><p>Simply 3 steps:</p>\n<ol>\n<li>A way to intercept the Pan gesture of scrollable container</li>\n<li>Calculate the selection area base on that Pan gesture.</li>\n<li>Select&#x2F;un-select items under that selection area.</li>\n</ol>\n<p>First step is super easy, we gonna use: <a href=\"https://github.com/siteline/SwiftUI-Introspect\">https://github.com/siteline/SwiftUI-Introspect</a>, it can help us get the scrolling container, once we did it, we can attach a new Pan gesture to the scrollable container.</p>\n<h2 id=\"Oh-did-I-mention-that-you-also-need-to-auto-scroll-the-container\"><a href=\"#Oh-did-I-mention-that-you-also-need-to-auto-scroll-the-container\" class=\"headerlink\" title=\"Oh did I mention that you also need to auto scroll the container?\"></a>Oh did I mention that you also need to auto scroll the container?</h2>","_tags":[]},{"title":"Bosswift - 为 Git 用户设计的命令启动器","date":"2022-07-09T16:00:00.000Z","featured_image":"https://s2.loli.net/2022/07/10/AOeoQdW5Nk7pliG.jpg","_content":"\n## 一件麻烦事\n朋友，在你的开发生涯中，是否经常有过这样的经历：\n\n> 你正工作在某个开发任务上，同事紧急让你帮忙定位一下另一个已上线的功能为什么表现怪异，是不是代码有什么问题。\n\n你说好，然后熟练地打开命令行窗口，打下一大串让人心疼的命令：\n\n```bash\n# 暂存当前的工作\ngit stash -u\n# 切换到线上分支\ngit checkout release/v1\n# 拉取线上分支最新代码\ngit pull\n# 安装依赖，配置运行环境等\nnpm install...\n# 启动，定位问题\nnpm run...\n```\n\n折腾五六分钟后终于把环境跑起来，定位问题结束后，你又打开命令行窗口，打下另一串让人心疼的命令，继续你原本的开发任务:\n\n```bash\n# 切换回工作分支\ngit checkout feature/in-development\n# 恢复工作变更\ngit stash apply\n# 安装依赖，配置运行环境等\nnpm install...\n# 启动，继续开发\nnpm run...\n```\n\n如果一天内这样的事情多次出现，你的工作效率会相当低效，时间都耗费在没必要的上下文切换上了.\n\n想象一下如果我们可以同时 Checkout 多个分支，每个分支有自己专属的工作文件夹，是不是就不用这么折腾了？\n\n确实是这样子的，这个频繁上下文切换的问题 git 团队也注意到了，为了解决它，git 2.5 版本开始支持 [multiple worktrees](https://git-scm.com/docs/git-worktree)，你可以在一个 git repo 里同时创建多个 worktree 拷贝，每个 worktree 都有专属于自己的分支, 类似下图：\n\n![bosswift-git-worktree-explain](https://s2.loli.net/2022/07/11/bqQ4cdguWPxza3Z.webp)\n\n有了 git worktree，分支切换就变成了 cd 到不同的 worktree 目录，每个分支都可以拥有自己的独立工作目录，东西不会揉在一起，stash 命令也用不上了：\n\n![bosswift-new-fashion](https://s2.loli.net/2022/07/11/U62tEvT1gIrsKlY.jpg)\n\n更重要的是，你不需要重新安装项目依赖，因为你的工作代码没有任何改动！\n\ngit worktree 也可以帮我们确保本地一直有一个可以运行的分支，不会受你当前工作的影响，这一点有时候很重要。\n\n## 一个东西能解决问题，那它一定会带来新的问题\n纯命令行使用 git worktree 有以下问题：\n- 创建和删除 worktree 要手打的东西实在太多了, 得指定 worktree 路径，指定新分支名等，经常写错要删了 worktree 重来\n- 切换分支要 cd 来 cd 去，常常忘了自己在哪里要干什么，也比较容易切错目录\n- 磁盘占用多，每个 worktree 里第三方依赖都得单独拷贝一份\n\n## ✨✨✨ Bosswift ✨✨✨\n为了解决命令行使用 git worktree 的这些痛点，**Bosswift** 应运而生。\n\n**Bosswift** 与 git worktree 深度集成，帮助你用 UI 的方式轻松管理 worktree。\n\n![bosswift-introduction](https://s2.loli.net/2022/07/11/dQnKzR5gjMTA718.png)\n\n# 安装 + 配置\n从[这里下载](https://github.com/xiaogdgenuine/bosswift/releases/latest)最新的安装包，双击安装。\n\n![bosswift-install](https://s2.loli.net/2022/07/11/E9tuLSBJAUX6bjd.png)\n\n第一次打开 **Bosswift** 需要一点配置，主要就是选一下你平时的工作目录，这样 **Bosswift** 就可以随时同步 Worktree 状态，我习惯是创建一个 dev 目录存放所有工作项目：\n\n![bosswift-on-boarding](https://s2.loli.net/2022/07/11/WJIgGTZHxsq92ak.png)\n\n# 使用\n配置完成后，按下 Option + Space (默认快捷键)，**Bosswift** 的快速启动框就打开了。\n\n![bosswift-quick-launch-bar](https://s2.loli.net/2022/07/11/BA4dlWFDEuaqjVe.png)\n\n输入关键字搜索想要执行命令的分支（各代表一个 worktree），回车或者按 Tab 键选中：\n\n![bosswift-quick-launch-search-branch](https://s2.loli.net/2022/07/11/icIqUQ8T3s9m1jX.png)\n\n搜索想要执行的命令，**Bosswift** 里已经自带了一些常用命令，回车即可执行：\n\n![bosswift-quick-pick-command](https://s2.loli.net/2022/07/11/9tc7LSs6mf5IJMQ.png)\n\n## 创建新的 Worktree\n当你需要新的 worktree 时，执行这个命令：\n\n![bosswift-create-worktree](https://s2.loli.net/2022/07/11/6EXZYkdlr5Pa2Jv.png)\n\n此命令可基于选中的分支创建新的 worktree，你只需要输入分支名即可：\n\n![bosswift-create-worktree-branch-name](https://s2.loli.net/2022/07/11/N7PVZYqS6zlv2nC.png)\n\n该命令会自动处理好以下几种 case\n- 本地已经有同名分支：将新 worktree 切换到该分支。\n- 本地没有对应分支，但是远端有：拉取该分支到本地，创建新 worktree 并切换到该分支。\n- 本地和云端均没有同名分支：创建新 worktree 并创建新分支。\n\n你可以修改该命令，在末尾添加诸如 \"**从源分支 worktree 拷贝 node_modules**\" 等操作，避免新 worktree 需要重新安装第三方依赖浪费时间。\n## 删除 Worktree\n当你不再需要某个 worktree 时，执行这个命令删除对应的 worktree 文件夹：\n\n![bosswift-delete-worktree](https://s2.loli.net/2022/07/11/KXynVNlpHodg69h.png)\n\n你可以修改该命令，在末尾添加清理操作，比如删除对应的 Xcode Derived Data 目录节省磁盘占用。\n\n# 编写自定义命令\n如果连自己的命令都不能编写还算什么 Boss 呢~\n我鼓励你编写适用于你项目的各种命令，**Bosswift** 会给你提供力所能及的帮助，一些可以使用的变量会在脚步运行时提供：\n\n![bosswift-command-glossary](https://s2.loli.net/2022/07/11/rvRZuxigzPkdTVJ.png)\n\n以选中了 /Users/huikai/dev 下 Doll Repo 的 feature 分支为例，以下是各变量的解释和对应值:\n|  变量名 | 意义 | 值  |\n|  ----  | ----  | ----  |\n| $BOSSWIFT_WORK_FOLDER  |  Bosswift 的工作目录  | /Users/huikai/dev |\n| $BOSSWIFT_PROJECT_NAME |  当前选中的 Repo 文件夹名  | Doll |\n| $BOSSWIFT_BRANCH_NAME |  当前选中的 Branch 名  | feature |\n| $BOSSWIFT_WORKTREE_PATH |  当前 Worktree 的路径  | /Users/huikai/dev/Bosswift_Work/Doll/feature |\n| $BOSSWIFT_DEFAULT_WORKTREE_PATH |  Repo 默认 Worktree 的路径 | /Users/huikai/dev/Doll |\n| $BOSSWIFT_XCODE_DERIVED_PATH |  Worktree 对应的 Xcode Derived Data 路径（Apple 开发者特供）  | /Users/huikai/Library/Developer/Xcode/DerivedData/Doll-cikiwqgnfwrbgzgebttnrazqigks |\n| $BOSSWIFT_XCODE_WORKSPACE_FILE |  当前 Worktree 里的 xcworkspace 文件名（Apple 开发者特供）  | Doll.xcworkspace |\n| $BOSSWIFT_XCODE_PROJECT_FILE |  当前 Worktree 里的 xcodeproj 文件名（Apple 开发者特供）  | Doll.xcodeproj |\n\n# Dashboard 查看运行中的命令\n可以在 Dashboard 管理正在运行中的任务：\n\n![bosswift-dashboard](https://s2.loli.net/2022/07/11/sdKzgDEtYRvQj5N.png)\n\n# 作为常用命令管理器 (Universal Command)\n有一些命令是全局的，时不时就得跑一下，比如为了解决 Xcode 认不出手机的问题，我常需要重启 usb 服务，但是我总是忘了怎么写，需要去各种笔记软件里拷贝出来很麻烦。\n\n有了 **Bosswift**，这些命令都可以统一存放到 Universal Command 里了：\n\n![bosswift-universal-commands](https://s2.loli.net/2022/07/11/ivKCaHUuGOwADyX.png)\n\n在快速启动框输入 “/” 就可以选择 Universal Command 去执行了：\n\n![bosswift-select-universal-command](https://s2.loli.net/2022/07/11/tkEiXnsAhY9Bxcb.png)\n\n# 作为临时命令启动器\n在快速启动框输入的关键字如果没有任何匹配项，就可以直接回车作为临时命令执行：\n\n![bosswift-temporary-commands](https://s2.loli.net/2022/07/11/UIE45RKTbSrCiNg.png)\n\n## 命令行 还是 GUI\n或许是命令行打得太少的缘故，我从没有体会过那种键指如飞框框框一回车就把活干完的快感，反而是很多命令我都要仔细检查，生怕打错一个字，把文件写到不该写的地方，把不该删的文件删了，确认没问题后我才敢回车，效率并没有很高。\n\n说一句违背祖宗的话，作为一个程序员，我一直对命令行喜欢不起来，甚至有点怕命令行，diff 还有合并冲突这些事都喜欢用死贵的 GUI 工具（如 JetBrains 系列）来完成。\n\n可是 GUI 在重复任务自动化方面是完全不行的，各个程序的界面设计也良莠不齐，遇到难用的真还不如手打命令。\n\n很幸运，这不是一个非此即彼的问题，把格局打开，GUI 里可以有命令行，命令行也可以调 GUI 嘛。\n\n命令行在自动化和功能可造性上都是碾压 GUI 的，**Bosswift** 离不开命令行，它背后的核心是 _screen_ 命令（用来分发任务），为了实现任务管理，_ps_, _grep_, _pkill_ 等命令也是必不可少的，把这些命令和易用的 GUI 结合在一起，配合一些巧妙的引导，GUI 能帮助用户毫无心理压力地执行任务（一些优秀的防呆设计可以做到这点），最后命令行默默把活干了就行。\n\n# 代码地址\nhttps://github.com/xiaogdgenuine/bosswift\n\n免责声明：\n我一向风格就是能跑就行，把活干了再来扯别的，所以代码洁癖千万不要看，血压会上来，Repo 里充满了丑陋的全局变量，不合理的模块划分，以及各种自以为是的环境假设。\n","source":"_posts/bosswift-the-programer-command-launcher.md","raw":"---\ntitle: \"Bosswift - 为 Git 用户设计的命令启动器\"\ndate: 2022-07-10\ncategories:\n- [gallery]\ntags:\n- Bosswift\n- Command Launcher\n- Productivity\n- Git\nfeatured_image: https://s2.loli.net/2022/07/10/AOeoQdW5Nk7pliG.jpg\n---\n\n## 一件麻烦事\n朋友，在你的开发生涯中，是否经常有过这样的经历：\n\n> 你正工作在某个开发任务上，同事紧急让你帮忙定位一下另一个已上线的功能为什么表现怪异，是不是代码有什么问题。\n\n你说好，然后熟练地打开命令行窗口，打下一大串让人心疼的命令：\n\n```bash\n# 暂存当前的工作\ngit stash -u\n# 切换到线上分支\ngit checkout release/v1\n# 拉取线上分支最新代码\ngit pull\n# 安装依赖，配置运行环境等\nnpm install...\n# 启动，定位问题\nnpm run...\n```\n\n折腾五六分钟后终于把环境跑起来，定位问题结束后，你又打开命令行窗口，打下另一串让人心疼的命令，继续你原本的开发任务:\n\n```bash\n# 切换回工作分支\ngit checkout feature/in-development\n# 恢复工作变更\ngit stash apply\n# 安装依赖，配置运行环境等\nnpm install...\n# 启动，继续开发\nnpm run...\n```\n\n如果一天内这样的事情多次出现，你的工作效率会相当低效，时间都耗费在没必要的上下文切换上了.\n\n想象一下如果我们可以同时 Checkout 多个分支，每个分支有自己专属的工作文件夹，是不是就不用这么折腾了？\n\n确实是这样子的，这个频繁上下文切换的问题 git 团队也注意到了，为了解决它，git 2.5 版本开始支持 [multiple worktrees](https://git-scm.com/docs/git-worktree)，你可以在一个 git repo 里同时创建多个 worktree 拷贝，每个 worktree 都有专属于自己的分支, 类似下图：\n\n![bosswift-git-worktree-explain](https://s2.loli.net/2022/07/11/bqQ4cdguWPxza3Z.webp)\n\n有了 git worktree，分支切换就变成了 cd 到不同的 worktree 目录，每个分支都可以拥有自己的独立工作目录，东西不会揉在一起，stash 命令也用不上了：\n\n![bosswift-new-fashion](https://s2.loli.net/2022/07/11/U62tEvT1gIrsKlY.jpg)\n\n更重要的是，你不需要重新安装项目依赖，因为你的工作代码没有任何改动！\n\ngit worktree 也可以帮我们确保本地一直有一个可以运行的分支，不会受你当前工作的影响，这一点有时候很重要。\n\n## 一个东西能解决问题，那它一定会带来新的问题\n纯命令行使用 git worktree 有以下问题：\n- 创建和删除 worktree 要手打的东西实在太多了, 得指定 worktree 路径，指定新分支名等，经常写错要删了 worktree 重来\n- 切换分支要 cd 来 cd 去，常常忘了自己在哪里要干什么，也比较容易切错目录\n- 磁盘占用多，每个 worktree 里第三方依赖都得单独拷贝一份\n\n## ✨✨✨ Bosswift ✨✨✨\n为了解决命令行使用 git worktree 的这些痛点，**Bosswift** 应运而生。\n\n**Bosswift** 与 git worktree 深度集成，帮助你用 UI 的方式轻松管理 worktree。\n\n![bosswift-introduction](https://s2.loli.net/2022/07/11/dQnKzR5gjMTA718.png)\n\n# 安装 + 配置\n从[这里下载](https://github.com/xiaogdgenuine/bosswift/releases/latest)最新的安装包，双击安装。\n\n![bosswift-install](https://s2.loli.net/2022/07/11/E9tuLSBJAUX6bjd.png)\n\n第一次打开 **Bosswift** 需要一点配置，主要就是选一下你平时的工作目录，这样 **Bosswift** 就可以随时同步 Worktree 状态，我习惯是创建一个 dev 目录存放所有工作项目：\n\n![bosswift-on-boarding](https://s2.loli.net/2022/07/11/WJIgGTZHxsq92ak.png)\n\n# 使用\n配置完成后，按下 Option + Space (默认快捷键)，**Bosswift** 的快速启动框就打开了。\n\n![bosswift-quick-launch-bar](https://s2.loli.net/2022/07/11/BA4dlWFDEuaqjVe.png)\n\n输入关键字搜索想要执行命令的分支（各代表一个 worktree），回车或者按 Tab 键选中：\n\n![bosswift-quick-launch-search-branch](https://s2.loli.net/2022/07/11/icIqUQ8T3s9m1jX.png)\n\n搜索想要执行的命令，**Bosswift** 里已经自带了一些常用命令，回车即可执行：\n\n![bosswift-quick-pick-command](https://s2.loli.net/2022/07/11/9tc7LSs6mf5IJMQ.png)\n\n## 创建新的 Worktree\n当你需要新的 worktree 时，执行这个命令：\n\n![bosswift-create-worktree](https://s2.loli.net/2022/07/11/6EXZYkdlr5Pa2Jv.png)\n\n此命令可基于选中的分支创建新的 worktree，你只需要输入分支名即可：\n\n![bosswift-create-worktree-branch-name](https://s2.loli.net/2022/07/11/N7PVZYqS6zlv2nC.png)\n\n该命令会自动处理好以下几种 case\n- 本地已经有同名分支：将新 worktree 切换到该分支。\n- 本地没有对应分支，但是远端有：拉取该分支到本地，创建新 worktree 并切换到该分支。\n- 本地和云端均没有同名分支：创建新 worktree 并创建新分支。\n\n你可以修改该命令，在末尾添加诸如 \"**从源分支 worktree 拷贝 node_modules**\" 等操作，避免新 worktree 需要重新安装第三方依赖浪费时间。\n## 删除 Worktree\n当你不再需要某个 worktree 时，执行这个命令删除对应的 worktree 文件夹：\n\n![bosswift-delete-worktree](https://s2.loli.net/2022/07/11/KXynVNlpHodg69h.png)\n\n你可以修改该命令，在末尾添加清理操作，比如删除对应的 Xcode Derived Data 目录节省磁盘占用。\n\n# 编写自定义命令\n如果连自己的命令都不能编写还算什么 Boss 呢~\n我鼓励你编写适用于你项目的各种命令，**Bosswift** 会给你提供力所能及的帮助，一些可以使用的变量会在脚步运行时提供：\n\n![bosswift-command-glossary](https://s2.loli.net/2022/07/11/rvRZuxigzPkdTVJ.png)\n\n以选中了 /Users/huikai/dev 下 Doll Repo 的 feature 分支为例，以下是各变量的解释和对应值:\n|  变量名 | 意义 | 值  |\n|  ----  | ----  | ----  |\n| $BOSSWIFT_WORK_FOLDER  |  Bosswift 的工作目录  | /Users/huikai/dev |\n| $BOSSWIFT_PROJECT_NAME |  当前选中的 Repo 文件夹名  | Doll |\n| $BOSSWIFT_BRANCH_NAME |  当前选中的 Branch 名  | feature |\n| $BOSSWIFT_WORKTREE_PATH |  当前 Worktree 的路径  | /Users/huikai/dev/Bosswift_Work/Doll/feature |\n| $BOSSWIFT_DEFAULT_WORKTREE_PATH |  Repo 默认 Worktree 的路径 | /Users/huikai/dev/Doll |\n| $BOSSWIFT_XCODE_DERIVED_PATH |  Worktree 对应的 Xcode Derived Data 路径（Apple 开发者特供）  | /Users/huikai/Library/Developer/Xcode/DerivedData/Doll-cikiwqgnfwrbgzgebttnrazqigks |\n| $BOSSWIFT_XCODE_WORKSPACE_FILE |  当前 Worktree 里的 xcworkspace 文件名（Apple 开发者特供）  | Doll.xcworkspace |\n| $BOSSWIFT_XCODE_PROJECT_FILE |  当前 Worktree 里的 xcodeproj 文件名（Apple 开发者特供）  | Doll.xcodeproj |\n\n# Dashboard 查看运行中的命令\n可以在 Dashboard 管理正在运行中的任务：\n\n![bosswift-dashboard](https://s2.loli.net/2022/07/11/sdKzgDEtYRvQj5N.png)\n\n# 作为常用命令管理器 (Universal Command)\n有一些命令是全局的，时不时就得跑一下，比如为了解决 Xcode 认不出手机的问题，我常需要重启 usb 服务，但是我总是忘了怎么写，需要去各种笔记软件里拷贝出来很麻烦。\n\n有了 **Bosswift**，这些命令都可以统一存放到 Universal Command 里了：\n\n![bosswift-universal-commands](https://s2.loli.net/2022/07/11/ivKCaHUuGOwADyX.png)\n\n在快速启动框输入 “/” 就可以选择 Universal Command 去执行了：\n\n![bosswift-select-universal-command](https://s2.loli.net/2022/07/11/tkEiXnsAhY9Bxcb.png)\n\n# 作为临时命令启动器\n在快速启动框输入的关键字如果没有任何匹配项，就可以直接回车作为临时命令执行：\n\n![bosswift-temporary-commands](https://s2.loli.net/2022/07/11/UIE45RKTbSrCiNg.png)\n\n## 命令行 还是 GUI\n或许是命令行打得太少的缘故，我从没有体会过那种键指如飞框框框一回车就把活干完的快感，反而是很多命令我都要仔细检查，生怕打错一个字，把文件写到不该写的地方，把不该删的文件删了，确认没问题后我才敢回车，效率并没有很高。\n\n说一句违背祖宗的话，作为一个程序员，我一直对命令行喜欢不起来，甚至有点怕命令行，diff 还有合并冲突这些事都喜欢用死贵的 GUI 工具（如 JetBrains 系列）来完成。\n\n可是 GUI 在重复任务自动化方面是完全不行的，各个程序的界面设计也良莠不齐，遇到难用的真还不如手打命令。\n\n很幸运，这不是一个非此即彼的问题，把格局打开，GUI 里可以有命令行，命令行也可以调 GUI 嘛。\n\n命令行在自动化和功能可造性上都是碾压 GUI 的，**Bosswift** 离不开命令行，它背后的核心是 _screen_ 命令（用来分发任务），为了实现任务管理，_ps_, _grep_, _pkill_ 等命令也是必不可少的，把这些命令和易用的 GUI 结合在一起，配合一些巧妙的引导，GUI 能帮助用户毫无心理压力地执行任务（一些优秀的防呆设计可以做到这点），最后命令行默默把活干了就行。\n\n# 代码地址\nhttps://github.com/xiaogdgenuine/bosswift\n\n免责声明：\n我一向风格就是能跑就行，把活干了再来扯别的，所以代码洁癖千万不要看，血压会上来，Repo 里充满了丑陋的全局变量，不合理的模块划分，以及各种自以为是的环境假设。\n","slug":"bosswift-the-programer-command-launcher","published":1,"updated":"2022-07-11T09:32:13.762Z","_id":"cl5fgih6f0000fc5t1ovo6fxm","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"一件麻烦事\"><a href=\"#一件麻烦事\" class=\"headerlink\" title=\"一件麻烦事\"></a>一件麻烦事</h2><p>朋友，在你的开发生涯中，是否经常有过这样的经历：</p>\n<blockquote>\n<p>你正工作在某个开发任务上，同事紧急让你帮忙定位一下另一个已上线的功能为什么表现怪异，是不是代码有什么问题。</p>\n</blockquote>\n<p>你说好，然后熟练地打开命令行窗口，打下一大串让人心疼的命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 暂存当前的工作</span></span><br><span class=\"line\">git stash -u</span><br><span class=\"line\"><span class=\"comment\"># 切换到线上分支</span></span><br><span class=\"line\">git checkout release/v1</span><br><span class=\"line\"><span class=\"comment\"># 拉取线上分支最新代码</span></span><br><span class=\"line\">git pull</span><br><span class=\"line\"><span class=\"comment\"># 安装依赖，配置运行环境等</span></span><br><span class=\"line\">npm install...</span><br><span class=\"line\"><span class=\"comment\"># 启动，定位问题</span></span><br><span class=\"line\">npm run...</span><br></pre></td></tr></table></figure>\n\n<p>折腾五六分钟后终于把环境跑起来，定位问题结束后，你又打开命令行窗口，打下另一串让人心疼的命令，继续你原本的开发任务:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换回工作分支</span></span><br><span class=\"line\">git checkout feature/in-development</span><br><span class=\"line\"><span class=\"comment\"># 恢复工作变更</span></span><br><span class=\"line\">git stash apply</span><br><span class=\"line\"><span class=\"comment\"># 安装依赖，配置运行环境等</span></span><br><span class=\"line\">npm install...</span><br><span class=\"line\"><span class=\"comment\"># 启动，继续开发</span></span><br><span class=\"line\">npm run...</span><br></pre></td></tr></table></figure>\n\n<p>如果一天内这样的事情多次出现，你的工作效率会相当低效，时间都耗费在没必要的上下文切换上了.</p>\n<p>想象一下如果我们可以同时 Checkout 多个分支，每个分支有自己专属的工作文件夹，是不是就不用这么折腾了？</p>\n<p>确实是这样子的，这个频繁上下文切换的问题 git 团队也注意到了，为了解决它，git 2.5 版本开始支持 <a href=\"https://git-scm.com/docs/git-worktree\">multiple worktrees</a>，你可以在一个 git repo 里同时创建多个 worktree 拷贝，每个 worktree 都有专属于自己的分支, 类似下图：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/bqQ4cdguWPxza3Z.webp\" alt=\"bosswift-git-worktree-explain\"></p>\n<p>有了 git worktree，分支切换就变成了 cd 到不同的 worktree 目录，每个分支都可以拥有自己的独立工作目录，东西不会揉在一起，stash 命令也用不上了：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/U62tEvT1gIrsKlY.jpg\" alt=\"bosswift-new-fashion\"></p>\n<p>更重要的是，你不需要重新安装项目依赖，因为你的工作代码没有任何改动！</p>\n<p>git worktree 也可以帮我们确保本地一直有一个可以运行的分支，不会受你当前工作的影响，这一点有时候很重要。</p>\n<h2 id=\"一个东西能解决问题，那它一定会带来新的问题\"><a href=\"#一个东西能解决问题，那它一定会带来新的问题\" class=\"headerlink\" title=\"一个东西能解决问题，那它一定会带来新的问题\"></a>一个东西能解决问题，那它一定会带来新的问题</h2><p>纯命令行使用 git worktree 有以下问题：</p>\n<ul>\n<li>创建和删除 worktree 要手打的东西实在太多了, 得指定 worktree 路径，指定新分支名等，经常写错要删了 worktree 重来</li>\n<li>切换分支要 cd 来 cd 去，常常忘了自己在哪里要干什么，也比较容易切错目录</li>\n<li>磁盘占用多，每个 worktree 里第三方依赖都得单独拷贝一份</li>\n</ul>\n<h2 id=\"✨✨✨-Bosswift-✨✨✨\"><a href=\"#✨✨✨-Bosswift-✨✨✨\" class=\"headerlink\" title=\"✨✨✨ Bosswift ✨✨✨\"></a>✨✨✨ Bosswift ✨✨✨</h2><p>为了解决命令行使用 git worktree 的这些痛点，<strong>Bosswift</strong> 应运而生。</p>\n<p><strong>Bosswift</strong> 与 git worktree 深度集成，帮助你用 UI 的方式轻松管理 worktree。</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/dQnKzR5gjMTA718.png\" alt=\"bosswift-introduction\"></p>\n<h1 id=\"安装-配置\"><a href=\"#安装-配置\" class=\"headerlink\" title=\"安装 + 配置\"></a>安装 + 配置</h1><p>从<a href=\"https://github.com/xiaogdgenuine/bosswift/releases/latest\">这里下载</a>最新的安装包，双击安装。</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/E9tuLSBJAUX6bjd.png\" alt=\"bosswift-install\"></p>\n<p>第一次打开 <strong>Bosswift</strong> 需要一点配置，主要就是选一下你平时的工作目录，这样 <strong>Bosswift</strong> 就可以随时同步 Worktree 状态，我习惯是创建一个 dev 目录存放所有工作项目：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/WJIgGTZHxsq92ak.png\" alt=\"bosswift-on-boarding\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>配置完成后，按下 Option + Space (默认快捷键)，<strong>Bosswift</strong> 的快速启动框就打开了。</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/BA4dlWFDEuaqjVe.png\" alt=\"bosswift-quick-launch-bar\"></p>\n<p>输入关键字搜索想要执行命令的分支（各代表一个 worktree），回车或者按 Tab 键选中：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/icIqUQ8T3s9m1jX.png\" alt=\"bosswift-quick-launch-search-branch\"></p>\n<p>搜索想要执行的命令，<strong>Bosswift</strong> 里已经自带了一些常用命令，回车即可执行：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/9tc7LSs6mf5IJMQ.png\" alt=\"bosswift-quick-pick-command\"></p>\n<h2 id=\"创建新的-Worktree\"><a href=\"#创建新的-Worktree\" class=\"headerlink\" title=\"创建新的 Worktree\"></a>创建新的 Worktree</h2><p>当你需要新的 worktree 时，执行这个命令：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/6EXZYkdlr5Pa2Jv.png\" alt=\"bosswift-create-worktree\"></p>\n<p>此命令可基于选中的分支创建新的 worktree，你只需要输入分支名即可：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/N7PVZYqS6zlv2nC.png\" alt=\"bosswift-create-worktree-branch-name\"></p>\n<p>该命令会自动处理好以下几种 case</p>\n<ul>\n<li>本地已经有同名分支：将新 worktree 切换到该分支。</li>\n<li>本地没有对应分支，但是远端有：拉取该分支到本地，创建新 worktree 并切换到该分支。</li>\n<li>本地和云端均没有同名分支：创建新 worktree 并创建新分支。</li>\n</ul>\n<p>你可以修改该命令，在末尾添加诸如 “<strong>从源分支 worktree 拷贝 node_modules</strong>“ 等操作，避免新 worktree 需要重新安装第三方依赖浪费时间。</p>\n<h2 id=\"删除-Worktree\"><a href=\"#删除-Worktree\" class=\"headerlink\" title=\"删除 Worktree\"></a>删除 Worktree</h2><p>当你不再需要某个 worktree 时，执行这个命令删除对应的 worktree 文件夹：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/KXynVNlpHodg69h.png\" alt=\"bosswift-delete-worktree\"></p>\n<p>你可以修改该命令，在末尾添加清理操作，比如删除对应的 Xcode Derived Data 目录节省磁盘占用。</p>\n<h1 id=\"编写自定义命令\"><a href=\"#编写自定义命令\" class=\"headerlink\" title=\"编写自定义命令\"></a>编写自定义命令</h1><p>如果连自己的命令都不能编写还算什么 Boss 呢~<br>我鼓励你编写适用于你项目的各种命令，<strong>Bosswift</strong> 会给你提供力所能及的帮助，一些可以使用的变量会在脚步运行时提供：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/rvRZuxigzPkdTVJ.png\" alt=\"bosswift-command-glossary\"></p>\n<p>以选中了 &#x2F;Users&#x2F;huikai&#x2F;dev 下 Doll Repo 的 feature 分支为例，以下是各变量的解释和对应值:</p>\n<table>\n<thead>\n<tr>\n<th>变量名</th>\n<th>意义</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$BOSSWIFT_WORK_FOLDER</td>\n<td>Bosswift 的工作目录</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;dev</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_PROJECT_NAME</td>\n<td>当前选中的 Repo 文件夹名</td>\n<td>Doll</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_BRANCH_NAME</td>\n<td>当前选中的 Branch 名</td>\n<td>feature</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_WORKTREE_PATH</td>\n<td>当前 Worktree 的路径</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;dev&#x2F;Bosswift_Work&#x2F;Doll&#x2F;feature</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_DEFAULT_WORKTREE_PATH</td>\n<td>Repo 默认 Worktree 的路径</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;dev&#x2F;Doll</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_XCODE_DERIVED_PATH</td>\n<td>Worktree 对应的 Xcode Derived Data 路径（Apple 开发者特供）</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;Library&#x2F;Developer&#x2F;Xcode&#x2F;DerivedData&#x2F;Doll-cikiwqgnfwrbgzgebttnrazqigks</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_XCODE_WORKSPACE_FILE</td>\n<td>当前 Worktree 里的 xcworkspace 文件名（Apple 开发者特供）</td>\n<td>Doll.xcworkspace</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_XCODE_PROJECT_FILE</td>\n<td>当前 Worktree 里的 xcodeproj 文件名（Apple 开发者特供）</td>\n<td>Doll.xcodeproj</td>\n</tr>\n</tbody></table>\n<h1 id=\"Dashboard-查看运行中的命令\"><a href=\"#Dashboard-查看运行中的命令\" class=\"headerlink\" title=\"Dashboard 查看运行中的命令\"></a>Dashboard 查看运行中的命令</h1><p>可以在 Dashboard 管理正在运行中的任务：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/sdKzgDEtYRvQj5N.png\" alt=\"bosswift-dashboard\"></p>\n<h1 id=\"作为常用命令管理器-Universal-Command\"><a href=\"#作为常用命令管理器-Universal-Command\" class=\"headerlink\" title=\"作为常用命令管理器 (Universal Command)\"></a>作为常用命令管理器 (Universal Command)</h1><p>有一些命令是全局的，时不时就得跑一下，比如为了解决 Xcode 认不出手机的问题，我常需要重启 usb 服务，但是我总是忘了怎么写，需要去各种笔记软件里拷贝出来很麻烦。</p>\n<p>有了 <strong>Bosswift</strong>，这些命令都可以统一存放到 Universal Command 里了：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/ivKCaHUuGOwADyX.png\" alt=\"bosswift-universal-commands\"></p>\n<p>在快速启动框输入 “&#x2F;” 就可以选择 Universal Command 去执行了：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/tkEiXnsAhY9Bxcb.png\" alt=\"bosswift-select-universal-command\"></p>\n<h1 id=\"作为临时命令启动器\"><a href=\"#作为临时命令启动器\" class=\"headerlink\" title=\"作为临时命令启动器\"></a>作为临时命令启动器</h1><p>在快速启动框输入的关键字如果没有任何匹配项，就可以直接回车作为临时命令执行：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/UIE45RKTbSrCiNg.png\" alt=\"bosswift-temporary-commands\"></p>\n<h2 id=\"命令行-还是-GUI\"><a href=\"#命令行-还是-GUI\" class=\"headerlink\" title=\"命令行 还是 GUI\"></a>命令行 还是 GUI</h2><p>或许是命令行打得太少的缘故，我从没有体会过那种键指如飞框框框一回车就把活干完的快感，反而是很多命令我都要仔细检查，生怕打错一个字，把文件写到不该写的地方，把不该删的文件删了，确认没问题后我才敢回车，效率并没有很高。</p>\n<p>说一句违背祖宗的话，作为一个程序员，我一直对命令行喜欢不起来，甚至有点怕命令行，diff 还有合并冲突这些事都喜欢用死贵的 GUI 工具（如 JetBrains 系列）来完成。</p>\n<p>可是 GUI 在重复任务自动化方面是完全不行的，各个程序的界面设计也良莠不齐，遇到难用的真还不如手打命令。</p>\n<p>很幸运，这不是一个非此即彼的问题，把格局打开，GUI 里可以有命令行，命令行也可以调 GUI 嘛。</p>\n<p>命令行在自动化和功能可造性上都是碾压 GUI 的，<strong>Bosswift</strong> 离不开命令行，它背后的核心是 <em>screen</em> 命令（用来分发任务），为了实现任务管理，<em>ps</em>, <em>grep</em>, <em>pkill</em> 等命令也是必不可少的，把这些命令和易用的 GUI 结合在一起，配合一些巧妙的引导，GUI 能帮助用户毫无心理压力地执行任务（一些优秀的防呆设计可以做到这点），最后命令行默默把活干了就行。</p>\n<h1 id=\"代码地址\"><a href=\"#代码地址\" class=\"headerlink\" title=\"代码地址\"></a>代码地址</h1><p><a href=\"https://github.com/xiaogdgenuine/bosswift\">https://github.com/xiaogdgenuine/bosswift</a></p>\n<p>免责声明：<br>我一向风格就是能跑就行，把活干了再来扯别的，所以代码洁癖千万不要看，血压会上来，Repo 里充满了丑陋的全局变量，不合理的模块划分，以及各种自以为是的环境假设。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一件麻烦事\"><a href=\"#一件麻烦事\" class=\"headerlink\" title=\"一件麻烦事\"></a>一件麻烦事</h2><p>朋友，在你的开发生涯中，是否经常有过这样的经历：</p>\n<blockquote>\n<p>你正工作在某个开发任务上，同事紧急让你帮忙定位一下另一个已上线的功能为什么表现怪异，是不是代码有什么问题。</p>\n</blockquote>\n<p>你说好，然后熟练地打开命令行窗口，打下一大串让人心疼的命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 暂存当前的工作</span></span><br><span class=\"line\">git stash -u</span><br><span class=\"line\"><span class=\"comment\"># 切换到线上分支</span></span><br><span class=\"line\">git checkout release/v1</span><br><span class=\"line\"><span class=\"comment\"># 拉取线上分支最新代码</span></span><br><span class=\"line\">git pull</span><br><span class=\"line\"><span class=\"comment\"># 安装依赖，配置运行环境等</span></span><br><span class=\"line\">npm install...</span><br><span class=\"line\"><span class=\"comment\"># 启动，定位问题</span></span><br><span class=\"line\">npm run...</span><br></pre></td></tr></table></figure>\n\n<p>折腾五六分钟后终于把环境跑起来，定位问题结束后，你又打开命令行窗口，打下另一串让人心疼的命令，继续你原本的开发任务:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换回工作分支</span></span><br><span class=\"line\">git checkout feature/in-development</span><br><span class=\"line\"><span class=\"comment\"># 恢复工作变更</span></span><br><span class=\"line\">git stash apply</span><br><span class=\"line\"><span class=\"comment\"># 安装依赖，配置运行环境等</span></span><br><span class=\"line\">npm install...</span><br><span class=\"line\"><span class=\"comment\"># 启动，继续开发</span></span><br><span class=\"line\">npm run...</span><br></pre></td></tr></table></figure>\n\n<p>如果一天内这样的事情多次出现，你的工作效率会相当低效，时间都耗费在没必要的上下文切换上了.</p>\n<p>想象一下如果我们可以同时 Checkout 多个分支，每个分支有自己专属的工作文件夹，是不是就不用这么折腾了？</p>\n<p>确实是这样子的，这个频繁上下文切换的问题 git 团队也注意到了，为了解决它，git 2.5 版本开始支持 <a href=\"https://git-scm.com/docs/git-worktree\">multiple worktrees</a>，你可以在一个 git repo 里同时创建多个 worktree 拷贝，每个 worktree 都有专属于自己的分支, 类似下图：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/bqQ4cdguWPxza3Z.webp\" alt=\"bosswift-git-worktree-explain\"></p>\n<p>有了 git worktree，分支切换就变成了 cd 到不同的 worktree 目录，每个分支都可以拥有自己的独立工作目录，东西不会揉在一起，stash 命令也用不上了：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/U62tEvT1gIrsKlY.jpg\" alt=\"bosswift-new-fashion\"></p>\n<p>更重要的是，你不需要重新安装项目依赖，因为你的工作代码没有任何改动！</p>\n<p>git worktree 也可以帮我们确保本地一直有一个可以运行的分支，不会受你当前工作的影响，这一点有时候很重要。</p>\n<h2 id=\"一个东西能解决问题，那它一定会带来新的问题\"><a href=\"#一个东西能解决问题，那它一定会带来新的问题\" class=\"headerlink\" title=\"一个东西能解决问题，那它一定会带来新的问题\"></a>一个东西能解决问题，那它一定会带来新的问题</h2><p>纯命令行使用 git worktree 有以下问题：</p>\n<ul>\n<li>创建和删除 worktree 要手打的东西实在太多了, 得指定 worktree 路径，指定新分支名等，经常写错要删了 worktree 重来</li>\n<li>切换分支要 cd 来 cd 去，常常忘了自己在哪里要干什么，也比较容易切错目录</li>\n<li>磁盘占用多，每个 worktree 里第三方依赖都得单独拷贝一份</li>\n</ul>\n<h2 id=\"✨✨✨-Bosswift-✨✨✨\"><a href=\"#✨✨✨-Bosswift-✨✨✨\" class=\"headerlink\" title=\"✨✨✨ Bosswift ✨✨✨\"></a>✨✨✨ Bosswift ✨✨✨</h2><p>为了解决命令行使用 git worktree 的这些痛点，<strong>Bosswift</strong> 应运而生。</p>\n<p><strong>Bosswift</strong> 与 git worktree 深度集成，帮助你用 UI 的方式轻松管理 worktree。</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/dQnKzR5gjMTA718.png\" alt=\"bosswift-introduction\"></p>\n<h1 id=\"安装-配置\"><a href=\"#安装-配置\" class=\"headerlink\" title=\"安装 + 配置\"></a>安装 + 配置</h1><p>从<a href=\"https://github.com/xiaogdgenuine/bosswift/releases/latest\">这里下载</a>最新的安装包，双击安装。</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/E9tuLSBJAUX6bjd.png\" alt=\"bosswift-install\"></p>\n<p>第一次打开 <strong>Bosswift</strong> 需要一点配置，主要就是选一下你平时的工作目录，这样 <strong>Bosswift</strong> 就可以随时同步 Worktree 状态，我习惯是创建一个 dev 目录存放所有工作项目：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/WJIgGTZHxsq92ak.png\" alt=\"bosswift-on-boarding\"></p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>配置完成后，按下 Option + Space (默认快捷键)，<strong>Bosswift</strong> 的快速启动框就打开了。</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/BA4dlWFDEuaqjVe.png\" alt=\"bosswift-quick-launch-bar\"></p>\n<p>输入关键字搜索想要执行命令的分支（各代表一个 worktree），回车或者按 Tab 键选中：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/icIqUQ8T3s9m1jX.png\" alt=\"bosswift-quick-launch-search-branch\"></p>\n<p>搜索想要执行的命令，<strong>Bosswift</strong> 里已经自带了一些常用命令，回车即可执行：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/9tc7LSs6mf5IJMQ.png\" alt=\"bosswift-quick-pick-command\"></p>\n<h2 id=\"创建新的-Worktree\"><a href=\"#创建新的-Worktree\" class=\"headerlink\" title=\"创建新的 Worktree\"></a>创建新的 Worktree</h2><p>当你需要新的 worktree 时，执行这个命令：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/6EXZYkdlr5Pa2Jv.png\" alt=\"bosswift-create-worktree\"></p>\n<p>此命令可基于选中的分支创建新的 worktree，你只需要输入分支名即可：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/N7PVZYqS6zlv2nC.png\" alt=\"bosswift-create-worktree-branch-name\"></p>\n<p>该命令会自动处理好以下几种 case</p>\n<ul>\n<li>本地已经有同名分支：将新 worktree 切换到该分支。</li>\n<li>本地没有对应分支，但是远端有：拉取该分支到本地，创建新 worktree 并切换到该分支。</li>\n<li>本地和云端均没有同名分支：创建新 worktree 并创建新分支。</li>\n</ul>\n<p>你可以修改该命令，在末尾添加诸如 “<strong>从源分支 worktree 拷贝 node_modules</strong>“ 等操作，避免新 worktree 需要重新安装第三方依赖浪费时间。</p>\n<h2 id=\"删除-Worktree\"><a href=\"#删除-Worktree\" class=\"headerlink\" title=\"删除 Worktree\"></a>删除 Worktree</h2><p>当你不再需要某个 worktree 时，执行这个命令删除对应的 worktree 文件夹：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/KXynVNlpHodg69h.png\" alt=\"bosswift-delete-worktree\"></p>\n<p>你可以修改该命令，在末尾添加清理操作，比如删除对应的 Xcode Derived Data 目录节省磁盘占用。</p>\n<h1 id=\"编写自定义命令\"><a href=\"#编写自定义命令\" class=\"headerlink\" title=\"编写自定义命令\"></a>编写自定义命令</h1><p>如果连自己的命令都不能编写还算什么 Boss 呢~<br>我鼓励你编写适用于你项目的各种命令，<strong>Bosswift</strong> 会给你提供力所能及的帮助，一些可以使用的变量会在脚步运行时提供：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/rvRZuxigzPkdTVJ.png\" alt=\"bosswift-command-glossary\"></p>\n<p>以选中了 &#x2F;Users&#x2F;huikai&#x2F;dev 下 Doll Repo 的 feature 分支为例，以下是各变量的解释和对应值:</p>\n<table>\n<thead>\n<tr>\n<th>变量名</th>\n<th>意义</th>\n<th>值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$BOSSWIFT_WORK_FOLDER</td>\n<td>Bosswift 的工作目录</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;dev</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_PROJECT_NAME</td>\n<td>当前选中的 Repo 文件夹名</td>\n<td>Doll</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_BRANCH_NAME</td>\n<td>当前选中的 Branch 名</td>\n<td>feature</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_WORKTREE_PATH</td>\n<td>当前 Worktree 的路径</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;dev&#x2F;Bosswift_Work&#x2F;Doll&#x2F;feature</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_DEFAULT_WORKTREE_PATH</td>\n<td>Repo 默认 Worktree 的路径</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;dev&#x2F;Doll</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_XCODE_DERIVED_PATH</td>\n<td>Worktree 对应的 Xcode Derived Data 路径（Apple 开发者特供）</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;Library&#x2F;Developer&#x2F;Xcode&#x2F;DerivedData&#x2F;Doll-cikiwqgnfwrbgzgebttnrazqigks</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_XCODE_WORKSPACE_FILE</td>\n<td>当前 Worktree 里的 xcworkspace 文件名（Apple 开发者特供）</td>\n<td>Doll.xcworkspace</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_XCODE_PROJECT_FILE</td>\n<td>当前 Worktree 里的 xcodeproj 文件名（Apple 开发者特供）</td>\n<td>Doll.xcodeproj</td>\n</tr>\n</tbody></table>\n<h1 id=\"Dashboard-查看运行中的命令\"><a href=\"#Dashboard-查看运行中的命令\" class=\"headerlink\" title=\"Dashboard 查看运行中的命令\"></a>Dashboard 查看运行中的命令</h1><p>可以在 Dashboard 管理正在运行中的任务：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/sdKzgDEtYRvQj5N.png\" alt=\"bosswift-dashboard\"></p>\n<h1 id=\"作为常用命令管理器-Universal-Command\"><a href=\"#作为常用命令管理器-Universal-Command\" class=\"headerlink\" title=\"作为常用命令管理器 (Universal Command)\"></a>作为常用命令管理器 (Universal Command)</h1><p>有一些命令是全局的，时不时就得跑一下，比如为了解决 Xcode 认不出手机的问题，我常需要重启 usb 服务，但是我总是忘了怎么写，需要去各种笔记软件里拷贝出来很麻烦。</p>\n<p>有了 <strong>Bosswift</strong>，这些命令都可以统一存放到 Universal Command 里了：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/ivKCaHUuGOwADyX.png\" alt=\"bosswift-universal-commands\"></p>\n<p>在快速启动框输入 “&#x2F;” 就可以选择 Universal Command 去执行了：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/tkEiXnsAhY9Bxcb.png\" alt=\"bosswift-select-universal-command\"></p>\n<h1 id=\"作为临时命令启动器\"><a href=\"#作为临时命令启动器\" class=\"headerlink\" title=\"作为临时命令启动器\"></a>作为临时命令启动器</h1><p>在快速启动框输入的关键字如果没有任何匹配项，就可以直接回车作为临时命令执行：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/UIE45RKTbSrCiNg.png\" alt=\"bosswift-temporary-commands\"></p>\n<h2 id=\"命令行-还是-GUI\"><a href=\"#命令行-还是-GUI\" class=\"headerlink\" title=\"命令行 还是 GUI\"></a>命令行 还是 GUI</h2><p>或许是命令行打得太少的缘故，我从没有体会过那种键指如飞框框框一回车就把活干完的快感，反而是很多命令我都要仔细检查，生怕打错一个字，把文件写到不该写的地方，把不该删的文件删了，确认没问题后我才敢回车，效率并没有很高。</p>\n<p>说一句违背祖宗的话，作为一个程序员，我一直对命令行喜欢不起来，甚至有点怕命令行，diff 还有合并冲突这些事都喜欢用死贵的 GUI 工具（如 JetBrains 系列）来完成。</p>\n<p>可是 GUI 在重复任务自动化方面是完全不行的，各个程序的界面设计也良莠不齐，遇到难用的真还不如手打命令。</p>\n<p>很幸运，这不是一个非此即彼的问题，把格局打开，GUI 里可以有命令行，命令行也可以调 GUI 嘛。</p>\n<p>命令行在自动化和功能可造性上都是碾压 GUI 的，<strong>Bosswift</strong> 离不开命令行，它背后的核心是 <em>screen</em> 命令（用来分发任务），为了实现任务管理，<em>ps</em>, <em>grep</em>, <em>pkill</em> 等命令也是必不可少的，把这些命令和易用的 GUI 结合在一起，配合一些巧妙的引导，GUI 能帮助用户毫无心理压力地执行任务（一些优秀的防呆设计可以做到这点），最后命令行默默把活干了就行。</p>\n<h1 id=\"代码地址\"><a href=\"#代码地址\" class=\"headerlink\" title=\"代码地址\"></a>代码地址</h1><p><a href=\"https://github.com/xiaogdgenuine/bosswift\">https://github.com/xiaogdgenuine/bosswift</a></p>\n<p>免责声明：<br>我一向风格就是能跑就行，把活干了再来扯别的，所以代码洁癖千万不要看，血压会上来，Repo 里充满了丑陋的全局变量，不合理的模块划分，以及各种自以为是的环境假设。</p>\n","_tags":[]},{"title":"Bosswift - A command launcher for git users","date":"2022-07-09T16:00:00.000Z","featured_image":"https://s2.loli.net/2022/07/10/AOeoQdW5Nk7pliG.jpg","_content":"\n## A troublesome thing\n\nAs a developer，have you ever had this experience?\n\n> You are working on some feature development, your colleague Slack you and ask you why an on-live feature is behaving weirdly, he want you to help check the problem and reproduce it.\n\nYou say ok, then you open Terminal, type bunch of commands:\n\n```bash\n# Store your temporary works\ngit stash -u\n# Switch to problematic branch\ngit checkout release/v1\n# Pull the latest changes\ngit pull\n# Install 3rd dependencies, setup runtime\nnpm install...\n# Run the project and try to address issue\nnpm run...\n```\n\nThis usually will take you couple minutes, and after the issue is resolved, you go back to work on your original task, by type these commands in Terminal:\n\n```bash\n# Switch back to work branch\ngit checkout feature/in-development\n# Restore your temporary works\ngit stash apply\n# Install 3rd dependencies, setup runtime\nnpm install...\n# Run the project and continue to work\nnpm run...\n```\n\nThis can happen multiple times in a day, not just to address a production issue, sometimes you also need to check different branch's runtime behavior, so you need to **switch > build and run > switch > build and run...** over and over.\n\nThis doesn't sound productive, what can we do about it?\n\nWell, imagine that if we could checkout multiple branch in same machine from a repo, every branch got it's own worktree, by this way can we solve the problem?\n\nYes we did! Git team apparently notice this problem too, start from git v2.5, [multiple worktrees](https://git-scm.com/docs/git-worktree) support is added, you can create multiple worktree copies from one repo, each worktree got it's own branch, just like this：\n\n![bosswift-git-worktree-explain](https://s2.loli.net/2022/07/11/bqQ4cdguWPxza3Z.webp)\n\nWith **git worktree**，we don't checkout branch anymore, instead we **_cd_** around worktrees，and also no need to stash/unstash anymore：\n\n![bosswift-new-fashion](https://s2.loli.net/2022/07/11/U62tEvT1gIrsKlY.jpg)\n\nThe most important is, you don't need to re-install 3rd dependencies constantly, because every worktree is stable if you don't touch them!\n\nAlso if we do it right, **git worktree** can help us make sure there is always a branch that can run anytime, you don't need to worry about your in-development works impact other stable worktrees, sometime this is important.\n\n## New solution always come with problems\n**git worktree** command got some pain points when using it：\n- Too many keystrokes, when you create a new worktree, you need to specify it's path, it's branch name, I often make mistake on these arguments\n- When you **_cd_** around worktrees, you often get lost\n- Too many disk usage, because now every worktree got it's own copy of 3rd dependencies(like _node_modules_)\n\n## ✨✨✨ Bosswift ✨✨✨\nTo solve these pain points come with use **git worktree** in command line way，**Bosswift** is born.\n**Bosswift** is a GUI app that integrated with git worktree deeply, it will help you manage worktrees without presure.\n\n![bosswift-introduction](https://s2.loli.net/2022/07/11/dQnKzR5gjMTA718.png)\n\n# Installation + Setup\nYou can download the latest release from [here](https://github.com/xiaogdgenuine/bosswift/releases/latest)\n\n![bosswift-install](https://s2.loli.net/2022/07/11/E9tuLSBJAUX6bjd.png)\n\nSome setups is required when you open **Bosswift**，the only important step is to specify where you put your working repos, so that **Bosswift** can monitor & sync the worktree status with your repos:\n\n![bosswift-on-boarding](https://s2.loli.net/2022/07/11/WJIgGTZHxsq92ak.png)\n\n# Usage\nAfter you done configuration, press **_Option + Space_** (Default) to open quick launch bar.\n\n![bosswift-quick-launch-bar](https://s2.loli.net/2022/07/11/BA4dlWFDEuaqjVe.png)\n\nStep 1, search & pick a worktree，hit enter/tab to select it：\n\n![bosswift-quick-launch-search-branch](https://s2.loli.net/2022/07/11/icIqUQ8T3s9m1jX.png)\n\nStep 2. Search & pick a command, hit enter to execute：\n\n![bosswift-quick-pick-command](https://s2.loli.net/2022/07/11/9tc7LSs6mf5IJMQ.png)\n\n## Create new Worktree\nWhen you need a new worktree, do this command:\n\n![bosswift-create-worktree](https://s2.loli.net/2022/07/11/6EXZYkdlr5Pa2Jv.png)\n\nAll you need is to input a branch name:\n\n![bosswift-create-worktree-branch-name](https://s2.loli.net/2022/07/11/N7PVZYqS6zlv2nC.png)\n\nIt will take care these cases for you\n- A local branch with same name exist：Switch new worktree to that branch.\n- A same name branch exists in remote：Fetch that remote branch to local，create new worktree and switch to that branch.\n- Totally new branch：Create new worktree with specified branch name.\n\nYou could modify that command, add some steps like \"**Copy node_modules from original worktree**\" to the end, to avoid re-install node modules in new worktree.\n\n## Delete Worktree\nWhe you no longer work on a worktree, you can save the disk usage by doing this command to delete the worktree：\n\n![bosswift-delete-worktree](https://s2.loli.net/2022/07/11/KXynVNlpHodg69h.png)\n\nYou could modify that command, add some steps like \"**Delete Xcode Derived Data folder**\" to the end, to release disk space.\n\n# Create custom commands\nWhat kind of Boss you are if you can't create your own command?\n\nI encourage you to write commands that suits your project and workflow, I don't have that energy to provide you a fancy command editor, but I will give you my help as much as I can, there are some variables you can use when creating new command:\n\n![bosswift-command-glossary](https://s2.loli.net/2022/07/11/rvRZuxigzPkdTVJ.png)\n\nFor example, if I select _feature_ branch of _Doll_ Repo under path _/Users/huikai/dev_, here is all variable's value:\n|  Name | Means | Value  |\n|  ----  | ----  | ----  |\n| $BOSSWIFT_WORK_FOLDER  |  Bosswift's working folder  | /Users/huikai/dev |\n| $BOSSWIFT_PROJECT_NAME |  Repo's folder name  | Doll |\n| $BOSSWIFT_BRANCH_NAME |  Selected branch's name  | feature |\n| $BOSSWIFT_WORKTREE_PATH |  The folder path of current worktree  | /Users/huikai/dev/Bosswift_Work/Doll/feature |\n| $BOSSWIFT_DEFAULT_WORKTREE_PATH |  The folder path of repo's main worktree | /Users/huikai/dev/Doll |\n| $BOSSWIFT_XCODE_DERIVED_PATH |  Xcode Derived folder path for worktree (For Apple developers)  | /Users/huikai/Library/Developer/Xcode/DerivedData/Doll-cikiwqgnfwrbgzgebttnrazqigks |\n| $BOSSWIFT_XCODE_WORKSPACE_FILE |  xcworkspace file name inside worktree (For Apple developers)  | Doll.xcworkspace |\n| $BOSSWIFT_XCODE_PROJECT_FILE | xcodeproj file name inside worktree (For Apple developers)  | Doll.xcodeproj |\n\n# Dashboard\nYou can check running tasks in Dashboard:\n\n![bosswift-dashboard](https://s2.loli.net/2022/07/11/sdKzgDEtYRvQj5N.png)\n\n# As an Universal command launcher\nSome command can be run from anywhere, and you always forgot how to type them, for example sometimes Xcode failed to recognize iPhone connected by usb cable, to fix that I need to restart **usb service**, but I never remember the command, I always need to copy it from google or Notes app.\n\nNow with **Bosswift**，you could put these commands into **Universal Command**：\n\n![bosswift-universal-commands](https://s2.loli.net/2022/07/11/ivKCaHUuGOwADyX.png)\n\nType \"/\" in quick launch box, then you can pick an Universal Command to run:\n\n![bosswift-select-universal-command](https://s2.loli.net/2022/07/11/tkEiXnsAhY9Bxcb.png)\n\n# As a temporary command launcher\nIf there's not command match the keyword in quick launch box, you can hit enter and execute the keyword as command directly:\n\n![bosswift-temporary-commands](https://s2.loli.net/2022/07/11/UIE45RKTbSrCiNg.png)\n\n## Command line or GUI?\nTo be honest, as a developer, I never get used to Terminal.\n\nI'm very careful when doing tasks in command line, I check my input over and over again to make sure I didn't write to wrong file, delete the wrong folder, I'm rather slow on Terminal because these stresses...\n\nI love GUI, really. Proper designed GUI tools is master pice, easy to use and stress-free.\n\nBut when it comes to automation, command line just.... kill GUI :). GUI isn't design for automation tasks at the first place, you can't never setup the automation workflow easily with GUI.\n\nLuckly, we don't have to choice between them, we can have an application that include both Command line and GUI.\n\nThis app can't run without command line, the _screen_ command is the core behind it(For dispatching tasks), and in order to manage running tasks, commands like _ps_, _grep_, _pkill_ is necessary too, put all these commands with an easy to use GUI, we got **Bosswift** :P.\n\n# Source code\nhttps://github.com/xiaogdgenuine/bosswift\n\nDisclaimer:\nWhen it comes to personal project, my code style is rather rough.\n\nI prefer do the damn thing first then see how it goes, if it works I will clear the code and re-architecture, if it's not working I will keep rough style till it works.\n\nThis Repo is currently full of ugly global variables, un-reasonable module separation and un-reliable assumptions about running environment.\n","source":"_posts/en/bosswift-the-programer-command-launcher.md","raw":"---\ntitle: \"Bosswift - A command launcher for git users\"\ndate: 2022-07-10\ncategories:\n- [gallery]\ntags:\n- Bosswift\n- Command Launcher\n- Productivity\n- Git\nfeatured_image: https://s2.loli.net/2022/07/10/AOeoQdW5Nk7pliG.jpg\n---\n\n## A troublesome thing\n\nAs a developer，have you ever had this experience?\n\n> You are working on some feature development, your colleague Slack you and ask you why an on-live feature is behaving weirdly, he want you to help check the problem and reproduce it.\n\nYou say ok, then you open Terminal, type bunch of commands:\n\n```bash\n# Store your temporary works\ngit stash -u\n# Switch to problematic branch\ngit checkout release/v1\n# Pull the latest changes\ngit pull\n# Install 3rd dependencies, setup runtime\nnpm install...\n# Run the project and try to address issue\nnpm run...\n```\n\nThis usually will take you couple minutes, and after the issue is resolved, you go back to work on your original task, by type these commands in Terminal:\n\n```bash\n# Switch back to work branch\ngit checkout feature/in-development\n# Restore your temporary works\ngit stash apply\n# Install 3rd dependencies, setup runtime\nnpm install...\n# Run the project and continue to work\nnpm run...\n```\n\nThis can happen multiple times in a day, not just to address a production issue, sometimes you also need to check different branch's runtime behavior, so you need to **switch > build and run > switch > build and run...** over and over.\n\nThis doesn't sound productive, what can we do about it?\n\nWell, imagine that if we could checkout multiple branch in same machine from a repo, every branch got it's own worktree, by this way can we solve the problem?\n\nYes we did! Git team apparently notice this problem too, start from git v2.5, [multiple worktrees](https://git-scm.com/docs/git-worktree) support is added, you can create multiple worktree copies from one repo, each worktree got it's own branch, just like this：\n\n![bosswift-git-worktree-explain](https://s2.loli.net/2022/07/11/bqQ4cdguWPxza3Z.webp)\n\nWith **git worktree**，we don't checkout branch anymore, instead we **_cd_** around worktrees，and also no need to stash/unstash anymore：\n\n![bosswift-new-fashion](https://s2.loli.net/2022/07/11/U62tEvT1gIrsKlY.jpg)\n\nThe most important is, you don't need to re-install 3rd dependencies constantly, because every worktree is stable if you don't touch them!\n\nAlso if we do it right, **git worktree** can help us make sure there is always a branch that can run anytime, you don't need to worry about your in-development works impact other stable worktrees, sometime this is important.\n\n## New solution always come with problems\n**git worktree** command got some pain points when using it：\n- Too many keystrokes, when you create a new worktree, you need to specify it's path, it's branch name, I often make mistake on these arguments\n- When you **_cd_** around worktrees, you often get lost\n- Too many disk usage, because now every worktree got it's own copy of 3rd dependencies(like _node_modules_)\n\n## ✨✨✨ Bosswift ✨✨✨\nTo solve these pain points come with use **git worktree** in command line way，**Bosswift** is born.\n**Bosswift** is a GUI app that integrated with git worktree deeply, it will help you manage worktrees without presure.\n\n![bosswift-introduction](https://s2.loli.net/2022/07/11/dQnKzR5gjMTA718.png)\n\n# Installation + Setup\nYou can download the latest release from [here](https://github.com/xiaogdgenuine/bosswift/releases/latest)\n\n![bosswift-install](https://s2.loli.net/2022/07/11/E9tuLSBJAUX6bjd.png)\n\nSome setups is required when you open **Bosswift**，the only important step is to specify where you put your working repos, so that **Bosswift** can monitor & sync the worktree status with your repos:\n\n![bosswift-on-boarding](https://s2.loli.net/2022/07/11/WJIgGTZHxsq92ak.png)\n\n# Usage\nAfter you done configuration, press **_Option + Space_** (Default) to open quick launch bar.\n\n![bosswift-quick-launch-bar](https://s2.loli.net/2022/07/11/BA4dlWFDEuaqjVe.png)\n\nStep 1, search & pick a worktree，hit enter/tab to select it：\n\n![bosswift-quick-launch-search-branch](https://s2.loli.net/2022/07/11/icIqUQ8T3s9m1jX.png)\n\nStep 2. Search & pick a command, hit enter to execute：\n\n![bosswift-quick-pick-command](https://s2.loli.net/2022/07/11/9tc7LSs6mf5IJMQ.png)\n\n## Create new Worktree\nWhen you need a new worktree, do this command:\n\n![bosswift-create-worktree](https://s2.loli.net/2022/07/11/6EXZYkdlr5Pa2Jv.png)\n\nAll you need is to input a branch name:\n\n![bosswift-create-worktree-branch-name](https://s2.loli.net/2022/07/11/N7PVZYqS6zlv2nC.png)\n\nIt will take care these cases for you\n- A local branch with same name exist：Switch new worktree to that branch.\n- A same name branch exists in remote：Fetch that remote branch to local，create new worktree and switch to that branch.\n- Totally new branch：Create new worktree with specified branch name.\n\nYou could modify that command, add some steps like \"**Copy node_modules from original worktree**\" to the end, to avoid re-install node modules in new worktree.\n\n## Delete Worktree\nWhe you no longer work on a worktree, you can save the disk usage by doing this command to delete the worktree：\n\n![bosswift-delete-worktree](https://s2.loli.net/2022/07/11/KXynVNlpHodg69h.png)\n\nYou could modify that command, add some steps like \"**Delete Xcode Derived Data folder**\" to the end, to release disk space.\n\n# Create custom commands\nWhat kind of Boss you are if you can't create your own command?\n\nI encourage you to write commands that suits your project and workflow, I don't have that energy to provide you a fancy command editor, but I will give you my help as much as I can, there are some variables you can use when creating new command:\n\n![bosswift-command-glossary](https://s2.loli.net/2022/07/11/rvRZuxigzPkdTVJ.png)\n\nFor example, if I select _feature_ branch of _Doll_ Repo under path _/Users/huikai/dev_, here is all variable's value:\n|  Name | Means | Value  |\n|  ----  | ----  | ----  |\n| $BOSSWIFT_WORK_FOLDER  |  Bosswift's working folder  | /Users/huikai/dev |\n| $BOSSWIFT_PROJECT_NAME |  Repo's folder name  | Doll |\n| $BOSSWIFT_BRANCH_NAME |  Selected branch's name  | feature |\n| $BOSSWIFT_WORKTREE_PATH |  The folder path of current worktree  | /Users/huikai/dev/Bosswift_Work/Doll/feature |\n| $BOSSWIFT_DEFAULT_WORKTREE_PATH |  The folder path of repo's main worktree | /Users/huikai/dev/Doll |\n| $BOSSWIFT_XCODE_DERIVED_PATH |  Xcode Derived folder path for worktree (For Apple developers)  | /Users/huikai/Library/Developer/Xcode/DerivedData/Doll-cikiwqgnfwrbgzgebttnrazqigks |\n| $BOSSWIFT_XCODE_WORKSPACE_FILE |  xcworkspace file name inside worktree (For Apple developers)  | Doll.xcworkspace |\n| $BOSSWIFT_XCODE_PROJECT_FILE | xcodeproj file name inside worktree (For Apple developers)  | Doll.xcodeproj |\n\n# Dashboard\nYou can check running tasks in Dashboard:\n\n![bosswift-dashboard](https://s2.loli.net/2022/07/11/sdKzgDEtYRvQj5N.png)\n\n# As an Universal command launcher\nSome command can be run from anywhere, and you always forgot how to type them, for example sometimes Xcode failed to recognize iPhone connected by usb cable, to fix that I need to restart **usb service**, but I never remember the command, I always need to copy it from google or Notes app.\n\nNow with **Bosswift**，you could put these commands into **Universal Command**：\n\n![bosswift-universal-commands](https://s2.loli.net/2022/07/11/ivKCaHUuGOwADyX.png)\n\nType \"/\" in quick launch box, then you can pick an Universal Command to run:\n\n![bosswift-select-universal-command](https://s2.loli.net/2022/07/11/tkEiXnsAhY9Bxcb.png)\n\n# As a temporary command launcher\nIf there's not command match the keyword in quick launch box, you can hit enter and execute the keyword as command directly:\n\n![bosswift-temporary-commands](https://s2.loli.net/2022/07/11/UIE45RKTbSrCiNg.png)\n\n## Command line or GUI?\nTo be honest, as a developer, I never get used to Terminal.\n\nI'm very careful when doing tasks in command line, I check my input over and over again to make sure I didn't write to wrong file, delete the wrong folder, I'm rather slow on Terminal because these stresses...\n\nI love GUI, really. Proper designed GUI tools is master pice, easy to use and stress-free.\n\nBut when it comes to automation, command line just.... kill GUI :). GUI isn't design for automation tasks at the first place, you can't never setup the automation workflow easily with GUI.\n\nLuckly, we don't have to choice between them, we can have an application that include both Command line and GUI.\n\nThis app can't run without command line, the _screen_ command is the core behind it(For dispatching tasks), and in order to manage running tasks, commands like _ps_, _grep_, _pkill_ is necessary too, put all these commands with an easy to use GUI, we got **Bosswift** :P.\n\n# Source code\nhttps://github.com/xiaogdgenuine/bosswift\n\nDisclaimer:\nWhen it comes to personal project, my code style is rather rough.\n\nI prefer do the damn thing first then see how it goes, if it works I will clear the code and re-architecture, if it's not working I will keep rough style till it works.\n\nThis Repo is currently full of ugly global variables, un-reasonable module separation and un-reliable assumptions about running environment.\n","slug":"bosswift-the-programer-command-launcher","published":1,"lang":"en","updated":"2022-07-11T12:08:57.853Z","_id":"cl5g0lb4b0000f4d41hoq16dd","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"A-troublesome-thing\"><a href=\"#A-troublesome-thing\" class=\"headerlink\" title=\"A troublesome thing\"></a>A troublesome thing</h2><p>As a developer，have you ever had this experience?</p>\n<blockquote>\n<p>You are working on some feature development, your colleague Slack you and ask you why an on-live feature is behaving weirdly, he want you to help check the problem and reproduce it.</p>\n</blockquote>\n<p>You say ok, then you open Terminal, type bunch of commands:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Store your temporary works</span></span><br><span class=\"line\">git stash -u</span><br><span class=\"line\"><span class=\"comment\"># Switch to problematic branch</span></span><br><span class=\"line\">git checkout release/v1</span><br><span class=\"line\"><span class=\"comment\"># Pull the latest changes</span></span><br><span class=\"line\">git pull</span><br><span class=\"line\"><span class=\"comment\"># Install 3rd dependencies, setup runtime</span></span><br><span class=\"line\">npm install...</span><br><span class=\"line\"><span class=\"comment\"># Run the project and try to address issue</span></span><br><span class=\"line\">npm run...</span><br></pre></td></tr></table></figure>\n\n<p>This usually will take you couple minutes, and after the issue is resolved, you go back to work on your original task, by type these commands in Terminal:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Switch back to work branch</span></span><br><span class=\"line\">git checkout feature/in-development</span><br><span class=\"line\"><span class=\"comment\"># Restore your temporary works</span></span><br><span class=\"line\">git stash apply</span><br><span class=\"line\"><span class=\"comment\"># Install 3rd dependencies, setup runtime</span></span><br><span class=\"line\">npm install...</span><br><span class=\"line\"><span class=\"comment\"># Run the project and continue to work</span></span><br><span class=\"line\">npm run...</span><br></pre></td></tr></table></figure>\n\n<p>This can happen multiple times in a day, not just to address a production issue, sometimes you also need to check different branch’s runtime behavior, so you need to <strong>switch &gt; build and run &gt; switch &gt; build and run…</strong> over and over.</p>\n<p>This doesn’t sound productive, what can we do about it?</p>\n<p>Well, imagine that if we could checkout multiple branch in same machine from a repo, every branch got it’s own worktree, by this way can we solve the problem?</p>\n<p>Yes we did! Git team apparently notice this problem too, start from git v2.5, <a href=\"https://git-scm.com/docs/git-worktree\">multiple worktrees</a> support is added, you can create multiple worktree copies from one repo, each worktree got it’s own branch, just like this：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/bqQ4cdguWPxza3Z.webp\" alt=\"bosswift-git-worktree-explain\"></p>\n<p>With <strong>git worktree</strong>，we don’t checkout branch anymore, instead we <strong><em>cd</em></strong> around worktrees，and also no need to stash&#x2F;unstash anymore：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/U62tEvT1gIrsKlY.jpg\" alt=\"bosswift-new-fashion\"></p>\n<p>The most important is, you don’t need to re-install 3rd dependencies constantly, because every worktree is stable if you don’t touch them!</p>\n<p>Also if we do it right, <strong>git worktree</strong> can help us make sure there is always a branch that can run anytime, you don’t need to worry about your in-development works impact other stable worktrees, sometime this is important.</p>\n<h2 id=\"New-solution-always-come-with-problems\"><a href=\"#New-solution-always-come-with-problems\" class=\"headerlink\" title=\"New solution always come with problems\"></a>New solution always come with problems</h2><p><strong>git worktree</strong> command got some pain points when using it：</p>\n<ul>\n<li>Too many keystrokes, when you create a new worktree, you need to specify it’s path, it’s branch name, I often make mistake on these arguments</li>\n<li>When you <strong><em>cd</em></strong> around worktrees, you often get lost</li>\n<li>Too many disk usage, because now every worktree got it’s own copy of 3rd dependencies(like <em>node_modules</em>)</li>\n</ul>\n<h2 id=\"✨✨✨-Bosswift-✨✨✨\"><a href=\"#✨✨✨-Bosswift-✨✨✨\" class=\"headerlink\" title=\"✨✨✨ Bosswift ✨✨✨\"></a>✨✨✨ Bosswift ✨✨✨</h2><p>To solve these pain points come with use <strong>git worktree</strong> in command line way，<strong>Bosswift</strong> is born.<br><strong>Bosswift</strong> is a GUI app that integrated with git worktree deeply, it will help you manage worktrees without presure.</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/dQnKzR5gjMTA718.png\" alt=\"bosswift-introduction\"></p>\n<h1 id=\"Installation-Setup\"><a href=\"#Installation-Setup\" class=\"headerlink\" title=\"Installation + Setup\"></a>Installation + Setup</h1><p>You can download the latest release from <a href=\"https://github.com/xiaogdgenuine/bosswift/releases/latest\">here</a></p>\n<p><img src=\"https://s2.loli.net/2022/07/11/E9tuLSBJAUX6bjd.png\" alt=\"bosswift-install\"></p>\n<p>Some setups is required when you open <strong>Bosswift</strong>，the only important step is to specify where you put your working repos, so that <strong>Bosswift</strong> can monitor &amp; sync the worktree status with your repos:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/WJIgGTZHxsq92ak.png\" alt=\"bosswift-on-boarding\"></p>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><p>After you done configuration, press <strong><em>Option + Space</em></strong> (Default) to open quick launch bar.</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/BA4dlWFDEuaqjVe.png\" alt=\"bosswift-quick-launch-bar\"></p>\n<p>Step 1, search &amp; pick a worktree，hit enter&#x2F;tab to select it：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/icIqUQ8T3s9m1jX.png\" alt=\"bosswift-quick-launch-search-branch\"></p>\n<p>Step 2. Search &amp; pick a command, hit enter to execute：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/9tc7LSs6mf5IJMQ.png\" alt=\"bosswift-quick-pick-command\"></p>\n<h2 id=\"Create-new-Worktree\"><a href=\"#Create-new-Worktree\" class=\"headerlink\" title=\"Create new Worktree\"></a>Create new Worktree</h2><p>When you need a new worktree, do this command:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/6EXZYkdlr5Pa2Jv.png\" alt=\"bosswift-create-worktree\"></p>\n<p>All you need is to input a branch name:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/N7PVZYqS6zlv2nC.png\" alt=\"bosswift-create-worktree-branch-name\"></p>\n<p>It will take care these cases for you</p>\n<ul>\n<li>A local branch with same name exist：Switch new worktree to that branch.</li>\n<li>A same name branch exists in remote：Fetch that remote branch to local，create new worktree and switch to that branch.</li>\n<li>Totally new branch：Create new worktree with specified branch name.</li>\n</ul>\n<p>You could modify that command, add some steps like “<strong>Copy node_modules from original worktree</strong>“ to the end, to avoid re-install node modules in new worktree.</p>\n<h2 id=\"Delete-Worktree\"><a href=\"#Delete-Worktree\" class=\"headerlink\" title=\"Delete Worktree\"></a>Delete Worktree</h2><p>Whe you no longer work on a worktree, you can save the disk usage by doing this command to delete the worktree：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/KXynVNlpHodg69h.png\" alt=\"bosswift-delete-worktree\"></p>\n<p>You could modify that command, add some steps like “<strong>Delete Xcode Derived Data folder</strong>“ to the end, to release disk space.</p>\n<h1 id=\"Create-custom-commands\"><a href=\"#Create-custom-commands\" class=\"headerlink\" title=\"Create custom commands\"></a>Create custom commands</h1><p>What kind of Boss you are if you can’t create your own command?</p>\n<p>I encourage you to write commands that suits your project and workflow, I don’t have that energy to provide you a fancy command editor, but I will give you my help as much as I can, there are some variables you can use when creating new command:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/rvRZuxigzPkdTVJ.png\" alt=\"bosswift-command-glossary\"></p>\n<p>For example, if I select <em>feature</em> branch of <em>Doll</em> Repo under path <em>&#x2F;Users&#x2F;huikai&#x2F;dev</em>, here is all variable’s value:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Means</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$BOSSWIFT_WORK_FOLDER</td>\n<td>Bosswift’s working folder</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;dev</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_PROJECT_NAME</td>\n<td>Repo’s folder name</td>\n<td>Doll</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_BRANCH_NAME</td>\n<td>Selected branch’s name</td>\n<td>feature</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_WORKTREE_PATH</td>\n<td>The folder path of current worktree</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;dev&#x2F;Bosswift_Work&#x2F;Doll&#x2F;feature</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_DEFAULT_WORKTREE_PATH</td>\n<td>The folder path of repo’s main worktree</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;dev&#x2F;Doll</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_XCODE_DERIVED_PATH</td>\n<td>Xcode Derived folder path for worktree (For Apple developers)</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;Library&#x2F;Developer&#x2F;Xcode&#x2F;DerivedData&#x2F;Doll-cikiwqgnfwrbgzgebttnrazqigks</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_XCODE_WORKSPACE_FILE</td>\n<td>xcworkspace file name inside worktree (For Apple developers)</td>\n<td>Doll.xcworkspace</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_XCODE_PROJECT_FILE</td>\n<td>xcodeproj file name inside worktree (For Apple developers)</td>\n<td>Doll.xcodeproj</td>\n</tr>\n</tbody></table>\n<h1 id=\"Dashboard\"><a href=\"#Dashboard\" class=\"headerlink\" title=\"Dashboard\"></a>Dashboard</h1><p>You can check running tasks in Dashboard:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/sdKzgDEtYRvQj5N.png\" alt=\"bosswift-dashboard\"></p>\n<h1 id=\"As-an-Universal-command-launcher\"><a href=\"#As-an-Universal-command-launcher\" class=\"headerlink\" title=\"As an Universal command launcher\"></a>As an Universal command launcher</h1><p>Some command can be run from anywhere, and you always forgot how to type them, for example sometimes Xcode failed to recognize iPhone connected by usb cable, to fix that I need to restart <strong>usb service</strong>, but I never remember the command, I always need to copy it from google or Notes app.</p>\n<p>Now with <strong>Bosswift</strong>，you could put these commands into <strong>Universal Command</strong>：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/ivKCaHUuGOwADyX.png\" alt=\"bosswift-universal-commands\"></p>\n<p>Type “&#x2F;“ in quick launch box, then you can pick an Universal Command to run:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/tkEiXnsAhY9Bxcb.png\" alt=\"bosswift-select-universal-command\"></p>\n<h1 id=\"As-a-temporary-command-launcher\"><a href=\"#As-a-temporary-command-launcher\" class=\"headerlink\" title=\"As a temporary command launcher\"></a>As a temporary command launcher</h1><p>If there’s not command match the keyword in quick launch box, you can hit enter and execute the keyword as command directly:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/UIE45RKTbSrCiNg.png\" alt=\"bosswift-temporary-commands\"></p>\n<h2 id=\"Command-line-or-GUI\"><a href=\"#Command-line-or-GUI\" class=\"headerlink\" title=\"Command line or GUI?\"></a>Command line or GUI?</h2><p>To be honest, as a developer, I never get used to Terminal.</p>\n<p>I’m very careful when doing tasks in command line, I check my input over and over again to make sure I didn’t write to wrong file, delete the wrong folder, I’m rather slow on Terminal because these stresses…</p>\n<p>I love GUI, really. Proper designed GUI tools is master pice, easy to use and stress-free.</p>\n<p>But when it comes to automation, command line just…. kill GUI :). GUI isn’t design for automation tasks at the first place, you can’t never setup the automation workflow easily with GUI.</p>\n<p>Luckly, we don’t have to choice between them, we can have an application that include both Command line and GUI.</p>\n<p>This app can’t run without command line, the <em>screen</em> command is the core behind it(For dispatching tasks), and in order to manage running tasks, commands like <em>ps</em>, <em>grep</em>, <em>pkill</em> is necessary too, put all these commands with an easy to use GUI, we got <strong>Bosswift</strong> :P.</p>\n<h1 id=\"Source-code\"><a href=\"#Source-code\" class=\"headerlink\" title=\"Source code\"></a>Source code</h1><p><a href=\"https://github.com/xiaogdgenuine/bosswift\">https://github.com/xiaogdgenuine/bosswift</a></p>\n<p>Disclaimer:<br>When it comes to personal project, my code style is rather rough.</p>\n<p>I prefer do the damn thing first then see how it goes, if it works I will clear the code and re-architecture, if it’s not working I will keep rough style till it works.</p>\n<p>This Repo is currently full of ugly global variables, un-reasonable module separation and un-reliable assumptions about running environment.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"A-troublesome-thing\"><a href=\"#A-troublesome-thing\" class=\"headerlink\" title=\"A troublesome thing\"></a>A troublesome thing</h2><p>As a developer，have you ever had this experience?</p>\n<blockquote>\n<p>You are working on some feature development, your colleague Slack you and ask you why an on-live feature is behaving weirdly, he want you to help check the problem and reproduce it.</p>\n</blockquote>\n<p>You say ok, then you open Terminal, type bunch of commands:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Store your temporary works</span></span><br><span class=\"line\">git stash -u</span><br><span class=\"line\"><span class=\"comment\"># Switch to problematic branch</span></span><br><span class=\"line\">git checkout release/v1</span><br><span class=\"line\"><span class=\"comment\"># Pull the latest changes</span></span><br><span class=\"line\">git pull</span><br><span class=\"line\"><span class=\"comment\"># Install 3rd dependencies, setup runtime</span></span><br><span class=\"line\">npm install...</span><br><span class=\"line\"><span class=\"comment\"># Run the project and try to address issue</span></span><br><span class=\"line\">npm run...</span><br></pre></td></tr></table></figure>\n\n<p>This usually will take you couple minutes, and after the issue is resolved, you go back to work on your original task, by type these commands in Terminal:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Switch back to work branch</span></span><br><span class=\"line\">git checkout feature/in-development</span><br><span class=\"line\"><span class=\"comment\"># Restore your temporary works</span></span><br><span class=\"line\">git stash apply</span><br><span class=\"line\"><span class=\"comment\"># Install 3rd dependencies, setup runtime</span></span><br><span class=\"line\">npm install...</span><br><span class=\"line\"><span class=\"comment\"># Run the project and continue to work</span></span><br><span class=\"line\">npm run...</span><br></pre></td></tr></table></figure>\n\n<p>This can happen multiple times in a day, not just to address a production issue, sometimes you also need to check different branch’s runtime behavior, so you need to <strong>switch &gt; build and run &gt; switch &gt; build and run…</strong> over and over.</p>\n<p>This doesn’t sound productive, what can we do about it?</p>\n<p>Well, imagine that if we could checkout multiple branch in same machine from a repo, every branch got it’s own worktree, by this way can we solve the problem?</p>\n<p>Yes we did! Git team apparently notice this problem too, start from git v2.5, <a href=\"https://git-scm.com/docs/git-worktree\">multiple worktrees</a> support is added, you can create multiple worktree copies from one repo, each worktree got it’s own branch, just like this：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/bqQ4cdguWPxza3Z.webp\" alt=\"bosswift-git-worktree-explain\"></p>\n<p>With <strong>git worktree</strong>，we don’t checkout branch anymore, instead we <strong><em>cd</em></strong> around worktrees，and also no need to stash&#x2F;unstash anymore：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/U62tEvT1gIrsKlY.jpg\" alt=\"bosswift-new-fashion\"></p>\n<p>The most important is, you don’t need to re-install 3rd dependencies constantly, because every worktree is stable if you don’t touch them!</p>\n<p>Also if we do it right, <strong>git worktree</strong> can help us make sure there is always a branch that can run anytime, you don’t need to worry about your in-development works impact other stable worktrees, sometime this is important.</p>\n<h2 id=\"New-solution-always-come-with-problems\"><a href=\"#New-solution-always-come-with-problems\" class=\"headerlink\" title=\"New solution always come with problems\"></a>New solution always come with problems</h2><p><strong>git worktree</strong> command got some pain points when using it：</p>\n<ul>\n<li>Too many keystrokes, when you create a new worktree, you need to specify it’s path, it’s branch name, I often make mistake on these arguments</li>\n<li>When you <strong><em>cd</em></strong> around worktrees, you often get lost</li>\n<li>Too many disk usage, because now every worktree got it’s own copy of 3rd dependencies(like <em>node_modules</em>)</li>\n</ul>\n<h2 id=\"✨✨✨-Bosswift-✨✨✨\"><a href=\"#✨✨✨-Bosswift-✨✨✨\" class=\"headerlink\" title=\"✨✨✨ Bosswift ✨✨✨\"></a>✨✨✨ Bosswift ✨✨✨</h2><p>To solve these pain points come with use <strong>git worktree</strong> in command line way，<strong>Bosswift</strong> is born.<br><strong>Bosswift</strong> is a GUI app that integrated with git worktree deeply, it will help you manage worktrees without presure.</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/dQnKzR5gjMTA718.png\" alt=\"bosswift-introduction\"></p>\n<h1 id=\"Installation-Setup\"><a href=\"#Installation-Setup\" class=\"headerlink\" title=\"Installation + Setup\"></a>Installation + Setup</h1><p>You can download the latest release from <a href=\"https://github.com/xiaogdgenuine/bosswift/releases/latest\">here</a></p>\n<p><img src=\"https://s2.loli.net/2022/07/11/E9tuLSBJAUX6bjd.png\" alt=\"bosswift-install\"></p>\n<p>Some setups is required when you open <strong>Bosswift</strong>，the only important step is to specify where you put your working repos, so that <strong>Bosswift</strong> can monitor &amp; sync the worktree status with your repos:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/WJIgGTZHxsq92ak.png\" alt=\"bosswift-on-boarding\"></p>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><p>After you done configuration, press <strong><em>Option + Space</em></strong> (Default) to open quick launch bar.</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/BA4dlWFDEuaqjVe.png\" alt=\"bosswift-quick-launch-bar\"></p>\n<p>Step 1, search &amp; pick a worktree，hit enter&#x2F;tab to select it：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/icIqUQ8T3s9m1jX.png\" alt=\"bosswift-quick-launch-search-branch\"></p>\n<p>Step 2. Search &amp; pick a command, hit enter to execute：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/9tc7LSs6mf5IJMQ.png\" alt=\"bosswift-quick-pick-command\"></p>\n<h2 id=\"Create-new-Worktree\"><a href=\"#Create-new-Worktree\" class=\"headerlink\" title=\"Create new Worktree\"></a>Create new Worktree</h2><p>When you need a new worktree, do this command:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/6EXZYkdlr5Pa2Jv.png\" alt=\"bosswift-create-worktree\"></p>\n<p>All you need is to input a branch name:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/N7PVZYqS6zlv2nC.png\" alt=\"bosswift-create-worktree-branch-name\"></p>\n<p>It will take care these cases for you</p>\n<ul>\n<li>A local branch with same name exist：Switch new worktree to that branch.</li>\n<li>A same name branch exists in remote：Fetch that remote branch to local，create new worktree and switch to that branch.</li>\n<li>Totally new branch：Create new worktree with specified branch name.</li>\n</ul>\n<p>You could modify that command, add some steps like “<strong>Copy node_modules from original worktree</strong>“ to the end, to avoid re-install node modules in new worktree.</p>\n<h2 id=\"Delete-Worktree\"><a href=\"#Delete-Worktree\" class=\"headerlink\" title=\"Delete Worktree\"></a>Delete Worktree</h2><p>Whe you no longer work on a worktree, you can save the disk usage by doing this command to delete the worktree：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/KXynVNlpHodg69h.png\" alt=\"bosswift-delete-worktree\"></p>\n<p>You could modify that command, add some steps like “<strong>Delete Xcode Derived Data folder</strong>“ to the end, to release disk space.</p>\n<h1 id=\"Create-custom-commands\"><a href=\"#Create-custom-commands\" class=\"headerlink\" title=\"Create custom commands\"></a>Create custom commands</h1><p>What kind of Boss you are if you can’t create your own command?</p>\n<p>I encourage you to write commands that suits your project and workflow, I don’t have that energy to provide you a fancy command editor, but I will give you my help as much as I can, there are some variables you can use when creating new command:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/rvRZuxigzPkdTVJ.png\" alt=\"bosswift-command-glossary\"></p>\n<p>For example, if I select <em>feature</em> branch of <em>Doll</em> Repo under path <em>&#x2F;Users&#x2F;huikai&#x2F;dev</em>, here is all variable’s value:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Means</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$BOSSWIFT_WORK_FOLDER</td>\n<td>Bosswift’s working folder</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;dev</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_PROJECT_NAME</td>\n<td>Repo’s folder name</td>\n<td>Doll</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_BRANCH_NAME</td>\n<td>Selected branch’s name</td>\n<td>feature</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_WORKTREE_PATH</td>\n<td>The folder path of current worktree</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;dev&#x2F;Bosswift_Work&#x2F;Doll&#x2F;feature</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_DEFAULT_WORKTREE_PATH</td>\n<td>The folder path of repo’s main worktree</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;dev&#x2F;Doll</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_XCODE_DERIVED_PATH</td>\n<td>Xcode Derived folder path for worktree (For Apple developers)</td>\n<td>&#x2F;Users&#x2F;huikai&#x2F;Library&#x2F;Developer&#x2F;Xcode&#x2F;DerivedData&#x2F;Doll-cikiwqgnfwrbgzgebttnrazqigks</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_XCODE_WORKSPACE_FILE</td>\n<td>xcworkspace file name inside worktree (For Apple developers)</td>\n<td>Doll.xcworkspace</td>\n</tr>\n<tr>\n<td>$BOSSWIFT_XCODE_PROJECT_FILE</td>\n<td>xcodeproj file name inside worktree (For Apple developers)</td>\n<td>Doll.xcodeproj</td>\n</tr>\n</tbody></table>\n<h1 id=\"Dashboard\"><a href=\"#Dashboard\" class=\"headerlink\" title=\"Dashboard\"></a>Dashboard</h1><p>You can check running tasks in Dashboard:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/sdKzgDEtYRvQj5N.png\" alt=\"bosswift-dashboard\"></p>\n<h1 id=\"As-an-Universal-command-launcher\"><a href=\"#As-an-Universal-command-launcher\" class=\"headerlink\" title=\"As an Universal command launcher\"></a>As an Universal command launcher</h1><p>Some command can be run from anywhere, and you always forgot how to type them, for example sometimes Xcode failed to recognize iPhone connected by usb cable, to fix that I need to restart <strong>usb service</strong>, but I never remember the command, I always need to copy it from google or Notes app.</p>\n<p>Now with <strong>Bosswift</strong>，you could put these commands into <strong>Universal Command</strong>：</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/ivKCaHUuGOwADyX.png\" alt=\"bosswift-universal-commands\"></p>\n<p>Type “&#x2F;“ in quick launch box, then you can pick an Universal Command to run:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/tkEiXnsAhY9Bxcb.png\" alt=\"bosswift-select-universal-command\"></p>\n<h1 id=\"As-a-temporary-command-launcher\"><a href=\"#As-a-temporary-command-launcher\" class=\"headerlink\" title=\"As a temporary command launcher\"></a>As a temporary command launcher</h1><p>If there’s not command match the keyword in quick launch box, you can hit enter and execute the keyword as command directly:</p>\n<p><img src=\"https://s2.loli.net/2022/07/11/UIE45RKTbSrCiNg.png\" alt=\"bosswift-temporary-commands\"></p>\n<h2 id=\"Command-line-or-GUI\"><a href=\"#Command-line-or-GUI\" class=\"headerlink\" title=\"Command line or GUI?\"></a>Command line or GUI?</h2><p>To be honest, as a developer, I never get used to Terminal.</p>\n<p>I’m very careful when doing tasks in command line, I check my input over and over again to make sure I didn’t write to wrong file, delete the wrong folder, I’m rather slow on Terminal because these stresses…</p>\n<p>I love GUI, really. Proper designed GUI tools is master pice, easy to use and stress-free.</p>\n<p>But when it comes to automation, command line just…. kill GUI :). GUI isn’t design for automation tasks at the first place, you can’t never setup the automation workflow easily with GUI.</p>\n<p>Luckly, we don’t have to choice between them, we can have an application that include both Command line and GUI.</p>\n<p>This app can’t run without command line, the <em>screen</em> command is the core behind it(For dispatching tasks), and in order to manage running tasks, commands like <em>ps</em>, <em>grep</em>, <em>pkill</em> is necessary too, put all these commands with an easy to use GUI, we got <strong>Bosswift</strong> :P.</p>\n<h1 id=\"Source-code\"><a href=\"#Source-code\" class=\"headerlink\" title=\"Source code\"></a>Source code</h1><p><a href=\"https://github.com/xiaogdgenuine/bosswift\">https://github.com/xiaogdgenuine/bosswift</a></p>\n<p>Disclaimer:<br>When it comes to personal project, my code style is rather rough.</p>\n<p>I prefer do the damn thing first then see how it goes, if it works I will clear the code and re-architecture, if it’s not working I will keep rough style till it works.</p>\n<p>This Repo is currently full of ugly global variables, un-reasonable module separation and un-reliable assumptions about running environment.</p>\n","_tags":[]},{"title":"可达漫画更新日志","date":"2023-10-25T15:20:05.000Z","_content":"\n## 版本 2.0.0 - 2024 年 02 月 12 日：\n新功能\n- 现在直接支持 iCloud 云盘了，可以将文件随时同步到其它设备\n- 现在可以通过 iCloud 同步各种阅读记录，书签和设置\n- 「自定义封面」功能回来了，长按漫画就可以直接设置封面\n- 漫画太多不知道看哪本？全新的「随机模式」帮你选择！\n- 内置了「使用教程」，不确定某些功能如何使用时可以随时查阅\n\n修复\n- 修复阅读器的一些手势冲突\n\n## 版本 1.7.2：\n新功能\n- 支持长按书架空白处导入新文件到当前目录，不再需要手动移动了\n\n修复\n- 修复 EPUB 文件嵌套在其他压缩包内时无限加载的 bug\n- 修复 EPUB 文件的进度显示 bug\n\n## 版本 1.7.1：\n新功能\n- 支持关闭「已下载」目录，下载内容直接加入「书库」\n- 实现了新的渲染方案，避免了高清漫画缩放产生的摩尔纹现象\n- 「画质增强」现在可以自定义配置，且设置会跟随「预设」了\n\n修复\n- 修复隐私模式在 iOS 16 系统上闪退的 bug\n- 修复清除阅读记录会导致闪退的 bug\n- 修复在 iPad 上分享文件会闪退的 bug\n- 更为完善地支持了 Epub，渲染不会再缺失页面了\n\n## 版本 1.7.0：\n新功能\n- 全新设计的阅读器控制面板，更方便更好用\n- 支持打开带密码保护的 PDF\n- 现在可以自动翻页了\n\n修复\n- 修复了卷轴模式下，大图片放大后会模糊的问题\n- 修复了隐私模式偶尔不起作用的 bug\n- 修复下拉关闭手势在右上角跟系统菜单冲突的问题\n\n## 版本 1.6.9：\n修复\n- 修复了封面会延迟显示的 bug\n\n## 版本 1.6.8：\n新功能\n- 现在可以双击底部 Tab 图标，快速回到根页面了\n- 阅读记录支持多选删除\n- 「已下载」目录的阅读记录现在也会显示了\n\n修复\n- 修复了旋转屏幕时，阅读进度会重置的 bug\n- 修复了某些时候阅读记录无法删除的 bug\n- 修复了封面偶尔会显示为黑色的 bug\n\n## 版本 1.6.7：\n新功能\n- 除网格和列表外，新增了「卡片」式布局，可在书库右上角调节\n- 适配了最新的阿里云盘认证，支持了二维码登录\n\n修复\n- 修复了书库滚动时，偶尔会鬼畜抖动的问题\n- 大幅度提升了书库滚动的性能\n- 改善了嵌套子包的加载流程，确保进度条及时显示\n- 修复了单张图片的文件无法分享的问题\n\n## 版本 1.6.6：\n新功能\n- 删除文件夹的阅读进度时，文件夹底下所有的阅读进度也都会被删除\n\n修复\n- 修复在屏幕边缘点击翻页有概率跳到下一本的 bug\n- 修复页面加载过程中，点击翻页导致的闪退 bug\n- 修复切换上一本下一本漫画时，状态栏不会隐藏的 bug\n\n## 版本 1.6.5：\n新功能\n- 新增选项「App 默认页面」，现在你可以决定 App 打开后，默认的界面应该是哪一个了「书库，已下载，某个服务器等等」。\n- 「阅读」Tab 现在同样支持双指缩放调整项目大小了。\n\n修复\n- 修复某些情况下阅读进度没有得到保存的 bug。\n- 修复一个 iOS 17.1.1 下的闪退 bug\n\n## 版本 1.6.3 - 2023 年 11 月 11 日：\n新功能\n- 现在可以直接连接「阿里云盘」阅读漫画了，支持流式加载。\n- 支持打开自解压的 RAR 文件。\n- 实现了更快更好的自动缓存清理方案。\n- 支持键盘快捷键「pageUp，pageDown」翻页。\n\n## 版本 1.6.2 - 2023 年 11 月 5 日：\n修复\n- 修复无法打开一部分 RAR4 格式文件的问题。\n- 修复无法打开固实压缩的 RAR 文件的问题。\n- 修复无法打开开启了文件名加密的 RAR 文件的问题。\n\n## 版本 1.6.1 - 2023 年 11 月 1 日：\n新功能\n- 现在可以在 App 设置里隐藏「阅读」标签页了。\n- 现在可以在阅读设置里打开或关闭「双击屏幕中间放大画面」的手势了。\n- 支持切割大图片后，反转左右的顺序。\n- 上下滚轴式阅读时，如果页面宽度超过屏幕宽度，现在可以选择先显示右半边还是左半边了。\n- WiFi 传书现在支持隐私模式了，可直接将文件传输至隐私库。\n- 当 WebDAV 服务器不支持流式阅读时，进行降级处理。\n\n修复\n- 正确处理 RAR 文件名里的反斜杠。\n- 修复 PDF 文件在 WebDAV 服务器目录中无法阅读的 bug。\n\n## 版本 1.6.0 - 2023 年 10 月：\n本次大更新为您带来全新的书库设计，更简洁易懂的设置界面，修复了大量旧版本存在的闪退问题，以及多项阅读体验改进！\n\n新功能\n- 全新的「纹理」背景，带来如真实纸张般的阅读体验。\n- 全新的书库界面，支持手动排序文件，按分组显示文件等诸多新功能。\n- 更方便好用的 「隐私」模式，长按底部 Tab 图标即可开启。\n- 现在可以通过「侧拉」手势快速关闭漫画了。\n- 全新的「预设」功能，方便统一管理各类漫画设置。\n\n修复\n- 全新的 PDF 渲染引擎，PDF 页面渲染不再缺失内容。\n- 优化了内存占用，长时间阅读不再闪退！\n- 修复了从文件应用导入时提示文件不存在的问题。\n\n废弃的功能\n- 出于代码可维护性及 App 整体体验的考虑，可达阅读器不再提供 FTP 协议支持。\n\n## 版本 1.5.2 - 2022 年 10 月 10 日:\n新功能\n- 现在大图片如果单页显示不下，会按需启用滚动条了。\n\n修复\n- 修复 iOS 16 下浏览文件夹没有返回按钮的 bug。\n- 修复一些 azw3 文件会显示重复图片的问题。\n- 修复搜索漫画后，双指关闭阅读器手势会卡死 App 的问题。\n\n## 版本 1.5.1 - 2022 年 10 月 07 日:\n修复\n- 修复了一个导致长图显示错乱的 bug。\n\n## 版本 1.5.0 - 2022 年 9 月 17 日：\n\n很抱歉，时隔 9 个月才发布了这个 bug 修复版本，收费版本依旧在开发中。\n\n因为老爸去世，重新找工作等各种各样的事，今年的状态很不对劲，能花在开发可达漫画上的时间少了很多，做事也找不到节奏，以及开发收费版本的过程中总是有越来越多的新想法，想尝试越来越多的新技术实现更多新功能。\n\n结果就是两头不讨好，新想法总是在推倒重来，新技术问题总是多多（点名批评 SwiftUI），离落地发布遥遥无期。\n\n继续这样下去这个 App 只会死掉，所以痛定思痛，改一改目前太过散漫随意的发版状态，向收费产品的开发节奏靠拢。\n\n在收费版本正式发布之前，先尝试每三周或者一个月发布一个小版本修复 bug 和改善已有功能，做好 App 的维护工作。\n\n修复\n- 修复了 iOS 16 下画质增强导致的闪退问题。\n- 修复了打开高清图片时的白屏和闪退问题，提升了高清图片的渲染速度。\n- 修复了 Mobi 文件超过 1000 页以后会重复之前页面的问题。\n\n## 版本 1.4.2 - 2021 年 12 月 2 日\n新功能\n- 现在可以直接点击文件夹内部的图片，并连续阅读了。\n- 全新的上一本下一本切换界面。\n- 进度条添加了打开「上一本/下一本」漫画的按钮。\n\n修复\n- 修复了搜索时，简繁互换无法工作的问题。\n- 修复了打开可达时会停止音乐播放的问题。\n- 修复了条漫模式下无法顺滑滑动页面的问题。\n\n## 版本 1.4.1 - 2021 年 11 月 29 日\n修复\n- 修复了 WebDAV 浏览器不支持 301 重定向的问题。\n- 修复无法断点续传的问题。\n- 修复 iOS 15 键盘快捷键失效的问题。\n- 修复导入文件时，报告 inbox 不存在的问题。\n\n## 版本 1.4.0 - 2021 年 11 月 28 日\n新功能\n- 适配 iPad mini6。\n- 现在可以直接浏览文件夹内部了。\n- 统一了服务器与本地书库的 UI。\n- 支持了 RAR 文件的流式阅读。\n- 支持将服务器的文件夹作为一本漫画阅读（纯图片类文件夹）。\n- 现在支持使用简繁，拼音全拼或者拼音缩写来搜索文件了。\n- 在手机上可以通过交替按下音量 + - 键来开关隐私库。\n- WebDAV 支持 IPv6 地址。\n\n修复\n- 提升了缩略图加载的性能\n- 提升了锁屏过长时间，以及旋转屏幕时，偶尔会丢失阅读进度的问题。\n- 修复连接某些 WebDAV 服务器时报告 401 错误的问题。\n\n破坏性更新\n- 支持了 iPad 分屏，现在可以在 iPad 屏幕上同时放置可达和其他应用程序，但代价是无法直接在可达漫画内部锁定屏幕方向，而是需要通过系统快捷菜单来锁定方向。\n\n## 版本 1.3.4 - 2021 年 8 月 13 日\n修正\n- WebDAV 功能紧急修复（抱歉！）\n\n## 版本 1.3.3 - 2021 年 8 月 13 日\n新功能\n- 新增了 「星蓝，亚丁绿，蓟粉红，扁豆紫」四个主题。\n\n修复\n- 修复 WebDAV 服务器带路径时不工作的问题。\n- 确保横屏时图片是居中对齐的。\n- 修复「合并小图片」开关不工作的问题。\n\n## 版本 1.3.2 - 2021 年 8 月 9 日\n新功能\n- 支持 iOS 15。\n- 现在可以自由切换主题了! (经典, 轻快, 暗黑)。\n- 新增放大镜功能, 按住屏幕空白区域即可放大并移动图片。\n- 新设置项\n    - 阅读 - 禁用翻页动画。\n    - 阅读 - 反转「上一页/下一页」点击区域。\n    - 阅读 - 自动去除图像白边。\n- 现在可以在设置里单独开关一些基本的手势。\n\n修复\n- 隐藏服务器上以 「.」 开头的隐藏文件。\n- 修复封面设置不及时更新的问题。\n- 修复了一些跟画质增强相关的 Bug。\n\n## 版本 1.3.1 - 2021 年 7 月 7 日\n修复\n- 修复某些设备不支持 heic 图片格式导致的崩溃问题。\n- 修复 AI 画质增强无法在文件夹内生效的问题。\n\n## 版本 1.3.0 - 2021 年 7 月 7 日\n新功能\n- 基于 AI 的图像优化功能 (由 Waifu2x 和 Waifu2x-ios 驱动), 效果很赞, 快去试试吧 :P!!!!\n- 在 \\\"杂项设置\\\" 中新增了隐藏 \\\"正在阅读\\\" 的开关。\n- 阅读界面新增了边缘长按手势，让你更快打开漫画目录。\n- 书库界面支持倒序排序。\n\n修复\n- 提升书库界面滚动流畅性。\n- 修复书库界面一些手势冲突问题。\n\n## 版本 1.2.7 - 2021 年 6 月 17 日\n新功能\n- 暗黑暗黑暗黑暗黑暗黑暗黑 主题！！！\n- 现在可以使用打\\\"小报告\\\"功能直接发邮件反馈问题。\n- 重新设计了设置界面，更容易找到相关设置。\n- 「设置 -> 支持」里新增了手势操作的说明\n- 在「设置 -> 安全」下新增了 「摇一摇清除隐私库的阅读进度」开关.\n\n修复\n- 提升了书库加载和排序速度。\n- 修复了一个内存溢出导致闪退的问题。\n- 修复了一个特殊文件名导致闪退的问题。\n\n## 版本 1.2.6 - 2021 年 6 月 7 日\n新功能\n- 现在可以打开 azw3 文件了！\n- 现在开启本地 http 服务器传输文件时，App 会防止系统自动锁定屏幕。\n- 正在阅读: 现在你可以无缝地阅读下一本服务器上的漫画了。\n- 重新设计了阅读进度指示器。\n- 服务器上的漫画现在也会显示阅读进度了.\n- 全局添加了新设置： \\\"全屏阅读\\\" - 用于控制是否在阅读时显示系统顶部状态栏（时间，电量等信息）。\n\nBug 修复\n- iOS 14 用户: 现在你可以从文件应用同时导入多本漫画了。\n- 修复图片偶尔会随机消失的 bug。\n- 调整了 \\\"下雨\\\" 模式的雨量 :P。\n\n## 版本 1.2.5 - 2021 年 5 月 23 日\n新功能\n- 新增设置项\n  1. 显示/隐藏 连页中间的分割线\n  2. 启用/禁用 翻页声音\n  3. 启用/禁用 阅读界面白色背景\n  4. 启用/禁用 导入文件时自动打开该文件\n\n- 新的操作手势\n  1. 向左或向右双指平移可以平移当前页面，纠正，将两张图正确地合并在一起\n  2. 双指合并可以快速关闭正在阅读的漫画\n\nBug 修复\n- 修复无法用 「可达漫画」打开其它程序文件的问题\n- 修复输入文件密码时 app 崩溃问题\n- 修复文件名带 % 号时 app 崩溃问题\n\n## 版本 1.2.4 - 2021 年 5 月 14 日\n新功能\n- 现在 Epub 文件也可以流式阅读了！\n\n- 重新设计了书库界面，现在编辑模式支持全选以及滑动多选了.\n\n- 自动加载服务器上的漫画缩略图(可在设置里关闭).\n\n- 新的操作手势，用于纠正图片朝向:\n    - 阅读时，「双指上滑或下滑」可以向左或向右旋转图片，适用于手动纠正一些图片的朝向\n    - 旋转图片后，可以通过「双指双击」将图片强制切割成两张图\n\nBug 修复\n- 修复一些设备上输入密码后无法打开隐私库的问题.\n\n## 版本 1.2.3 - 2021 年 4 月 28 日\n- 修复隐私模式第一次使用时无法创建密码的问题（非常抱歉！）\n\n- 正在阅读里的书籍现在会按照最后打开时间重新排序。\n\n## 版本 1.2.2 - 2021 年 4 月 28 日\n- 现在支持隐私模式了! 你可以在书库界面, 使用 3 指手势上划/下划来打开或关闭隐私库。\n\n- 现在书架上的书可以用双指缩放调整大小了！\n\n- 修复了一些 UI 小 bug。\n\n- 修复服务器下载被限速的问题。\n\n## 版本 1.2.1 - 2021 年 4 月 17 日\n- 修复 PDF 裁切问题。\n\n- 修复一些文件夹在 WebDAV 服务器下不显示名字的问题。\n\n## 版本 1.2 - 2021 年 4 月 16 日\n- 重新设计了阅读界面 UI。\n\n- 修复群晖服务器 WebDAV 连接不显示文件的问题。\n\n- 现在支持基本的文件管理了（长按一本书进入编辑模式）。\n\n- 支持 iTunes 文件导入。\n\n- 现在可以使用系统自带的 \\\"文件\\\" 应用管理可达漫画的文件了。\n\n- 从服务器下载的文件会被整理到 \\\"下载\\\" 分区。\n\n## 版本 1.1.5 - 2021 年 4 月 13 日\n- Mobi 文件现在支持流式阅读了！\n- 修复了一些会导致 UI 卡死和奔溃的 Bug。\n\n## 版本 1.1.4 - 2021 年 4 月 11 日\n- 现在支持阅读 .mobi 文件了！\n- 修复 EPub 文件图像顺序错乱的问题。","source":"_posts/kedamanga-changelog.md","raw":"---\ntitle: 可达漫画更新日志\ndate: 2023-10-25 23:20:05\ntags:\n- 可达漫画\n- Kedamanga\n---\n\n## 版本 2.0.0 - 2024 年 02 月 12 日：\n新功能\n- 现在直接支持 iCloud 云盘了，可以将文件随时同步到其它设备\n- 现在可以通过 iCloud 同步各种阅读记录，书签和设置\n- 「自定义封面」功能回来了，长按漫画就可以直接设置封面\n- 漫画太多不知道看哪本？全新的「随机模式」帮你选择！\n- 内置了「使用教程」，不确定某些功能如何使用时可以随时查阅\n\n修复\n- 修复阅读器的一些手势冲突\n\n## 版本 1.7.2：\n新功能\n- 支持长按书架空白处导入新文件到当前目录，不再需要手动移动了\n\n修复\n- 修复 EPUB 文件嵌套在其他压缩包内时无限加载的 bug\n- 修复 EPUB 文件的进度显示 bug\n\n## 版本 1.7.1：\n新功能\n- 支持关闭「已下载」目录，下载内容直接加入「书库」\n- 实现了新的渲染方案，避免了高清漫画缩放产生的摩尔纹现象\n- 「画质增强」现在可以自定义配置，且设置会跟随「预设」了\n\n修复\n- 修复隐私模式在 iOS 16 系统上闪退的 bug\n- 修复清除阅读记录会导致闪退的 bug\n- 修复在 iPad 上分享文件会闪退的 bug\n- 更为完善地支持了 Epub，渲染不会再缺失页面了\n\n## 版本 1.7.0：\n新功能\n- 全新设计的阅读器控制面板，更方便更好用\n- 支持打开带密码保护的 PDF\n- 现在可以自动翻页了\n\n修复\n- 修复了卷轴模式下，大图片放大后会模糊的问题\n- 修复了隐私模式偶尔不起作用的 bug\n- 修复下拉关闭手势在右上角跟系统菜单冲突的问题\n\n## 版本 1.6.9：\n修复\n- 修复了封面会延迟显示的 bug\n\n## 版本 1.6.8：\n新功能\n- 现在可以双击底部 Tab 图标，快速回到根页面了\n- 阅读记录支持多选删除\n- 「已下载」目录的阅读记录现在也会显示了\n\n修复\n- 修复了旋转屏幕时，阅读进度会重置的 bug\n- 修复了某些时候阅读记录无法删除的 bug\n- 修复了封面偶尔会显示为黑色的 bug\n\n## 版本 1.6.7：\n新功能\n- 除网格和列表外，新增了「卡片」式布局，可在书库右上角调节\n- 适配了最新的阿里云盘认证，支持了二维码登录\n\n修复\n- 修复了书库滚动时，偶尔会鬼畜抖动的问题\n- 大幅度提升了书库滚动的性能\n- 改善了嵌套子包的加载流程，确保进度条及时显示\n- 修复了单张图片的文件无法分享的问题\n\n## 版本 1.6.6：\n新功能\n- 删除文件夹的阅读进度时，文件夹底下所有的阅读进度也都会被删除\n\n修复\n- 修复在屏幕边缘点击翻页有概率跳到下一本的 bug\n- 修复页面加载过程中，点击翻页导致的闪退 bug\n- 修复切换上一本下一本漫画时，状态栏不会隐藏的 bug\n\n## 版本 1.6.5：\n新功能\n- 新增选项「App 默认页面」，现在你可以决定 App 打开后，默认的界面应该是哪一个了「书库，已下载，某个服务器等等」。\n- 「阅读」Tab 现在同样支持双指缩放调整项目大小了。\n\n修复\n- 修复某些情况下阅读进度没有得到保存的 bug。\n- 修复一个 iOS 17.1.1 下的闪退 bug\n\n## 版本 1.6.3 - 2023 年 11 月 11 日：\n新功能\n- 现在可以直接连接「阿里云盘」阅读漫画了，支持流式加载。\n- 支持打开自解压的 RAR 文件。\n- 实现了更快更好的自动缓存清理方案。\n- 支持键盘快捷键「pageUp，pageDown」翻页。\n\n## 版本 1.6.2 - 2023 年 11 月 5 日：\n修复\n- 修复无法打开一部分 RAR4 格式文件的问题。\n- 修复无法打开固实压缩的 RAR 文件的问题。\n- 修复无法打开开启了文件名加密的 RAR 文件的问题。\n\n## 版本 1.6.1 - 2023 年 11 月 1 日：\n新功能\n- 现在可以在 App 设置里隐藏「阅读」标签页了。\n- 现在可以在阅读设置里打开或关闭「双击屏幕中间放大画面」的手势了。\n- 支持切割大图片后，反转左右的顺序。\n- 上下滚轴式阅读时，如果页面宽度超过屏幕宽度，现在可以选择先显示右半边还是左半边了。\n- WiFi 传书现在支持隐私模式了，可直接将文件传输至隐私库。\n- 当 WebDAV 服务器不支持流式阅读时，进行降级处理。\n\n修复\n- 正确处理 RAR 文件名里的反斜杠。\n- 修复 PDF 文件在 WebDAV 服务器目录中无法阅读的 bug。\n\n## 版本 1.6.0 - 2023 年 10 月：\n本次大更新为您带来全新的书库设计，更简洁易懂的设置界面，修复了大量旧版本存在的闪退问题，以及多项阅读体验改进！\n\n新功能\n- 全新的「纹理」背景，带来如真实纸张般的阅读体验。\n- 全新的书库界面，支持手动排序文件，按分组显示文件等诸多新功能。\n- 更方便好用的 「隐私」模式，长按底部 Tab 图标即可开启。\n- 现在可以通过「侧拉」手势快速关闭漫画了。\n- 全新的「预设」功能，方便统一管理各类漫画设置。\n\n修复\n- 全新的 PDF 渲染引擎，PDF 页面渲染不再缺失内容。\n- 优化了内存占用，长时间阅读不再闪退！\n- 修复了从文件应用导入时提示文件不存在的问题。\n\n废弃的功能\n- 出于代码可维护性及 App 整体体验的考虑，可达阅读器不再提供 FTP 协议支持。\n\n## 版本 1.5.2 - 2022 年 10 月 10 日:\n新功能\n- 现在大图片如果单页显示不下，会按需启用滚动条了。\n\n修复\n- 修复 iOS 16 下浏览文件夹没有返回按钮的 bug。\n- 修复一些 azw3 文件会显示重复图片的问题。\n- 修复搜索漫画后，双指关闭阅读器手势会卡死 App 的问题。\n\n## 版本 1.5.1 - 2022 年 10 月 07 日:\n修复\n- 修复了一个导致长图显示错乱的 bug。\n\n## 版本 1.5.0 - 2022 年 9 月 17 日：\n\n很抱歉，时隔 9 个月才发布了这个 bug 修复版本，收费版本依旧在开发中。\n\n因为老爸去世，重新找工作等各种各样的事，今年的状态很不对劲，能花在开发可达漫画上的时间少了很多，做事也找不到节奏，以及开发收费版本的过程中总是有越来越多的新想法，想尝试越来越多的新技术实现更多新功能。\n\n结果就是两头不讨好，新想法总是在推倒重来，新技术问题总是多多（点名批评 SwiftUI），离落地发布遥遥无期。\n\n继续这样下去这个 App 只会死掉，所以痛定思痛，改一改目前太过散漫随意的发版状态，向收费产品的开发节奏靠拢。\n\n在收费版本正式发布之前，先尝试每三周或者一个月发布一个小版本修复 bug 和改善已有功能，做好 App 的维护工作。\n\n修复\n- 修复了 iOS 16 下画质增强导致的闪退问题。\n- 修复了打开高清图片时的白屏和闪退问题，提升了高清图片的渲染速度。\n- 修复了 Mobi 文件超过 1000 页以后会重复之前页面的问题。\n\n## 版本 1.4.2 - 2021 年 12 月 2 日\n新功能\n- 现在可以直接点击文件夹内部的图片，并连续阅读了。\n- 全新的上一本下一本切换界面。\n- 进度条添加了打开「上一本/下一本」漫画的按钮。\n\n修复\n- 修复了搜索时，简繁互换无法工作的问题。\n- 修复了打开可达时会停止音乐播放的问题。\n- 修复了条漫模式下无法顺滑滑动页面的问题。\n\n## 版本 1.4.1 - 2021 年 11 月 29 日\n修复\n- 修复了 WebDAV 浏览器不支持 301 重定向的问题。\n- 修复无法断点续传的问题。\n- 修复 iOS 15 键盘快捷键失效的问题。\n- 修复导入文件时，报告 inbox 不存在的问题。\n\n## 版本 1.4.0 - 2021 年 11 月 28 日\n新功能\n- 适配 iPad mini6。\n- 现在可以直接浏览文件夹内部了。\n- 统一了服务器与本地书库的 UI。\n- 支持了 RAR 文件的流式阅读。\n- 支持将服务器的文件夹作为一本漫画阅读（纯图片类文件夹）。\n- 现在支持使用简繁，拼音全拼或者拼音缩写来搜索文件了。\n- 在手机上可以通过交替按下音量 + - 键来开关隐私库。\n- WebDAV 支持 IPv6 地址。\n\n修复\n- 提升了缩略图加载的性能\n- 提升了锁屏过长时间，以及旋转屏幕时，偶尔会丢失阅读进度的问题。\n- 修复连接某些 WebDAV 服务器时报告 401 错误的问题。\n\n破坏性更新\n- 支持了 iPad 分屏，现在可以在 iPad 屏幕上同时放置可达和其他应用程序，但代价是无法直接在可达漫画内部锁定屏幕方向，而是需要通过系统快捷菜单来锁定方向。\n\n## 版本 1.3.4 - 2021 年 8 月 13 日\n修正\n- WebDAV 功能紧急修复（抱歉！）\n\n## 版本 1.3.3 - 2021 年 8 月 13 日\n新功能\n- 新增了 「星蓝，亚丁绿，蓟粉红，扁豆紫」四个主题。\n\n修复\n- 修复 WebDAV 服务器带路径时不工作的问题。\n- 确保横屏时图片是居中对齐的。\n- 修复「合并小图片」开关不工作的问题。\n\n## 版本 1.3.2 - 2021 年 8 月 9 日\n新功能\n- 支持 iOS 15。\n- 现在可以自由切换主题了! (经典, 轻快, 暗黑)。\n- 新增放大镜功能, 按住屏幕空白区域即可放大并移动图片。\n- 新设置项\n    - 阅读 - 禁用翻页动画。\n    - 阅读 - 反转「上一页/下一页」点击区域。\n    - 阅读 - 自动去除图像白边。\n- 现在可以在设置里单独开关一些基本的手势。\n\n修复\n- 隐藏服务器上以 「.」 开头的隐藏文件。\n- 修复封面设置不及时更新的问题。\n- 修复了一些跟画质增强相关的 Bug。\n\n## 版本 1.3.1 - 2021 年 7 月 7 日\n修复\n- 修复某些设备不支持 heic 图片格式导致的崩溃问题。\n- 修复 AI 画质增强无法在文件夹内生效的问题。\n\n## 版本 1.3.0 - 2021 年 7 月 7 日\n新功能\n- 基于 AI 的图像优化功能 (由 Waifu2x 和 Waifu2x-ios 驱动), 效果很赞, 快去试试吧 :P!!!!\n- 在 \\\"杂项设置\\\" 中新增了隐藏 \\\"正在阅读\\\" 的开关。\n- 阅读界面新增了边缘长按手势，让你更快打开漫画目录。\n- 书库界面支持倒序排序。\n\n修复\n- 提升书库界面滚动流畅性。\n- 修复书库界面一些手势冲突问题。\n\n## 版本 1.2.7 - 2021 年 6 月 17 日\n新功能\n- 暗黑暗黑暗黑暗黑暗黑暗黑 主题！！！\n- 现在可以使用打\\\"小报告\\\"功能直接发邮件反馈问题。\n- 重新设计了设置界面，更容易找到相关设置。\n- 「设置 -> 支持」里新增了手势操作的说明\n- 在「设置 -> 安全」下新增了 「摇一摇清除隐私库的阅读进度」开关.\n\n修复\n- 提升了书库加载和排序速度。\n- 修复了一个内存溢出导致闪退的问题。\n- 修复了一个特殊文件名导致闪退的问题。\n\n## 版本 1.2.6 - 2021 年 6 月 7 日\n新功能\n- 现在可以打开 azw3 文件了！\n- 现在开启本地 http 服务器传输文件时，App 会防止系统自动锁定屏幕。\n- 正在阅读: 现在你可以无缝地阅读下一本服务器上的漫画了。\n- 重新设计了阅读进度指示器。\n- 服务器上的漫画现在也会显示阅读进度了.\n- 全局添加了新设置： \\\"全屏阅读\\\" - 用于控制是否在阅读时显示系统顶部状态栏（时间，电量等信息）。\n\nBug 修复\n- iOS 14 用户: 现在你可以从文件应用同时导入多本漫画了。\n- 修复图片偶尔会随机消失的 bug。\n- 调整了 \\\"下雨\\\" 模式的雨量 :P。\n\n## 版本 1.2.5 - 2021 年 5 月 23 日\n新功能\n- 新增设置项\n  1. 显示/隐藏 连页中间的分割线\n  2. 启用/禁用 翻页声音\n  3. 启用/禁用 阅读界面白色背景\n  4. 启用/禁用 导入文件时自动打开该文件\n\n- 新的操作手势\n  1. 向左或向右双指平移可以平移当前页面，纠正，将两张图正确地合并在一起\n  2. 双指合并可以快速关闭正在阅读的漫画\n\nBug 修复\n- 修复无法用 「可达漫画」打开其它程序文件的问题\n- 修复输入文件密码时 app 崩溃问题\n- 修复文件名带 % 号时 app 崩溃问题\n\n## 版本 1.2.4 - 2021 年 5 月 14 日\n新功能\n- 现在 Epub 文件也可以流式阅读了！\n\n- 重新设计了书库界面，现在编辑模式支持全选以及滑动多选了.\n\n- 自动加载服务器上的漫画缩略图(可在设置里关闭).\n\n- 新的操作手势，用于纠正图片朝向:\n    - 阅读时，「双指上滑或下滑」可以向左或向右旋转图片，适用于手动纠正一些图片的朝向\n    - 旋转图片后，可以通过「双指双击」将图片强制切割成两张图\n\nBug 修复\n- 修复一些设备上输入密码后无法打开隐私库的问题.\n\n## 版本 1.2.3 - 2021 年 4 月 28 日\n- 修复隐私模式第一次使用时无法创建密码的问题（非常抱歉！）\n\n- 正在阅读里的书籍现在会按照最后打开时间重新排序。\n\n## 版本 1.2.2 - 2021 年 4 月 28 日\n- 现在支持隐私模式了! 你可以在书库界面, 使用 3 指手势上划/下划来打开或关闭隐私库。\n\n- 现在书架上的书可以用双指缩放调整大小了！\n\n- 修复了一些 UI 小 bug。\n\n- 修复服务器下载被限速的问题。\n\n## 版本 1.2.1 - 2021 年 4 月 17 日\n- 修复 PDF 裁切问题。\n\n- 修复一些文件夹在 WebDAV 服务器下不显示名字的问题。\n\n## 版本 1.2 - 2021 年 4 月 16 日\n- 重新设计了阅读界面 UI。\n\n- 修复群晖服务器 WebDAV 连接不显示文件的问题。\n\n- 现在支持基本的文件管理了（长按一本书进入编辑模式）。\n\n- 支持 iTunes 文件导入。\n\n- 现在可以使用系统自带的 \\\"文件\\\" 应用管理可达漫画的文件了。\n\n- 从服务器下载的文件会被整理到 \\\"下载\\\" 分区。\n\n## 版本 1.1.5 - 2021 年 4 月 13 日\n- Mobi 文件现在支持流式阅读了！\n- 修复了一些会导致 UI 卡死和奔溃的 Bug。\n\n## 版本 1.1.4 - 2021 年 4 月 11 日\n- 现在支持阅读 .mobi 文件了！\n- 修复 EPub 文件图像顺序错乱的问题。","slug":"kedamanga-changelog","published":1,"updated":"2024-02-12T13:31:19.804Z","_id":"cl85wr0cj0000haur7ht65dbo","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"版本-2-0-0-2024-年-02-月-12-日：\"><a href=\"#版本-2-0-0-2024-年-02-月-12-日：\" class=\"headerlink\" title=\"版本 2.0.0 - 2024 年 02 月 12 日：\"></a>版本 2.0.0 - 2024 年 02 月 12 日：</h2><p>新功能</p>\n<ul>\n<li>现在直接支持 iCloud 云盘了，可以将文件随时同步到其它设备</li>\n<li>现在可以通过 iCloud 同步各种阅读记录，书签和设置</li>\n<li>「自定义封面」功能回来了，长按漫画就可以直接设置封面</li>\n<li>漫画太多不知道看哪本？全新的「随机模式」帮你选择！</li>\n<li>内置了「使用教程」，不确定某些功能如何使用时可以随时查阅</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复阅读器的一些手势冲突</li>\n</ul>\n<h2 id=\"版本-1-7-2：\"><a href=\"#版本-1-7-2：\" class=\"headerlink\" title=\"版本 1.7.2：\"></a>版本 1.7.2：</h2><p>新功能</p>\n<ul>\n<li>支持长按书架空白处导入新文件到当前目录，不再需要手动移动了</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复 EPUB 文件嵌套在其他压缩包内时无限加载的 bug</li>\n<li>修复 EPUB 文件的进度显示 bug</li>\n</ul>\n<h2 id=\"版本-1-7-1：\"><a href=\"#版本-1-7-1：\" class=\"headerlink\" title=\"版本 1.7.1：\"></a>版本 1.7.1：</h2><p>新功能</p>\n<ul>\n<li>支持关闭「已下载」目录，下载内容直接加入「书库」</li>\n<li>实现了新的渲染方案，避免了高清漫画缩放产生的摩尔纹现象</li>\n<li>「画质增强」现在可以自定义配置，且设置会跟随「预设」了</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复隐私模式在 iOS 16 系统上闪退的 bug</li>\n<li>修复清除阅读记录会导致闪退的 bug</li>\n<li>修复在 iPad 上分享文件会闪退的 bug</li>\n<li>更为完善地支持了 Epub，渲染不会再缺失页面了</li>\n</ul>\n<h2 id=\"版本-1-7-0：\"><a href=\"#版本-1-7-0：\" class=\"headerlink\" title=\"版本 1.7.0：\"></a>版本 1.7.0：</h2><p>新功能</p>\n<ul>\n<li>全新设计的阅读器控制面板，更方便更好用</li>\n<li>支持打开带密码保护的 PDF</li>\n<li>现在可以自动翻页了</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复了卷轴模式下，大图片放大后会模糊的问题</li>\n<li>修复了隐私模式偶尔不起作用的 bug</li>\n<li>修复下拉关闭手势在右上角跟系统菜单冲突的问题</li>\n</ul>\n<h2 id=\"版本-1-6-9：\"><a href=\"#版本-1-6-9：\" class=\"headerlink\" title=\"版本 1.6.9：\"></a>版本 1.6.9：</h2><p>修复</p>\n<ul>\n<li>修复了封面会延迟显示的 bug</li>\n</ul>\n<h2 id=\"版本-1-6-8：\"><a href=\"#版本-1-6-8：\" class=\"headerlink\" title=\"版本 1.6.8：\"></a>版本 1.6.8：</h2><p>新功能</p>\n<ul>\n<li>现在可以双击底部 Tab 图标，快速回到根页面了</li>\n<li>阅读记录支持多选删除</li>\n<li>「已下载」目录的阅读记录现在也会显示了</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复了旋转屏幕时，阅读进度会重置的 bug</li>\n<li>修复了某些时候阅读记录无法删除的 bug</li>\n<li>修复了封面偶尔会显示为黑色的 bug</li>\n</ul>\n<h2 id=\"版本-1-6-7：\"><a href=\"#版本-1-6-7：\" class=\"headerlink\" title=\"版本 1.6.7：\"></a>版本 1.6.7：</h2><p>新功能</p>\n<ul>\n<li>除网格和列表外，新增了「卡片」式布局，可在书库右上角调节</li>\n<li>适配了最新的阿里云盘认证，支持了二维码登录</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复了书库滚动时，偶尔会鬼畜抖动的问题</li>\n<li>大幅度提升了书库滚动的性能</li>\n<li>改善了嵌套子包的加载流程，确保进度条及时显示</li>\n<li>修复了单张图片的文件无法分享的问题</li>\n</ul>\n<h2 id=\"版本-1-6-6：\"><a href=\"#版本-1-6-6：\" class=\"headerlink\" title=\"版本 1.6.6：\"></a>版本 1.6.6：</h2><p>新功能</p>\n<ul>\n<li>删除文件夹的阅读进度时，文件夹底下所有的阅读进度也都会被删除</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复在屏幕边缘点击翻页有概率跳到下一本的 bug</li>\n<li>修复页面加载过程中，点击翻页导致的闪退 bug</li>\n<li>修复切换上一本下一本漫画时，状态栏不会隐藏的 bug</li>\n</ul>\n<h2 id=\"版本-1-6-5：\"><a href=\"#版本-1-6-5：\" class=\"headerlink\" title=\"版本 1.6.5：\"></a>版本 1.6.5：</h2><p>新功能</p>\n<ul>\n<li>新增选项「App 默认页面」，现在你可以决定 App 打开后，默认的界面应该是哪一个了「书库，已下载，某个服务器等等」。</li>\n<li>「阅读」Tab 现在同样支持双指缩放调整项目大小了。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复某些情况下阅读进度没有得到保存的 bug。</li>\n<li>修复一个 iOS 17.1.1 下的闪退 bug</li>\n</ul>\n<h2 id=\"版本-1-6-3-2023-年-11-月-11-日：\"><a href=\"#版本-1-6-3-2023-年-11-月-11-日：\" class=\"headerlink\" title=\"版本 1.6.3 - 2023 年 11 月 11 日：\"></a>版本 1.6.3 - 2023 年 11 月 11 日：</h2><p>新功能</p>\n<ul>\n<li>现在可以直接连接「阿里云盘」阅读漫画了，支持流式加载。</li>\n<li>支持打开自解压的 RAR 文件。</li>\n<li>实现了更快更好的自动缓存清理方案。</li>\n<li>支持键盘快捷键「pageUp，pageDown」翻页。</li>\n</ul>\n<h2 id=\"版本-1-6-2-2023-年-11-月-5-日：\"><a href=\"#版本-1-6-2-2023-年-11-月-5-日：\" class=\"headerlink\" title=\"版本 1.6.2 - 2023 年 11 月 5 日：\"></a>版本 1.6.2 - 2023 年 11 月 5 日：</h2><p>修复</p>\n<ul>\n<li>修复无法打开一部分 RAR4 格式文件的问题。</li>\n<li>修复无法打开固实压缩的 RAR 文件的问题。</li>\n<li>修复无法打开开启了文件名加密的 RAR 文件的问题。</li>\n</ul>\n<h2 id=\"版本-1-6-1-2023-年-11-月-1-日：\"><a href=\"#版本-1-6-1-2023-年-11-月-1-日：\" class=\"headerlink\" title=\"版本 1.6.1 - 2023 年 11 月 1 日：\"></a>版本 1.6.1 - 2023 年 11 月 1 日：</h2><p>新功能</p>\n<ul>\n<li>现在可以在 App 设置里隐藏「阅读」标签页了。</li>\n<li>现在可以在阅读设置里打开或关闭「双击屏幕中间放大画面」的手势了。</li>\n<li>支持切割大图片后，反转左右的顺序。</li>\n<li>上下滚轴式阅读时，如果页面宽度超过屏幕宽度，现在可以选择先显示右半边还是左半边了。</li>\n<li>WiFi 传书现在支持隐私模式了，可直接将文件传输至隐私库。</li>\n<li>当 WebDAV 服务器不支持流式阅读时，进行降级处理。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>正确处理 RAR 文件名里的反斜杠。</li>\n<li>修复 PDF 文件在 WebDAV 服务器目录中无法阅读的 bug。</li>\n</ul>\n<h2 id=\"版本-1-6-0-2023-年-10-月：\"><a href=\"#版本-1-6-0-2023-年-10-月：\" class=\"headerlink\" title=\"版本 1.6.0 - 2023 年 10 月：\"></a>版本 1.6.0 - 2023 年 10 月：</h2><p>本次大更新为您带来全新的书库设计，更简洁易懂的设置界面，修复了大量旧版本存在的闪退问题，以及多项阅读体验改进！</p>\n<p>新功能</p>\n<ul>\n<li>全新的「纹理」背景，带来如真实纸张般的阅读体验。</li>\n<li>全新的书库界面，支持手动排序文件，按分组显示文件等诸多新功能。</li>\n<li>更方便好用的 「隐私」模式，长按底部 Tab 图标即可开启。</li>\n<li>现在可以通过「侧拉」手势快速关闭漫画了。</li>\n<li>全新的「预设」功能，方便统一管理各类漫画设置。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>全新的 PDF 渲染引擎，PDF 页面渲染不再缺失内容。</li>\n<li>优化了内存占用，长时间阅读不再闪退！</li>\n<li>修复了从文件应用导入时提示文件不存在的问题。</li>\n</ul>\n<p>废弃的功能</p>\n<ul>\n<li>出于代码可维护性及 App 整体体验的考虑，可达阅读器不再提供 FTP 协议支持。</li>\n</ul>\n<h2 id=\"版本-1-5-2-2022-年-10-月-10-日\"><a href=\"#版本-1-5-2-2022-年-10-月-10-日\" class=\"headerlink\" title=\"版本 1.5.2 - 2022 年 10 月 10 日:\"></a>版本 1.5.2 - 2022 年 10 月 10 日:</h2><p>新功能</p>\n<ul>\n<li>现在大图片如果单页显示不下，会按需启用滚动条了。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复 iOS 16 下浏览文件夹没有返回按钮的 bug。</li>\n<li>修复一些 azw3 文件会显示重复图片的问题。</li>\n<li>修复搜索漫画后，双指关闭阅读器手势会卡死 App 的问题。</li>\n</ul>\n<h2 id=\"版本-1-5-1-2022-年-10-月-07-日\"><a href=\"#版本-1-5-1-2022-年-10-月-07-日\" class=\"headerlink\" title=\"版本 1.5.1 - 2022 年 10 月 07 日:\"></a>版本 1.5.1 - 2022 年 10 月 07 日:</h2><p>修复</p>\n<ul>\n<li>修复了一个导致长图显示错乱的 bug。</li>\n</ul>\n<h2 id=\"版本-1-5-0-2022-年-9-月-17-日：\"><a href=\"#版本-1-5-0-2022-年-9-月-17-日：\" class=\"headerlink\" title=\"版本 1.5.0 - 2022 年 9 月 17 日：\"></a>版本 1.5.0 - 2022 年 9 月 17 日：</h2><p>很抱歉，时隔 9 个月才发布了这个 bug 修复版本，收费版本依旧在开发中。</p>\n<p>因为老爸去世，重新找工作等各种各样的事，今年的状态很不对劲，能花在开发可达漫画上的时间少了很多，做事也找不到节奏，以及开发收费版本的过程中总是有越来越多的新想法，想尝试越来越多的新技术实现更多新功能。</p>\n<p>结果就是两头不讨好，新想法总是在推倒重来，新技术问题总是多多（点名批评 SwiftUI），离落地发布遥遥无期。</p>\n<p>继续这样下去这个 App 只会死掉，所以痛定思痛，改一改目前太过散漫随意的发版状态，向收费产品的开发节奏靠拢。</p>\n<p>在收费版本正式发布之前，先尝试每三周或者一个月发布一个小版本修复 bug 和改善已有功能，做好 App 的维护工作。</p>\n<p>修复</p>\n<ul>\n<li>修复了 iOS 16 下画质增强导致的闪退问题。</li>\n<li>修复了打开高清图片时的白屏和闪退问题，提升了高清图片的渲染速度。</li>\n<li>修复了 Mobi 文件超过 1000 页以后会重复之前页面的问题。</li>\n</ul>\n<h2 id=\"版本-1-4-2-2021-年-12-月-2-日\"><a href=\"#版本-1-4-2-2021-年-12-月-2-日\" class=\"headerlink\" title=\"版本 1.4.2 - 2021 年 12 月 2 日\"></a>版本 1.4.2 - 2021 年 12 月 2 日</h2><p>新功能</p>\n<ul>\n<li>现在可以直接点击文件夹内部的图片，并连续阅读了。</li>\n<li>全新的上一本下一本切换界面。</li>\n<li>进度条添加了打开「上一本&#x2F;下一本」漫画的按钮。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复了搜索时，简繁互换无法工作的问题。</li>\n<li>修复了打开可达时会停止音乐播放的问题。</li>\n<li>修复了条漫模式下无法顺滑滑动页面的问题。</li>\n</ul>\n<h2 id=\"版本-1-4-1-2021-年-11-月-29-日\"><a href=\"#版本-1-4-1-2021-年-11-月-29-日\" class=\"headerlink\" title=\"版本 1.4.1 - 2021 年 11 月 29 日\"></a>版本 1.4.1 - 2021 年 11 月 29 日</h2><p>修复</p>\n<ul>\n<li>修复了 WebDAV 浏览器不支持 301 重定向的问题。</li>\n<li>修复无法断点续传的问题。</li>\n<li>修复 iOS 15 键盘快捷键失效的问题。</li>\n<li>修复导入文件时，报告 inbox 不存在的问题。</li>\n</ul>\n<h2 id=\"版本-1-4-0-2021-年-11-月-28-日\"><a href=\"#版本-1-4-0-2021-年-11-月-28-日\" class=\"headerlink\" title=\"版本 1.4.0 - 2021 年 11 月 28 日\"></a>版本 1.4.0 - 2021 年 11 月 28 日</h2><p>新功能</p>\n<ul>\n<li>适配 iPad mini6。</li>\n<li>现在可以直接浏览文件夹内部了。</li>\n<li>统一了服务器与本地书库的 UI。</li>\n<li>支持了 RAR 文件的流式阅读。</li>\n<li>支持将服务器的文件夹作为一本漫画阅读（纯图片类文件夹）。</li>\n<li>现在支持使用简繁，拼音全拼或者拼音缩写来搜索文件了。</li>\n<li>在手机上可以通过交替按下音量 + - 键来开关隐私库。</li>\n<li>WebDAV 支持 IPv6 地址。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>提升了缩略图加载的性能</li>\n<li>提升了锁屏过长时间，以及旋转屏幕时，偶尔会丢失阅读进度的问题。</li>\n<li>修复连接某些 WebDAV 服务器时报告 401 错误的问题。</li>\n</ul>\n<p>破坏性更新</p>\n<ul>\n<li>支持了 iPad 分屏，现在可以在 iPad 屏幕上同时放置可达和其他应用程序，但代价是无法直接在可达漫画内部锁定屏幕方向，而是需要通过系统快捷菜单来锁定方向。</li>\n</ul>\n<h2 id=\"版本-1-3-4-2021-年-8-月-13-日\"><a href=\"#版本-1-3-4-2021-年-8-月-13-日\" class=\"headerlink\" title=\"版本 1.3.4 - 2021 年 8 月 13 日\"></a>版本 1.3.4 - 2021 年 8 月 13 日</h2><p>修正</p>\n<ul>\n<li>WebDAV 功能紧急修复（抱歉！）</li>\n</ul>\n<h2 id=\"版本-1-3-3-2021-年-8-月-13-日\"><a href=\"#版本-1-3-3-2021-年-8-月-13-日\" class=\"headerlink\" title=\"版本 1.3.3 - 2021 年 8 月 13 日\"></a>版本 1.3.3 - 2021 年 8 月 13 日</h2><p>新功能</p>\n<ul>\n<li>新增了 「星蓝，亚丁绿，蓟粉红，扁豆紫」四个主题。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复 WebDAV 服务器带路径时不工作的问题。</li>\n<li>确保横屏时图片是居中对齐的。</li>\n<li>修复「合并小图片」开关不工作的问题。</li>\n</ul>\n<h2 id=\"版本-1-3-2-2021-年-8-月-9-日\"><a href=\"#版本-1-3-2-2021-年-8-月-9-日\" class=\"headerlink\" title=\"版本 1.3.2 - 2021 年 8 月 9 日\"></a>版本 1.3.2 - 2021 年 8 月 9 日</h2><p>新功能</p>\n<ul>\n<li>支持 iOS 15。</li>\n<li>现在可以自由切换主题了! (经典, 轻快, 暗黑)。</li>\n<li>新增放大镜功能, 按住屏幕空白区域即可放大并移动图片。</li>\n<li>新设置项<ul>\n<li>阅读 - 禁用翻页动画。</li>\n<li>阅读 - 反转「上一页&#x2F;下一页」点击区域。</li>\n<li>阅读 - 自动去除图像白边。</li>\n</ul>\n</li>\n<li>现在可以在设置里单独开关一些基本的手势。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>隐藏服务器上以 「.」 开头的隐藏文件。</li>\n<li>修复封面设置不及时更新的问题。</li>\n<li>修复了一些跟画质增强相关的 Bug。</li>\n</ul>\n<h2 id=\"版本-1-3-1-2021-年-7-月-7-日\"><a href=\"#版本-1-3-1-2021-年-7-月-7-日\" class=\"headerlink\" title=\"版本 1.3.1 - 2021 年 7 月 7 日\"></a>版本 1.3.1 - 2021 年 7 月 7 日</h2><p>修复</p>\n<ul>\n<li>修复某些设备不支持 heic 图片格式导致的崩溃问题。</li>\n<li>修复 AI 画质增强无法在文件夹内生效的问题。</li>\n</ul>\n<h2 id=\"版本-1-3-0-2021-年-7-月-7-日\"><a href=\"#版本-1-3-0-2021-年-7-月-7-日\" class=\"headerlink\" title=\"版本 1.3.0 - 2021 年 7 月 7 日\"></a>版本 1.3.0 - 2021 年 7 月 7 日</h2><p>新功能</p>\n<ul>\n<li>基于 AI 的图像优化功能 (由 Waifu2x 和 Waifu2x-ios 驱动), 效果很赞, 快去试试吧 :P!!!!</li>\n<li>在 &quot;杂项设置&quot; 中新增了隐藏 &quot;正在阅读&quot; 的开关。</li>\n<li>阅读界面新增了边缘长按手势，让你更快打开漫画目录。</li>\n<li>书库界面支持倒序排序。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>提升书库界面滚动流畅性。</li>\n<li>修复书库界面一些手势冲突问题。</li>\n</ul>\n<h2 id=\"版本-1-2-7-2021-年-6-月-17-日\"><a href=\"#版本-1-2-7-2021-年-6-月-17-日\" class=\"headerlink\" title=\"版本 1.2.7 - 2021 年 6 月 17 日\"></a>版本 1.2.7 - 2021 年 6 月 17 日</h2><p>新功能</p>\n<ul>\n<li>暗黑暗黑暗黑暗黑暗黑暗黑 主题！！！</li>\n<li>现在可以使用打&quot;小报告&quot;功能直接发邮件反馈问题。</li>\n<li>重新设计了设置界面，更容易找到相关设置。</li>\n<li>「设置 -&gt; 支持」里新增了手势操作的说明</li>\n<li>在「设置 -&gt; 安全」下新增了 「摇一摇清除隐私库的阅读进度」开关.</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>提升了书库加载和排序速度。</li>\n<li>修复了一个内存溢出导致闪退的问题。</li>\n<li>修复了一个特殊文件名导致闪退的问题。</li>\n</ul>\n<h2 id=\"版本-1-2-6-2021-年-6-月-7-日\"><a href=\"#版本-1-2-6-2021-年-6-月-7-日\" class=\"headerlink\" title=\"版本 1.2.6 - 2021 年 6 月 7 日\"></a>版本 1.2.6 - 2021 年 6 月 7 日</h2><p>新功能</p>\n<ul>\n<li>现在可以打开 azw3 文件了！</li>\n<li>现在开启本地 http 服务器传输文件时，App 会防止系统自动锁定屏幕。</li>\n<li>正在阅读: 现在你可以无缝地阅读下一本服务器上的漫画了。</li>\n<li>重新设计了阅读进度指示器。</li>\n<li>服务器上的漫画现在也会显示阅读进度了.</li>\n<li>全局添加了新设置： &quot;全屏阅读&quot; - 用于控制是否在阅读时显示系统顶部状态栏（时间，电量等信息）。</li>\n</ul>\n<p>Bug 修复</p>\n<ul>\n<li>iOS 14 用户: 现在你可以从文件应用同时导入多本漫画了。</li>\n<li>修复图片偶尔会随机消失的 bug。</li>\n<li>调整了 &quot;下雨&quot; 模式的雨量 :P。</li>\n</ul>\n<h2 id=\"版本-1-2-5-2021-年-5-月-23-日\"><a href=\"#版本-1-2-5-2021-年-5-月-23-日\" class=\"headerlink\" title=\"版本 1.2.5 - 2021 年 5 月 23 日\"></a>版本 1.2.5 - 2021 年 5 月 23 日</h2><p>新功能</p>\n<ul>\n<li><p>新增设置项</p>\n<ol>\n<li>显示&#x2F;隐藏 连页中间的分割线</li>\n<li>启用&#x2F;禁用 翻页声音</li>\n<li>启用&#x2F;禁用 阅读界面白色背景</li>\n<li>启用&#x2F;禁用 导入文件时自动打开该文件</li>\n</ol>\n</li>\n<li><p>新的操作手势</p>\n<ol>\n<li>向左或向右双指平移可以平移当前页面，纠正，将两张图正确地合并在一起</li>\n<li>双指合并可以快速关闭正在阅读的漫画</li>\n</ol>\n</li>\n</ul>\n<p>Bug 修复</p>\n<ul>\n<li>修复无法用 「可达漫画」打开其它程序文件的问题</li>\n<li>修复输入文件密码时 app 崩溃问题</li>\n<li>修复文件名带 % 号时 app 崩溃问题</li>\n</ul>\n<h2 id=\"版本-1-2-4-2021-年-5-月-14-日\"><a href=\"#版本-1-2-4-2021-年-5-月-14-日\" class=\"headerlink\" title=\"版本 1.2.4 - 2021 年 5 月 14 日\"></a>版本 1.2.4 - 2021 年 5 月 14 日</h2><p>新功能</p>\n<ul>\n<li><p>现在 Epub 文件也可以流式阅读了！</p>\n</li>\n<li><p>重新设计了书库界面，现在编辑模式支持全选以及滑动多选了.</p>\n</li>\n<li><p>自动加载服务器上的漫画缩略图(可在设置里关闭).</p>\n</li>\n<li><p>新的操作手势，用于纠正图片朝向:</p>\n<ul>\n<li>阅读时，「双指上滑或下滑」可以向左或向右旋转图片，适用于手动纠正一些图片的朝向</li>\n<li>旋转图片后，可以通过「双指双击」将图片强制切割成两张图</li>\n</ul>\n</li>\n</ul>\n<p>Bug 修复</p>\n<ul>\n<li>修复一些设备上输入密码后无法打开隐私库的问题.</li>\n</ul>\n<h2 id=\"版本-1-2-3-2021-年-4-月-28-日\"><a href=\"#版本-1-2-3-2021-年-4-月-28-日\" class=\"headerlink\" title=\"版本 1.2.3 - 2021 年 4 月 28 日\"></a>版本 1.2.3 - 2021 年 4 月 28 日</h2><ul>\n<li><p>修复隐私模式第一次使用时无法创建密码的问题（非常抱歉！）</p>\n</li>\n<li><p>正在阅读里的书籍现在会按照最后打开时间重新排序。</p>\n</li>\n</ul>\n<h2 id=\"版本-1-2-2-2021-年-4-月-28-日\"><a href=\"#版本-1-2-2-2021-年-4-月-28-日\" class=\"headerlink\" title=\"版本 1.2.2 - 2021 年 4 月 28 日\"></a>版本 1.2.2 - 2021 年 4 月 28 日</h2><ul>\n<li><p>现在支持隐私模式了! 你可以在书库界面, 使用 3 指手势上划&#x2F;下划来打开或关闭隐私库。</p>\n</li>\n<li><p>现在书架上的书可以用双指缩放调整大小了！</p>\n</li>\n<li><p>修复了一些 UI 小 bug。</p>\n</li>\n<li><p>修复服务器下载被限速的问题。</p>\n</li>\n</ul>\n<h2 id=\"版本-1-2-1-2021-年-4-月-17-日\"><a href=\"#版本-1-2-1-2021-年-4-月-17-日\" class=\"headerlink\" title=\"版本 1.2.1 - 2021 年 4 月 17 日\"></a>版本 1.2.1 - 2021 年 4 月 17 日</h2><ul>\n<li><p>修复 PDF 裁切问题。</p>\n</li>\n<li><p>修复一些文件夹在 WebDAV 服务器下不显示名字的问题。</p>\n</li>\n</ul>\n<h2 id=\"版本-1-2-2021-年-4-月-16-日\"><a href=\"#版本-1-2-2021-年-4-月-16-日\" class=\"headerlink\" title=\"版本 1.2 - 2021 年 4 月 16 日\"></a>版本 1.2 - 2021 年 4 月 16 日</h2><ul>\n<li><p>重新设计了阅读界面 UI。</p>\n</li>\n<li><p>修复群晖服务器 WebDAV 连接不显示文件的问题。</p>\n</li>\n<li><p>现在支持基本的文件管理了（长按一本书进入编辑模式）。</p>\n</li>\n<li><p>支持 iTunes 文件导入。</p>\n</li>\n<li><p>现在可以使用系统自带的 &quot;文件&quot; 应用管理可达漫画的文件了。</p>\n</li>\n<li><p>从服务器下载的文件会被整理到 &quot;下载&quot; 分区。</p>\n</li>\n</ul>\n<h2 id=\"版本-1-1-5-2021-年-4-月-13-日\"><a href=\"#版本-1-1-5-2021-年-4-月-13-日\" class=\"headerlink\" title=\"版本 1.1.5 - 2021 年 4 月 13 日\"></a>版本 1.1.5 - 2021 年 4 月 13 日</h2><ul>\n<li>Mobi 文件现在支持流式阅读了！</li>\n<li>修复了一些会导致 UI 卡死和奔溃的 Bug。</li>\n</ul>\n<h2 id=\"版本-1-1-4-2021-年-4-月-11-日\"><a href=\"#版本-1-1-4-2021-年-4-月-11-日\" class=\"headerlink\" title=\"版本 1.1.4 - 2021 年 4 月 11 日\"></a>版本 1.1.4 - 2021 年 4 月 11 日</h2><ul>\n<li>现在支持阅读 .mobi 文件了！</li>\n<li>修复 EPub 文件图像顺序错乱的问题。</li>\n</ul>\n","site":{"data":{}},"_tags":[],"excerpt":"","more":"<h2 id=\"版本-2-0-0-2024-年-02-月-12-日：\"><a href=\"#版本-2-0-0-2024-年-02-月-12-日：\" class=\"headerlink\" title=\"版本 2.0.0 - 2024 年 02 月 12 日：\"></a>版本 2.0.0 - 2024 年 02 月 12 日：</h2><p>新功能</p>\n<ul>\n<li>现在直接支持 iCloud 云盘了，可以将文件随时同步到其它设备</li>\n<li>现在可以通过 iCloud 同步各种阅读记录，书签和设置</li>\n<li>「自定义封面」功能回来了，长按漫画就可以直接设置封面</li>\n<li>漫画太多不知道看哪本？全新的「随机模式」帮你选择！</li>\n<li>内置了「使用教程」，不确定某些功能如何使用时可以随时查阅</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复阅读器的一些手势冲突</li>\n</ul>\n<h2 id=\"版本-1-7-2：\"><a href=\"#版本-1-7-2：\" class=\"headerlink\" title=\"版本 1.7.2：\"></a>版本 1.7.2：</h2><p>新功能</p>\n<ul>\n<li>支持长按书架空白处导入新文件到当前目录，不再需要手动移动了</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复 EPUB 文件嵌套在其他压缩包内时无限加载的 bug</li>\n<li>修复 EPUB 文件的进度显示 bug</li>\n</ul>\n<h2 id=\"版本-1-7-1：\"><a href=\"#版本-1-7-1：\" class=\"headerlink\" title=\"版本 1.7.1：\"></a>版本 1.7.1：</h2><p>新功能</p>\n<ul>\n<li>支持关闭「已下载」目录，下载内容直接加入「书库」</li>\n<li>实现了新的渲染方案，避免了高清漫画缩放产生的摩尔纹现象</li>\n<li>「画质增强」现在可以自定义配置，且设置会跟随「预设」了</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复隐私模式在 iOS 16 系统上闪退的 bug</li>\n<li>修复清除阅读记录会导致闪退的 bug</li>\n<li>修复在 iPad 上分享文件会闪退的 bug</li>\n<li>更为完善地支持了 Epub，渲染不会再缺失页面了</li>\n</ul>\n<h2 id=\"版本-1-7-0：\"><a href=\"#版本-1-7-0：\" class=\"headerlink\" title=\"版本 1.7.0：\"></a>版本 1.7.0：</h2><p>新功能</p>\n<ul>\n<li>全新设计的阅读器控制面板，更方便更好用</li>\n<li>支持打开带密码保护的 PDF</li>\n<li>现在可以自动翻页了</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复了卷轴模式下，大图片放大后会模糊的问题</li>\n<li>修复了隐私模式偶尔不起作用的 bug</li>\n<li>修复下拉关闭手势在右上角跟系统菜单冲突的问题</li>\n</ul>\n<h2 id=\"版本-1-6-9：\"><a href=\"#版本-1-6-9：\" class=\"headerlink\" title=\"版本 1.6.9：\"></a>版本 1.6.9：</h2><p>修复</p>\n<ul>\n<li>修复了封面会延迟显示的 bug</li>\n</ul>\n<h2 id=\"版本-1-6-8：\"><a href=\"#版本-1-6-8：\" class=\"headerlink\" title=\"版本 1.6.8：\"></a>版本 1.6.8：</h2><p>新功能</p>\n<ul>\n<li>现在可以双击底部 Tab 图标，快速回到根页面了</li>\n<li>阅读记录支持多选删除</li>\n<li>「已下载」目录的阅读记录现在也会显示了</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复了旋转屏幕时，阅读进度会重置的 bug</li>\n<li>修复了某些时候阅读记录无法删除的 bug</li>\n<li>修复了封面偶尔会显示为黑色的 bug</li>\n</ul>\n<h2 id=\"版本-1-6-7：\"><a href=\"#版本-1-6-7：\" class=\"headerlink\" title=\"版本 1.6.7：\"></a>版本 1.6.7：</h2><p>新功能</p>\n<ul>\n<li>除网格和列表外，新增了「卡片」式布局，可在书库右上角调节</li>\n<li>适配了最新的阿里云盘认证，支持了二维码登录</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复了书库滚动时，偶尔会鬼畜抖动的问题</li>\n<li>大幅度提升了书库滚动的性能</li>\n<li>改善了嵌套子包的加载流程，确保进度条及时显示</li>\n<li>修复了单张图片的文件无法分享的问题</li>\n</ul>\n<h2 id=\"版本-1-6-6：\"><a href=\"#版本-1-6-6：\" class=\"headerlink\" title=\"版本 1.6.6：\"></a>版本 1.6.6：</h2><p>新功能</p>\n<ul>\n<li>删除文件夹的阅读进度时，文件夹底下所有的阅读进度也都会被删除</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复在屏幕边缘点击翻页有概率跳到下一本的 bug</li>\n<li>修复页面加载过程中，点击翻页导致的闪退 bug</li>\n<li>修复切换上一本下一本漫画时，状态栏不会隐藏的 bug</li>\n</ul>\n<h2 id=\"版本-1-6-5：\"><a href=\"#版本-1-6-5：\" class=\"headerlink\" title=\"版本 1.6.5：\"></a>版本 1.6.5：</h2><p>新功能</p>\n<ul>\n<li>新增选项「App 默认页面」，现在你可以决定 App 打开后，默认的界面应该是哪一个了「书库，已下载，某个服务器等等」。</li>\n<li>「阅读」Tab 现在同样支持双指缩放调整项目大小了。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复某些情况下阅读进度没有得到保存的 bug。</li>\n<li>修复一个 iOS 17.1.1 下的闪退 bug</li>\n</ul>\n<h2 id=\"版本-1-6-3-2023-年-11-月-11-日：\"><a href=\"#版本-1-6-3-2023-年-11-月-11-日：\" class=\"headerlink\" title=\"版本 1.6.3 - 2023 年 11 月 11 日：\"></a>版本 1.6.3 - 2023 年 11 月 11 日：</h2><p>新功能</p>\n<ul>\n<li>现在可以直接连接「阿里云盘」阅读漫画了，支持流式加载。</li>\n<li>支持打开自解压的 RAR 文件。</li>\n<li>实现了更快更好的自动缓存清理方案。</li>\n<li>支持键盘快捷键「pageUp，pageDown」翻页。</li>\n</ul>\n<h2 id=\"版本-1-6-2-2023-年-11-月-5-日：\"><a href=\"#版本-1-6-2-2023-年-11-月-5-日：\" class=\"headerlink\" title=\"版本 1.6.2 - 2023 年 11 月 5 日：\"></a>版本 1.6.2 - 2023 年 11 月 5 日：</h2><p>修复</p>\n<ul>\n<li>修复无法打开一部分 RAR4 格式文件的问题。</li>\n<li>修复无法打开固实压缩的 RAR 文件的问题。</li>\n<li>修复无法打开开启了文件名加密的 RAR 文件的问题。</li>\n</ul>\n<h2 id=\"版本-1-6-1-2023-年-11-月-1-日：\"><a href=\"#版本-1-6-1-2023-年-11-月-1-日：\" class=\"headerlink\" title=\"版本 1.6.1 - 2023 年 11 月 1 日：\"></a>版本 1.6.1 - 2023 年 11 月 1 日：</h2><p>新功能</p>\n<ul>\n<li>现在可以在 App 设置里隐藏「阅读」标签页了。</li>\n<li>现在可以在阅读设置里打开或关闭「双击屏幕中间放大画面」的手势了。</li>\n<li>支持切割大图片后，反转左右的顺序。</li>\n<li>上下滚轴式阅读时，如果页面宽度超过屏幕宽度，现在可以选择先显示右半边还是左半边了。</li>\n<li>WiFi 传书现在支持隐私模式了，可直接将文件传输至隐私库。</li>\n<li>当 WebDAV 服务器不支持流式阅读时，进行降级处理。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>正确处理 RAR 文件名里的反斜杠。</li>\n<li>修复 PDF 文件在 WebDAV 服务器目录中无法阅读的 bug。</li>\n</ul>\n<h2 id=\"版本-1-6-0-2023-年-10-月：\"><a href=\"#版本-1-6-0-2023-年-10-月：\" class=\"headerlink\" title=\"版本 1.6.0 - 2023 年 10 月：\"></a>版本 1.6.0 - 2023 年 10 月：</h2><p>本次大更新为您带来全新的书库设计，更简洁易懂的设置界面，修复了大量旧版本存在的闪退问题，以及多项阅读体验改进！</p>\n<p>新功能</p>\n<ul>\n<li>全新的「纹理」背景，带来如真实纸张般的阅读体验。</li>\n<li>全新的书库界面，支持手动排序文件，按分组显示文件等诸多新功能。</li>\n<li>更方便好用的 「隐私」模式，长按底部 Tab 图标即可开启。</li>\n<li>现在可以通过「侧拉」手势快速关闭漫画了。</li>\n<li>全新的「预设」功能，方便统一管理各类漫画设置。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>全新的 PDF 渲染引擎，PDF 页面渲染不再缺失内容。</li>\n<li>优化了内存占用，长时间阅读不再闪退！</li>\n<li>修复了从文件应用导入时提示文件不存在的问题。</li>\n</ul>\n<p>废弃的功能</p>\n<ul>\n<li>出于代码可维护性及 App 整体体验的考虑，可达阅读器不再提供 FTP 协议支持。</li>\n</ul>\n<h2 id=\"版本-1-5-2-2022-年-10-月-10-日\"><a href=\"#版本-1-5-2-2022-年-10-月-10-日\" class=\"headerlink\" title=\"版本 1.5.2 - 2022 年 10 月 10 日:\"></a>版本 1.5.2 - 2022 年 10 月 10 日:</h2><p>新功能</p>\n<ul>\n<li>现在大图片如果单页显示不下，会按需启用滚动条了。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复 iOS 16 下浏览文件夹没有返回按钮的 bug。</li>\n<li>修复一些 azw3 文件会显示重复图片的问题。</li>\n<li>修复搜索漫画后，双指关闭阅读器手势会卡死 App 的问题。</li>\n</ul>\n<h2 id=\"版本-1-5-1-2022-年-10-月-07-日\"><a href=\"#版本-1-5-1-2022-年-10-月-07-日\" class=\"headerlink\" title=\"版本 1.5.1 - 2022 年 10 月 07 日:\"></a>版本 1.5.1 - 2022 年 10 月 07 日:</h2><p>修复</p>\n<ul>\n<li>修复了一个导致长图显示错乱的 bug。</li>\n</ul>\n<h2 id=\"版本-1-5-0-2022-年-9-月-17-日：\"><a href=\"#版本-1-5-0-2022-年-9-月-17-日：\" class=\"headerlink\" title=\"版本 1.5.0 - 2022 年 9 月 17 日：\"></a>版本 1.5.0 - 2022 年 9 月 17 日：</h2><p>很抱歉，时隔 9 个月才发布了这个 bug 修复版本，收费版本依旧在开发中。</p>\n<p>因为老爸去世，重新找工作等各种各样的事，今年的状态很不对劲，能花在开发可达漫画上的时间少了很多，做事也找不到节奏，以及开发收费版本的过程中总是有越来越多的新想法，想尝试越来越多的新技术实现更多新功能。</p>\n<p>结果就是两头不讨好，新想法总是在推倒重来，新技术问题总是多多（点名批评 SwiftUI），离落地发布遥遥无期。</p>\n<p>继续这样下去这个 App 只会死掉，所以痛定思痛，改一改目前太过散漫随意的发版状态，向收费产品的开发节奏靠拢。</p>\n<p>在收费版本正式发布之前，先尝试每三周或者一个月发布一个小版本修复 bug 和改善已有功能，做好 App 的维护工作。</p>\n<p>修复</p>\n<ul>\n<li>修复了 iOS 16 下画质增强导致的闪退问题。</li>\n<li>修复了打开高清图片时的白屏和闪退问题，提升了高清图片的渲染速度。</li>\n<li>修复了 Mobi 文件超过 1000 页以后会重复之前页面的问题。</li>\n</ul>\n<h2 id=\"版本-1-4-2-2021-年-12-月-2-日\"><a href=\"#版本-1-4-2-2021-年-12-月-2-日\" class=\"headerlink\" title=\"版本 1.4.2 - 2021 年 12 月 2 日\"></a>版本 1.4.2 - 2021 年 12 月 2 日</h2><p>新功能</p>\n<ul>\n<li>现在可以直接点击文件夹内部的图片，并连续阅读了。</li>\n<li>全新的上一本下一本切换界面。</li>\n<li>进度条添加了打开「上一本&#x2F;下一本」漫画的按钮。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复了搜索时，简繁互换无法工作的问题。</li>\n<li>修复了打开可达时会停止音乐播放的问题。</li>\n<li>修复了条漫模式下无法顺滑滑动页面的问题。</li>\n</ul>\n<h2 id=\"版本-1-4-1-2021-年-11-月-29-日\"><a href=\"#版本-1-4-1-2021-年-11-月-29-日\" class=\"headerlink\" title=\"版本 1.4.1 - 2021 年 11 月 29 日\"></a>版本 1.4.1 - 2021 年 11 月 29 日</h2><p>修复</p>\n<ul>\n<li>修复了 WebDAV 浏览器不支持 301 重定向的问题。</li>\n<li>修复无法断点续传的问题。</li>\n<li>修复 iOS 15 键盘快捷键失效的问题。</li>\n<li>修复导入文件时，报告 inbox 不存在的问题。</li>\n</ul>\n<h2 id=\"版本-1-4-0-2021-年-11-月-28-日\"><a href=\"#版本-1-4-0-2021-年-11-月-28-日\" class=\"headerlink\" title=\"版本 1.4.0 - 2021 年 11 月 28 日\"></a>版本 1.4.0 - 2021 年 11 月 28 日</h2><p>新功能</p>\n<ul>\n<li>适配 iPad mini6。</li>\n<li>现在可以直接浏览文件夹内部了。</li>\n<li>统一了服务器与本地书库的 UI。</li>\n<li>支持了 RAR 文件的流式阅读。</li>\n<li>支持将服务器的文件夹作为一本漫画阅读（纯图片类文件夹）。</li>\n<li>现在支持使用简繁，拼音全拼或者拼音缩写来搜索文件了。</li>\n<li>在手机上可以通过交替按下音量 + - 键来开关隐私库。</li>\n<li>WebDAV 支持 IPv6 地址。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>提升了缩略图加载的性能</li>\n<li>提升了锁屏过长时间，以及旋转屏幕时，偶尔会丢失阅读进度的问题。</li>\n<li>修复连接某些 WebDAV 服务器时报告 401 错误的问题。</li>\n</ul>\n<p>破坏性更新</p>\n<ul>\n<li>支持了 iPad 分屏，现在可以在 iPad 屏幕上同时放置可达和其他应用程序，但代价是无法直接在可达漫画内部锁定屏幕方向，而是需要通过系统快捷菜单来锁定方向。</li>\n</ul>\n<h2 id=\"版本-1-3-4-2021-年-8-月-13-日\"><a href=\"#版本-1-3-4-2021-年-8-月-13-日\" class=\"headerlink\" title=\"版本 1.3.4 - 2021 年 8 月 13 日\"></a>版本 1.3.4 - 2021 年 8 月 13 日</h2><p>修正</p>\n<ul>\n<li>WebDAV 功能紧急修复（抱歉！）</li>\n</ul>\n<h2 id=\"版本-1-3-3-2021-年-8-月-13-日\"><a href=\"#版本-1-3-3-2021-年-8-月-13-日\" class=\"headerlink\" title=\"版本 1.3.3 - 2021 年 8 月 13 日\"></a>版本 1.3.3 - 2021 年 8 月 13 日</h2><p>新功能</p>\n<ul>\n<li>新增了 「星蓝，亚丁绿，蓟粉红，扁豆紫」四个主题。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>修复 WebDAV 服务器带路径时不工作的问题。</li>\n<li>确保横屏时图片是居中对齐的。</li>\n<li>修复「合并小图片」开关不工作的问题。</li>\n</ul>\n<h2 id=\"版本-1-3-2-2021-年-8-月-9-日\"><a href=\"#版本-1-3-2-2021-年-8-月-9-日\" class=\"headerlink\" title=\"版本 1.3.2 - 2021 年 8 月 9 日\"></a>版本 1.3.2 - 2021 年 8 月 9 日</h2><p>新功能</p>\n<ul>\n<li>支持 iOS 15。</li>\n<li>现在可以自由切换主题了! (经典, 轻快, 暗黑)。</li>\n<li>新增放大镜功能, 按住屏幕空白区域即可放大并移动图片。</li>\n<li>新设置项<ul>\n<li>阅读 - 禁用翻页动画。</li>\n<li>阅读 - 反转「上一页&#x2F;下一页」点击区域。</li>\n<li>阅读 - 自动去除图像白边。</li>\n</ul>\n</li>\n<li>现在可以在设置里单独开关一些基本的手势。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>隐藏服务器上以 「.」 开头的隐藏文件。</li>\n<li>修复封面设置不及时更新的问题。</li>\n<li>修复了一些跟画质增强相关的 Bug。</li>\n</ul>\n<h2 id=\"版本-1-3-1-2021-年-7-月-7-日\"><a href=\"#版本-1-3-1-2021-年-7-月-7-日\" class=\"headerlink\" title=\"版本 1.3.1 - 2021 年 7 月 7 日\"></a>版本 1.3.1 - 2021 年 7 月 7 日</h2><p>修复</p>\n<ul>\n<li>修复某些设备不支持 heic 图片格式导致的崩溃问题。</li>\n<li>修复 AI 画质增强无法在文件夹内生效的问题。</li>\n</ul>\n<h2 id=\"版本-1-3-0-2021-年-7-月-7-日\"><a href=\"#版本-1-3-0-2021-年-7-月-7-日\" class=\"headerlink\" title=\"版本 1.3.0 - 2021 年 7 月 7 日\"></a>版本 1.3.0 - 2021 年 7 月 7 日</h2><p>新功能</p>\n<ul>\n<li>基于 AI 的图像优化功能 (由 Waifu2x 和 Waifu2x-ios 驱动), 效果很赞, 快去试试吧 :P!!!!</li>\n<li>在 &quot;杂项设置&quot; 中新增了隐藏 &quot;正在阅读&quot; 的开关。</li>\n<li>阅读界面新增了边缘长按手势，让你更快打开漫画目录。</li>\n<li>书库界面支持倒序排序。</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>提升书库界面滚动流畅性。</li>\n<li>修复书库界面一些手势冲突问题。</li>\n</ul>\n<h2 id=\"版本-1-2-7-2021-年-6-月-17-日\"><a href=\"#版本-1-2-7-2021-年-6-月-17-日\" class=\"headerlink\" title=\"版本 1.2.7 - 2021 年 6 月 17 日\"></a>版本 1.2.7 - 2021 年 6 月 17 日</h2><p>新功能</p>\n<ul>\n<li>暗黑暗黑暗黑暗黑暗黑暗黑 主题！！！</li>\n<li>现在可以使用打&quot;小报告&quot;功能直接发邮件反馈问题。</li>\n<li>重新设计了设置界面，更容易找到相关设置。</li>\n<li>「设置 -&gt; 支持」里新增了手势操作的说明</li>\n<li>在「设置 -&gt; 安全」下新增了 「摇一摇清除隐私库的阅读进度」开关.</li>\n</ul>\n<p>修复</p>\n<ul>\n<li>提升了书库加载和排序速度。</li>\n<li>修复了一个内存溢出导致闪退的问题。</li>\n<li>修复了一个特殊文件名导致闪退的问题。</li>\n</ul>\n<h2 id=\"版本-1-2-6-2021-年-6-月-7-日\"><a href=\"#版本-1-2-6-2021-年-6-月-7-日\" class=\"headerlink\" title=\"版本 1.2.6 - 2021 年 6 月 7 日\"></a>版本 1.2.6 - 2021 年 6 月 7 日</h2><p>新功能</p>\n<ul>\n<li>现在可以打开 azw3 文件了！</li>\n<li>现在开启本地 http 服务器传输文件时，App 会防止系统自动锁定屏幕。</li>\n<li>正在阅读: 现在你可以无缝地阅读下一本服务器上的漫画了。</li>\n<li>重新设计了阅读进度指示器。</li>\n<li>服务器上的漫画现在也会显示阅读进度了.</li>\n<li>全局添加了新设置： &quot;全屏阅读&quot; - 用于控制是否在阅读时显示系统顶部状态栏（时间，电量等信息）。</li>\n</ul>\n<p>Bug 修复</p>\n<ul>\n<li>iOS 14 用户: 现在你可以从文件应用同时导入多本漫画了。</li>\n<li>修复图片偶尔会随机消失的 bug。</li>\n<li>调整了 &quot;下雨&quot; 模式的雨量 :P。</li>\n</ul>\n<h2 id=\"版本-1-2-5-2021-年-5-月-23-日\"><a href=\"#版本-1-2-5-2021-年-5-月-23-日\" class=\"headerlink\" title=\"版本 1.2.5 - 2021 年 5 月 23 日\"></a>版本 1.2.5 - 2021 年 5 月 23 日</h2><p>新功能</p>\n<ul>\n<li><p>新增设置项</p>\n<ol>\n<li>显示&#x2F;隐藏 连页中间的分割线</li>\n<li>启用&#x2F;禁用 翻页声音</li>\n<li>启用&#x2F;禁用 阅读界面白色背景</li>\n<li>启用&#x2F;禁用 导入文件时自动打开该文件</li>\n</ol>\n</li>\n<li><p>新的操作手势</p>\n<ol>\n<li>向左或向右双指平移可以平移当前页面，纠正，将两张图正确地合并在一起</li>\n<li>双指合并可以快速关闭正在阅读的漫画</li>\n</ol>\n</li>\n</ul>\n<p>Bug 修复</p>\n<ul>\n<li>修复无法用 「可达漫画」打开其它程序文件的问题</li>\n<li>修复输入文件密码时 app 崩溃问题</li>\n<li>修复文件名带 % 号时 app 崩溃问题</li>\n</ul>\n<h2 id=\"版本-1-2-4-2021-年-5-月-14-日\"><a href=\"#版本-1-2-4-2021-年-5-月-14-日\" class=\"headerlink\" title=\"版本 1.2.4 - 2021 年 5 月 14 日\"></a>版本 1.2.4 - 2021 年 5 月 14 日</h2><p>新功能</p>\n<ul>\n<li><p>现在 Epub 文件也可以流式阅读了！</p>\n</li>\n<li><p>重新设计了书库界面，现在编辑模式支持全选以及滑动多选了.</p>\n</li>\n<li><p>自动加载服务器上的漫画缩略图(可在设置里关闭).</p>\n</li>\n<li><p>新的操作手势，用于纠正图片朝向:</p>\n<ul>\n<li>阅读时，「双指上滑或下滑」可以向左或向右旋转图片，适用于手动纠正一些图片的朝向</li>\n<li>旋转图片后，可以通过「双指双击」将图片强制切割成两张图</li>\n</ul>\n</li>\n</ul>\n<p>Bug 修复</p>\n<ul>\n<li>修复一些设备上输入密码后无法打开隐私库的问题.</li>\n</ul>\n<h2 id=\"版本-1-2-3-2021-年-4-月-28-日\"><a href=\"#版本-1-2-3-2021-年-4-月-28-日\" class=\"headerlink\" title=\"版本 1.2.3 - 2021 年 4 月 28 日\"></a>版本 1.2.3 - 2021 年 4 月 28 日</h2><ul>\n<li><p>修复隐私模式第一次使用时无法创建密码的问题（非常抱歉！）</p>\n</li>\n<li><p>正在阅读里的书籍现在会按照最后打开时间重新排序。</p>\n</li>\n</ul>\n<h2 id=\"版本-1-2-2-2021-年-4-月-28-日\"><a href=\"#版本-1-2-2-2021-年-4-月-28-日\" class=\"headerlink\" title=\"版本 1.2.2 - 2021 年 4 月 28 日\"></a>版本 1.2.2 - 2021 年 4 月 28 日</h2><ul>\n<li><p>现在支持隐私模式了! 你可以在书库界面, 使用 3 指手势上划&#x2F;下划来打开或关闭隐私库。</p>\n</li>\n<li><p>现在书架上的书可以用双指缩放调整大小了！</p>\n</li>\n<li><p>修复了一些 UI 小 bug。</p>\n</li>\n<li><p>修复服务器下载被限速的问题。</p>\n</li>\n</ul>\n<h2 id=\"版本-1-2-1-2021-年-4-月-17-日\"><a href=\"#版本-1-2-1-2021-年-4-月-17-日\" class=\"headerlink\" title=\"版本 1.2.1 - 2021 年 4 月 17 日\"></a>版本 1.2.1 - 2021 年 4 月 17 日</h2><ul>\n<li><p>修复 PDF 裁切问题。</p>\n</li>\n<li><p>修复一些文件夹在 WebDAV 服务器下不显示名字的问题。</p>\n</li>\n</ul>\n<h2 id=\"版本-1-2-2021-年-4-月-16-日\"><a href=\"#版本-1-2-2021-年-4-月-16-日\" class=\"headerlink\" title=\"版本 1.2 - 2021 年 4 月 16 日\"></a>版本 1.2 - 2021 年 4 月 16 日</h2><ul>\n<li><p>重新设计了阅读界面 UI。</p>\n</li>\n<li><p>修复群晖服务器 WebDAV 连接不显示文件的问题。</p>\n</li>\n<li><p>现在支持基本的文件管理了（长按一本书进入编辑模式）。</p>\n</li>\n<li><p>支持 iTunes 文件导入。</p>\n</li>\n<li><p>现在可以使用系统自带的 &quot;文件&quot; 应用管理可达漫画的文件了。</p>\n</li>\n<li><p>从服务器下载的文件会被整理到 &quot;下载&quot; 分区。</p>\n</li>\n</ul>\n<h2 id=\"版本-1-1-5-2021-年-4-月-13-日\"><a href=\"#版本-1-1-5-2021-年-4-月-13-日\" class=\"headerlink\" title=\"版本 1.1.5 - 2021 年 4 月 13 日\"></a>版本 1.1.5 - 2021 年 4 月 13 日</h2><ul>\n<li>Mobi 文件现在支持流式阅读了！</li>\n<li>修复了一些会导致 UI 卡死和奔溃的 Bug。</li>\n</ul>\n<h2 id=\"版本-1-1-4-2021-年-4-月-11-日\"><a href=\"#版本-1-1-4-2021-年-4-月-11-日\" class=\"headerlink\" title=\"版本 1.1.4 - 2021 年 4 月 11 日\"></a>版本 1.1.4 - 2021 年 4 月 11 日</h2><ul>\n<li>现在支持阅读 .mobi 文件了！</li>\n<li>修复 EPub 文件图像顺序错乱的问题。</li>\n</ul>\n"},{"title":"Kedamanga Changelog","date":"2023-10-25T15:20:05.000Z","_content":"\n## Version 2.0.0:\nFeatures\n- Now you can sync comics between devices with \"iCloud Drive\"\n- Now you can sync reading histories, settings, bookmarks between devices with \"iCloud\"\n- Now you can customize cover for all comics\n- New \"Random mode\" feature can help you decide what comic book to read today :P\n\nFixes\n- Fix some gesture conflicts in the Reader\n\n## Version 1.7.2:\nFeatures\n- You can now long press empty area in Bookshelf to import files quickly\n\nFixes\n- Fix EPUB file infinite loop bug when nested inside another archive\n\n## Version 1.7.1:\nFeatures\n- Now you can turn off the「Downloads」folder in app setting, everything will save directly to the 「Library」\n\nFixes\n- Fix private mode function crash on iOS 16 bug\n- Fix clear reading history crash the app bug\n- Fix a crash bug when sharing files on iPad\n- Better support for EPUB files\n\n## Version 1.7.0:\nFeatures\n- Redesigned control panel for reader\n- You can now open PDF files with password protected\n- Now the app support flip pages automatically\n\nFixes\n- Fix a blurry bug when zoom in a large image\n- Fix a bug that cause the private mode not working when device is locked\n\n## Version 1.6.9:\nFixes\n- Fix a bug that cause cover display delayed few seconds.\n\n## Version 1.6.8:\nFeatures\n- Now you can double tap \"Tab bar icon\" and quickly go back to root view.\n- You can now select and delete multiple reading records at once.\n- Reading histories of「Download」folder will be showing Reading tab as well.\n\nFixes\n- Fix a bug that cause reading progress lost during screen rotation.\n- Fix a bug that cause reading history can't be delete.\n\n## Version 1.6.7:\nFeatures\n- New layout option for Bookshelf - Card mode.\n\nFixes\n- Fix scroll glitching in Bookshelf view\n- Improve scroll performance for Bookshelf view\n\n## Version 1.6.6:\nFeatures\n- Clear reading progress of a folder will clear all the reading history of it's nested items as well\n\nFixes\n- Fix a bug that cause status bar never hide after switch to next comic book\n\n## Version 1.6.5:\nFeatures\n- Add new \"Default view when open app\" option, you can now pick which view you want to see first after launch the app.\n- You can now pinch to resize book size inside \"Reading\" tab, just like in Library.\n\nFixes\n- Fix a bug that cause some reading progresses may not save properly.\n\n## Version 1.6.3:\nFeatures\n- Support connect to Aliyundrive.\n- Support RAR files with SFX module.\n- A faster cache cleanup implementation.\n- Support turning page by pageUp, pageDown key.\n\n## Version 1.6.2:\nFixes\n- Support solid rar files.\n- Support filename encrypted rar files.\n\n## Version 1.6.1:\nFeatures\n- You can now hide \"Reading\" tab, toggle it in setting.\n- You can now disable \"Double tap to zoom in\" gesture in reader setting.\n- Support reverse image order after split it.\n- WiFi server now supports private mode.\n- Support reading file in WebDAV server even if it doesn't support streaming reading.\n\nFixes\n- Handle back slash properly in RAR files.\n- Fix PDF file can't be open in WebDAV server issue.\n\n## Version 1.6.0:\nThis time I bring you a fresh bookshelf, fix tons of crashes, as well as adding lots of enhancements.\n\nFeatures\n- Fresh new bookshelf.\n- [Texture background] - makes you feel holding an real book.\n- You can now pull to close the reader.\n- New「Presets」setting to help you manage settings for multiple type of comics.\n\nFixes\n- New PDF rendering engine, no content loss anymore!\n- Improve memory usage, less crashing when openning big files.\n\n## Version 1.5.2:\nFeatures\n- Image that can't fit into the page will now be put inside a scroll view.\n\nFixes\n- Fix folder browser's back button missing issue in iOS 16.\n- Fix an issue that cause some azw3 files to render duplicated.\n- Fix an issue that cause pinch gesture freeze the app.\n\n## Version 1.5.1:\nFixes\n- Fix a bug that cause long comic image display in-position.\n\n## Version 1.5.0：\n\nI'm very sorry about taking so long yet just release a bug fix version, I'm still working on premier version.\n\nFor many reasons, I just can't done anything in the right time frame, always keep postpone schedules.\n\nThis year is definitely my toughest year so far, my dear father left me at a young age, 56. I still can't believe this just happened.\n\nAnyway, life can be so suck, but one must fight back.\n\nI will try to release regular bugfix versions before premier version is ready (let's try every 3 weeks first :)).\n\nIf you sent any feedback email and didn't get response from me, I owe you a sorry, I will start to respond some of feedback emails in next couple months.\n\nFixes\n- Fix a crash issue when you enable 'image enhancement' at iOS 16.\n- Fix a crash & white screen issue when open high resolution pictures, also improve the respond time when deal with high resolution pictures.\n- Fix an issue that cause Mobi file to render duplicated page after reading about 1000 pages.\n\n\n## Version 1.4.2\nFeatures\n- A fresh new 「Open last/next」 manga modal.\n- Now you can open last/next manga directly in progress slider.\n\nFixes\n- Fix a issue that cause the background music stopped when opening Kedamanga\n\n## Version 1.4.1\nFixes\n- Fix 301 error when connect to some WebDAV servers.\n- Fix keyboard shortcut not working in iOS 15 issue.\n\n## Version 1.4.0\nFeatures\n- Compatible with iPad mini6.\n- Now you can browse directory content directly.\n- Use same UI design for local Library and NAS server.\n- RAR file now supports streaming reading too!\n- You can now open a folder as a mangabook on NAS server.\n- Press volume +, then volume - to open/hide private library.\n\nFixes\n- Improve book thumbnail loading speed.\n- Fix 401 error when connect to some WebDAV servers.\n- Fix keyboard shortcut not working in iOS 15 issue.\n\nBreak Change\n- Kedamanga now support iPad multitasking feature, you can use Kedamanga with other apps at the same time. But the cost is that you can't lock the screen orientation directly inside Kedamanga, you have to lock the device orientation by system menu.\n","source":"_posts/en/kedamanga-changelog.md","raw":"---\ntitle: \"Kedamanga Changelog\"\ndate: 2023-10-25 23:20:05\ntags:\n- Kedamanga\n---\n\n## Version 2.0.0:\nFeatures\n- Now you can sync comics between devices with \"iCloud Drive\"\n- Now you can sync reading histories, settings, bookmarks between devices with \"iCloud\"\n- Now you can customize cover for all comics\n- New \"Random mode\" feature can help you decide what comic book to read today :P\n\nFixes\n- Fix some gesture conflicts in the Reader\n\n## Version 1.7.2:\nFeatures\n- You can now long press empty area in Bookshelf to import files quickly\n\nFixes\n- Fix EPUB file infinite loop bug when nested inside another archive\n\n## Version 1.7.1:\nFeatures\n- Now you can turn off the「Downloads」folder in app setting, everything will save directly to the 「Library」\n\nFixes\n- Fix private mode function crash on iOS 16 bug\n- Fix clear reading history crash the app bug\n- Fix a crash bug when sharing files on iPad\n- Better support for EPUB files\n\n## Version 1.7.0:\nFeatures\n- Redesigned control panel for reader\n- You can now open PDF files with password protected\n- Now the app support flip pages automatically\n\nFixes\n- Fix a blurry bug when zoom in a large image\n- Fix a bug that cause the private mode not working when device is locked\n\n## Version 1.6.9:\nFixes\n- Fix a bug that cause cover display delayed few seconds.\n\n## Version 1.6.8:\nFeatures\n- Now you can double tap \"Tab bar icon\" and quickly go back to root view.\n- You can now select and delete multiple reading records at once.\n- Reading histories of「Download」folder will be showing Reading tab as well.\n\nFixes\n- Fix a bug that cause reading progress lost during screen rotation.\n- Fix a bug that cause reading history can't be delete.\n\n## Version 1.6.7:\nFeatures\n- New layout option for Bookshelf - Card mode.\n\nFixes\n- Fix scroll glitching in Bookshelf view\n- Improve scroll performance for Bookshelf view\n\n## Version 1.6.6:\nFeatures\n- Clear reading progress of a folder will clear all the reading history of it's nested items as well\n\nFixes\n- Fix a bug that cause status bar never hide after switch to next comic book\n\n## Version 1.6.5:\nFeatures\n- Add new \"Default view when open app\" option, you can now pick which view you want to see first after launch the app.\n- You can now pinch to resize book size inside \"Reading\" tab, just like in Library.\n\nFixes\n- Fix a bug that cause some reading progresses may not save properly.\n\n## Version 1.6.3:\nFeatures\n- Support connect to Aliyundrive.\n- Support RAR files with SFX module.\n- A faster cache cleanup implementation.\n- Support turning page by pageUp, pageDown key.\n\n## Version 1.6.2:\nFixes\n- Support solid rar files.\n- Support filename encrypted rar files.\n\n## Version 1.6.1:\nFeatures\n- You can now hide \"Reading\" tab, toggle it in setting.\n- You can now disable \"Double tap to zoom in\" gesture in reader setting.\n- Support reverse image order after split it.\n- WiFi server now supports private mode.\n- Support reading file in WebDAV server even if it doesn't support streaming reading.\n\nFixes\n- Handle back slash properly in RAR files.\n- Fix PDF file can't be open in WebDAV server issue.\n\n## Version 1.6.0:\nThis time I bring you a fresh bookshelf, fix tons of crashes, as well as adding lots of enhancements.\n\nFeatures\n- Fresh new bookshelf.\n- [Texture background] - makes you feel holding an real book.\n- You can now pull to close the reader.\n- New「Presets」setting to help you manage settings for multiple type of comics.\n\nFixes\n- New PDF rendering engine, no content loss anymore!\n- Improve memory usage, less crashing when openning big files.\n\n## Version 1.5.2:\nFeatures\n- Image that can't fit into the page will now be put inside a scroll view.\n\nFixes\n- Fix folder browser's back button missing issue in iOS 16.\n- Fix an issue that cause some azw3 files to render duplicated.\n- Fix an issue that cause pinch gesture freeze the app.\n\n## Version 1.5.1:\nFixes\n- Fix a bug that cause long comic image display in-position.\n\n## Version 1.5.0：\n\nI'm very sorry about taking so long yet just release a bug fix version, I'm still working on premier version.\n\nFor many reasons, I just can't done anything in the right time frame, always keep postpone schedules.\n\nThis year is definitely my toughest year so far, my dear father left me at a young age, 56. I still can't believe this just happened.\n\nAnyway, life can be so suck, but one must fight back.\n\nI will try to release regular bugfix versions before premier version is ready (let's try every 3 weeks first :)).\n\nIf you sent any feedback email and didn't get response from me, I owe you a sorry, I will start to respond some of feedback emails in next couple months.\n\nFixes\n- Fix a crash issue when you enable 'image enhancement' at iOS 16.\n- Fix a crash & white screen issue when open high resolution pictures, also improve the respond time when deal with high resolution pictures.\n- Fix an issue that cause Mobi file to render duplicated page after reading about 1000 pages.\n\n\n## Version 1.4.2\nFeatures\n- A fresh new 「Open last/next」 manga modal.\n- Now you can open last/next manga directly in progress slider.\n\nFixes\n- Fix a issue that cause the background music stopped when opening Kedamanga\n\n## Version 1.4.1\nFixes\n- Fix 301 error when connect to some WebDAV servers.\n- Fix keyboard shortcut not working in iOS 15 issue.\n\n## Version 1.4.0\nFeatures\n- Compatible with iPad mini6.\n- Now you can browse directory content directly.\n- Use same UI design for local Library and NAS server.\n- RAR file now supports streaming reading too!\n- You can now open a folder as a mangabook on NAS server.\n- Press volume +, then volume - to open/hide private library.\n\nFixes\n- Improve book thumbnail loading speed.\n- Fix 401 error when connect to some WebDAV servers.\n- Fix keyboard shortcut not working in iOS 15 issue.\n\nBreak Change\n- Kedamanga now support iPad multitasking feature, you can use Kedamanga with other apps at the same time. But the cost is that you can't lock the screen orientation directly inside Kedamanga, you have to lock the device orientation by system menu.\n","slug":"kedamanga-changelog","published":1,"lang":"en","updated":"2024-02-12T13:34:51.852Z","_id":"cl85wyglu0005haur2i83ab39","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Version-2-0-0\"><a href=\"#Version-2-0-0\" class=\"headerlink\" title=\"Version 2.0.0:\"></a>Version 2.0.0:</h2><p>Features</p>\n<ul>\n<li>Now you can sync comics between devices with “iCloud Drive”</li>\n<li>Now you can sync reading histories, settings, bookmarks between devices with “iCloud”</li>\n<li>Now you can customize cover for all comics</li>\n<li>New “Random mode” feature can help you decide what comic book to read today :P</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix some gesture conflicts in the Reader</li>\n</ul>\n<h2 id=\"Version-1-7-2\"><a href=\"#Version-1-7-2\" class=\"headerlink\" title=\"Version 1.7.2:\"></a>Version 1.7.2:</h2><p>Features</p>\n<ul>\n<li>You can now long press empty area in Bookshelf to import files quickly</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix EPUB file infinite loop bug when nested inside another archive</li>\n</ul>\n<h2 id=\"Version-1-7-1\"><a href=\"#Version-1-7-1\" class=\"headerlink\" title=\"Version 1.7.1:\"></a>Version 1.7.1:</h2><p>Features</p>\n<ul>\n<li>Now you can turn off the「Downloads」folder in app setting, everything will save directly to the 「Library」</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix private mode function crash on iOS 16 bug</li>\n<li>Fix clear reading history crash the app bug</li>\n<li>Fix a crash bug when sharing files on iPad</li>\n<li>Better support for EPUB files</li>\n</ul>\n<h2 id=\"Version-1-7-0\"><a href=\"#Version-1-7-0\" class=\"headerlink\" title=\"Version 1.7.0:\"></a>Version 1.7.0:</h2><p>Features</p>\n<ul>\n<li>Redesigned control panel for reader</li>\n<li>You can now open PDF files with password protected</li>\n<li>Now the app support flip pages automatically</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix a blurry bug when zoom in a large image</li>\n<li>Fix a bug that cause the private mode not working when device is locked</li>\n</ul>\n<h2 id=\"Version-1-6-9\"><a href=\"#Version-1-6-9\" class=\"headerlink\" title=\"Version 1.6.9:\"></a>Version 1.6.9:</h2><p>Fixes</p>\n<ul>\n<li>Fix a bug that cause cover display delayed few seconds.</li>\n</ul>\n<h2 id=\"Version-1-6-8\"><a href=\"#Version-1-6-8\" class=\"headerlink\" title=\"Version 1.6.8:\"></a>Version 1.6.8:</h2><p>Features</p>\n<ul>\n<li>Now you can double tap “Tab bar icon” and quickly go back to root view.</li>\n<li>You can now select and delete multiple reading records at once.</li>\n<li>Reading histories of「Download」folder will be showing Reading tab as well.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix a bug that cause reading progress lost during screen rotation.</li>\n<li>Fix a bug that cause reading history can’t be delete.</li>\n</ul>\n<h2 id=\"Version-1-6-7\"><a href=\"#Version-1-6-7\" class=\"headerlink\" title=\"Version 1.6.7:\"></a>Version 1.6.7:</h2><p>Features</p>\n<ul>\n<li>New layout option for Bookshelf - Card mode.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix scroll glitching in Bookshelf view</li>\n<li>Improve scroll performance for Bookshelf view</li>\n</ul>\n<h2 id=\"Version-1-6-6\"><a href=\"#Version-1-6-6\" class=\"headerlink\" title=\"Version 1.6.6:\"></a>Version 1.6.6:</h2><p>Features</p>\n<ul>\n<li>Clear reading progress of a folder will clear all the reading history of it’s nested items as well</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix a bug that cause status bar never hide after switch to next comic book</li>\n</ul>\n<h2 id=\"Version-1-6-5\"><a href=\"#Version-1-6-5\" class=\"headerlink\" title=\"Version 1.6.5:\"></a>Version 1.6.5:</h2><p>Features</p>\n<ul>\n<li>Add new “Default view when open app” option, you can now pick which view you want to see first after launch the app.</li>\n<li>You can now pinch to resize book size inside “Reading” tab, just like in Library.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix a bug that cause some reading progresses may not save properly.</li>\n</ul>\n<h2 id=\"Version-1-6-3\"><a href=\"#Version-1-6-3\" class=\"headerlink\" title=\"Version 1.6.3:\"></a>Version 1.6.3:</h2><p>Features</p>\n<ul>\n<li>Support connect to Aliyundrive.</li>\n<li>Support RAR files with SFX module.</li>\n<li>A faster cache cleanup implementation.</li>\n<li>Support turning page by pageUp, pageDown key.</li>\n</ul>\n<h2 id=\"Version-1-6-2\"><a href=\"#Version-1-6-2\" class=\"headerlink\" title=\"Version 1.6.2:\"></a>Version 1.6.2:</h2><p>Fixes</p>\n<ul>\n<li>Support solid rar files.</li>\n<li>Support filename encrypted rar files.</li>\n</ul>\n<h2 id=\"Version-1-6-1\"><a href=\"#Version-1-6-1\" class=\"headerlink\" title=\"Version 1.6.1:\"></a>Version 1.6.1:</h2><p>Features</p>\n<ul>\n<li>You can now hide “Reading” tab, toggle it in setting.</li>\n<li>You can now disable “Double tap to zoom in” gesture in reader setting.</li>\n<li>Support reverse image order after split it.</li>\n<li>WiFi server now supports private mode.</li>\n<li>Support reading file in WebDAV server even if it doesn’t support streaming reading.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Handle back slash properly in RAR files.</li>\n<li>Fix PDF file can’t be open in WebDAV server issue.</li>\n</ul>\n<h2 id=\"Version-1-6-0\"><a href=\"#Version-1-6-0\" class=\"headerlink\" title=\"Version 1.6.0:\"></a>Version 1.6.0:</h2><p>This time I bring you a fresh bookshelf, fix tons of crashes, as well as adding lots of enhancements.</p>\n<p>Features</p>\n<ul>\n<li>Fresh new bookshelf.</li>\n<li>[Texture background] - makes you feel holding an real book.</li>\n<li>You can now pull to close the reader.</li>\n<li>New「Presets」setting to help you manage settings for multiple type of comics.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>New PDF rendering engine, no content loss anymore!</li>\n<li>Improve memory usage, less crashing when openning big files.</li>\n</ul>\n<h2 id=\"Version-1-5-2\"><a href=\"#Version-1-5-2\" class=\"headerlink\" title=\"Version 1.5.2:\"></a>Version 1.5.2:</h2><p>Features</p>\n<ul>\n<li>Image that can’t fit into the page will now be put inside a scroll view.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix folder browser’s back button missing issue in iOS 16.</li>\n<li>Fix an issue that cause some azw3 files to render duplicated.</li>\n<li>Fix an issue that cause pinch gesture freeze the app.</li>\n</ul>\n<h2 id=\"Version-1-5-1\"><a href=\"#Version-1-5-1\" class=\"headerlink\" title=\"Version 1.5.1:\"></a>Version 1.5.1:</h2><p>Fixes</p>\n<ul>\n<li>Fix a bug that cause long comic image display in-position.</li>\n</ul>\n<h2 id=\"Version-1-5-0：\"><a href=\"#Version-1-5-0：\" class=\"headerlink\" title=\"Version 1.5.0：\"></a>Version 1.5.0：</h2><p>I’m very sorry about taking so long yet just release a bug fix version, I’m still working on premier version.</p>\n<p>For many reasons, I just can’t done anything in the right time frame, always keep postpone schedules.</p>\n<p>This year is definitely my toughest year so far, my dear father left me at a young age, 56. I still can’t believe this just happened.</p>\n<p>Anyway, life can be so suck, but one must fight back.</p>\n<p>I will try to release regular bugfix versions before premier version is ready (let’s try every 3 weeks first :)).</p>\n<p>If you sent any feedback email and didn’t get response from me, I owe you a sorry, I will start to respond some of feedback emails in next couple months.</p>\n<p>Fixes</p>\n<ul>\n<li>Fix a crash issue when you enable ‘image enhancement’ at iOS 16.</li>\n<li>Fix a crash &amp; white screen issue when open high resolution pictures, also improve the respond time when deal with high resolution pictures.</li>\n<li>Fix an issue that cause Mobi file to render duplicated page after reading about 1000 pages.</li>\n</ul>\n<h2 id=\"Version-1-4-2\"><a href=\"#Version-1-4-2\" class=\"headerlink\" title=\"Version 1.4.2\"></a>Version 1.4.2</h2><p>Features</p>\n<ul>\n<li>A fresh new 「Open last&#x2F;next」 manga modal.</li>\n<li>Now you can open last&#x2F;next manga directly in progress slider.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix a issue that cause the background music stopped when opening Kedamanga</li>\n</ul>\n<h2 id=\"Version-1-4-1\"><a href=\"#Version-1-4-1\" class=\"headerlink\" title=\"Version 1.4.1\"></a>Version 1.4.1</h2><p>Fixes</p>\n<ul>\n<li>Fix 301 error when connect to some WebDAV servers.</li>\n<li>Fix keyboard shortcut not working in iOS 15 issue.</li>\n</ul>\n<h2 id=\"Version-1-4-0\"><a href=\"#Version-1-4-0\" class=\"headerlink\" title=\"Version 1.4.0\"></a>Version 1.4.0</h2><p>Features</p>\n<ul>\n<li>Compatible with iPad mini6.</li>\n<li>Now you can browse directory content directly.</li>\n<li>Use same UI design for local Library and NAS server.</li>\n<li>RAR file now supports streaming reading too!</li>\n<li>You can now open a folder as a mangabook on NAS server.</li>\n<li>Press volume +, then volume - to open&#x2F;hide private library.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Improve book thumbnail loading speed.</li>\n<li>Fix 401 error when connect to some WebDAV servers.</li>\n<li>Fix keyboard shortcut not working in iOS 15 issue.</li>\n</ul>\n<p>Break Change</p>\n<ul>\n<li>Kedamanga now support iPad multitasking feature, you can use Kedamanga with other apps at the same time. But the cost is that you can’t lock the screen orientation directly inside Kedamanga, you have to lock the device orientation by system menu.</li>\n</ul>\n","site":{"data":{}},"_tags":[],"excerpt":"","more":"<h2 id=\"Version-2-0-0\"><a href=\"#Version-2-0-0\" class=\"headerlink\" title=\"Version 2.0.0:\"></a>Version 2.0.0:</h2><p>Features</p>\n<ul>\n<li>Now you can sync comics between devices with “iCloud Drive”</li>\n<li>Now you can sync reading histories, settings, bookmarks between devices with “iCloud”</li>\n<li>Now you can customize cover for all comics</li>\n<li>New “Random mode” feature can help you decide what comic book to read today :P</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix some gesture conflicts in the Reader</li>\n</ul>\n<h2 id=\"Version-1-7-2\"><a href=\"#Version-1-7-2\" class=\"headerlink\" title=\"Version 1.7.2:\"></a>Version 1.7.2:</h2><p>Features</p>\n<ul>\n<li>You can now long press empty area in Bookshelf to import files quickly</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix EPUB file infinite loop bug when nested inside another archive</li>\n</ul>\n<h2 id=\"Version-1-7-1\"><a href=\"#Version-1-7-1\" class=\"headerlink\" title=\"Version 1.7.1:\"></a>Version 1.7.1:</h2><p>Features</p>\n<ul>\n<li>Now you can turn off the「Downloads」folder in app setting, everything will save directly to the 「Library」</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix private mode function crash on iOS 16 bug</li>\n<li>Fix clear reading history crash the app bug</li>\n<li>Fix a crash bug when sharing files on iPad</li>\n<li>Better support for EPUB files</li>\n</ul>\n<h2 id=\"Version-1-7-0\"><a href=\"#Version-1-7-0\" class=\"headerlink\" title=\"Version 1.7.0:\"></a>Version 1.7.0:</h2><p>Features</p>\n<ul>\n<li>Redesigned control panel for reader</li>\n<li>You can now open PDF files with password protected</li>\n<li>Now the app support flip pages automatically</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix a blurry bug when zoom in a large image</li>\n<li>Fix a bug that cause the private mode not working when device is locked</li>\n</ul>\n<h2 id=\"Version-1-6-9\"><a href=\"#Version-1-6-9\" class=\"headerlink\" title=\"Version 1.6.9:\"></a>Version 1.6.9:</h2><p>Fixes</p>\n<ul>\n<li>Fix a bug that cause cover display delayed few seconds.</li>\n</ul>\n<h2 id=\"Version-1-6-8\"><a href=\"#Version-1-6-8\" class=\"headerlink\" title=\"Version 1.6.8:\"></a>Version 1.6.8:</h2><p>Features</p>\n<ul>\n<li>Now you can double tap “Tab bar icon” and quickly go back to root view.</li>\n<li>You can now select and delete multiple reading records at once.</li>\n<li>Reading histories of「Download」folder will be showing Reading tab as well.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix a bug that cause reading progress lost during screen rotation.</li>\n<li>Fix a bug that cause reading history can’t be delete.</li>\n</ul>\n<h2 id=\"Version-1-6-7\"><a href=\"#Version-1-6-7\" class=\"headerlink\" title=\"Version 1.6.7:\"></a>Version 1.6.7:</h2><p>Features</p>\n<ul>\n<li>New layout option for Bookshelf - Card mode.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix scroll glitching in Bookshelf view</li>\n<li>Improve scroll performance for Bookshelf view</li>\n</ul>\n<h2 id=\"Version-1-6-6\"><a href=\"#Version-1-6-6\" class=\"headerlink\" title=\"Version 1.6.6:\"></a>Version 1.6.6:</h2><p>Features</p>\n<ul>\n<li>Clear reading progress of a folder will clear all the reading history of it’s nested items as well</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix a bug that cause status bar never hide after switch to next comic book</li>\n</ul>\n<h2 id=\"Version-1-6-5\"><a href=\"#Version-1-6-5\" class=\"headerlink\" title=\"Version 1.6.5:\"></a>Version 1.6.5:</h2><p>Features</p>\n<ul>\n<li>Add new “Default view when open app” option, you can now pick which view you want to see first after launch the app.</li>\n<li>You can now pinch to resize book size inside “Reading” tab, just like in Library.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix a bug that cause some reading progresses may not save properly.</li>\n</ul>\n<h2 id=\"Version-1-6-3\"><a href=\"#Version-1-6-3\" class=\"headerlink\" title=\"Version 1.6.3:\"></a>Version 1.6.3:</h2><p>Features</p>\n<ul>\n<li>Support connect to Aliyundrive.</li>\n<li>Support RAR files with SFX module.</li>\n<li>A faster cache cleanup implementation.</li>\n<li>Support turning page by pageUp, pageDown key.</li>\n</ul>\n<h2 id=\"Version-1-6-2\"><a href=\"#Version-1-6-2\" class=\"headerlink\" title=\"Version 1.6.2:\"></a>Version 1.6.2:</h2><p>Fixes</p>\n<ul>\n<li>Support solid rar files.</li>\n<li>Support filename encrypted rar files.</li>\n</ul>\n<h2 id=\"Version-1-6-1\"><a href=\"#Version-1-6-1\" class=\"headerlink\" title=\"Version 1.6.1:\"></a>Version 1.6.1:</h2><p>Features</p>\n<ul>\n<li>You can now hide “Reading” tab, toggle it in setting.</li>\n<li>You can now disable “Double tap to zoom in” gesture in reader setting.</li>\n<li>Support reverse image order after split it.</li>\n<li>WiFi server now supports private mode.</li>\n<li>Support reading file in WebDAV server even if it doesn’t support streaming reading.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Handle back slash properly in RAR files.</li>\n<li>Fix PDF file can’t be open in WebDAV server issue.</li>\n</ul>\n<h2 id=\"Version-1-6-0\"><a href=\"#Version-1-6-0\" class=\"headerlink\" title=\"Version 1.6.0:\"></a>Version 1.6.0:</h2><p>This time I bring you a fresh bookshelf, fix tons of crashes, as well as adding lots of enhancements.</p>\n<p>Features</p>\n<ul>\n<li>Fresh new bookshelf.</li>\n<li>[Texture background] - makes you feel holding an real book.</li>\n<li>You can now pull to close the reader.</li>\n<li>New「Presets」setting to help you manage settings for multiple type of comics.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>New PDF rendering engine, no content loss anymore!</li>\n<li>Improve memory usage, less crashing when openning big files.</li>\n</ul>\n<h2 id=\"Version-1-5-2\"><a href=\"#Version-1-5-2\" class=\"headerlink\" title=\"Version 1.5.2:\"></a>Version 1.5.2:</h2><p>Features</p>\n<ul>\n<li>Image that can’t fit into the page will now be put inside a scroll view.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix folder browser’s back button missing issue in iOS 16.</li>\n<li>Fix an issue that cause some azw3 files to render duplicated.</li>\n<li>Fix an issue that cause pinch gesture freeze the app.</li>\n</ul>\n<h2 id=\"Version-1-5-1\"><a href=\"#Version-1-5-1\" class=\"headerlink\" title=\"Version 1.5.1:\"></a>Version 1.5.1:</h2><p>Fixes</p>\n<ul>\n<li>Fix a bug that cause long comic image display in-position.</li>\n</ul>\n<h2 id=\"Version-1-5-0：\"><a href=\"#Version-1-5-0：\" class=\"headerlink\" title=\"Version 1.5.0：\"></a>Version 1.5.0：</h2><p>I’m very sorry about taking so long yet just release a bug fix version, I’m still working on premier version.</p>\n<p>For many reasons, I just can’t done anything in the right time frame, always keep postpone schedules.</p>\n<p>This year is definitely my toughest year so far, my dear father left me at a young age, 56. I still can’t believe this just happened.</p>\n<p>Anyway, life can be so suck, but one must fight back.</p>\n<p>I will try to release regular bugfix versions before premier version is ready (let’s try every 3 weeks first :)).</p>\n<p>If you sent any feedback email and didn’t get response from me, I owe you a sorry, I will start to respond some of feedback emails in next couple months.</p>\n<p>Fixes</p>\n<ul>\n<li>Fix a crash issue when you enable ‘image enhancement’ at iOS 16.</li>\n<li>Fix a crash &amp; white screen issue when open high resolution pictures, also improve the respond time when deal with high resolution pictures.</li>\n<li>Fix an issue that cause Mobi file to render duplicated page after reading about 1000 pages.</li>\n</ul>\n<h2 id=\"Version-1-4-2\"><a href=\"#Version-1-4-2\" class=\"headerlink\" title=\"Version 1.4.2\"></a>Version 1.4.2</h2><p>Features</p>\n<ul>\n<li>A fresh new 「Open last&#x2F;next」 manga modal.</li>\n<li>Now you can open last&#x2F;next manga directly in progress slider.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Fix a issue that cause the background music stopped when opening Kedamanga</li>\n</ul>\n<h2 id=\"Version-1-4-1\"><a href=\"#Version-1-4-1\" class=\"headerlink\" title=\"Version 1.4.1\"></a>Version 1.4.1</h2><p>Fixes</p>\n<ul>\n<li>Fix 301 error when connect to some WebDAV servers.</li>\n<li>Fix keyboard shortcut not working in iOS 15 issue.</li>\n</ul>\n<h2 id=\"Version-1-4-0\"><a href=\"#Version-1-4-0\" class=\"headerlink\" title=\"Version 1.4.0\"></a>Version 1.4.0</h2><p>Features</p>\n<ul>\n<li>Compatible with iPad mini6.</li>\n<li>Now you can browse directory content directly.</li>\n<li>Use same UI design for local Library and NAS server.</li>\n<li>RAR file now supports streaming reading too!</li>\n<li>You can now open a folder as a mangabook on NAS server.</li>\n<li>Press volume +, then volume - to open&#x2F;hide private library.</li>\n</ul>\n<p>Fixes</p>\n<ul>\n<li>Improve book thumbnail loading speed.</li>\n<li>Fix 401 error when connect to some WebDAV servers.</li>\n<li>Fix keyboard shortcut not working in iOS 15 issue.</li>\n</ul>\n<p>Break Change</p>\n<ul>\n<li>Kedamanga now support iPad multitasking feature, you can use Kedamanga with other apps at the same time. But the cost is that you can’t lock the screen orientation directly inside Kedamanga, you have to lock the device orientation by system menu.</li>\n</ul>\n"},{"title":"KedaReader Support","date":"2024-02-10T16:00:00.000Z","_content":"\nThanks for downloading KedaReader, if you encounter any problem, feel free to contact me.\n\n# Support\nMy Email: xiaogdgenuine@gmail.com\nMy Wechat: a421654151","source":"_posts/en/kedamanga-support.md","raw":"---\ntitle: \"KedaReader Support\"\ndate: 2024-02-11 00:00:00\ntags:\n- Kedamanga, KedaReader\n---\n\nThanks for downloading KedaReader, if you encounter any problem, feel free to contact me.\n\n# Support\nMy Email: xiaogdgenuine@gmail.com\nMy Wechat: a421654151","slug":"kedamanga-support","published":1,"lang":"en","updated":"2024-02-11T09:06:53.867Z","_id":"clsha3t0v0000idx1b058cgwp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Thanks for downloading KedaReader, if you encounter any problem, feel free to contact me.</p>\n<h1 id=\"Support\"><a href=\"#Support\" class=\"headerlink\" title=\"Support\"></a>Support</h1><p>My Email: <a href=\"mailto:&#120;&#x69;&#x61;&#x6f;&#103;&#x64;&#x67;&#101;&#x6e;&#x75;&#x69;&#110;&#x65;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#120;&#x69;&#x61;&#x6f;&#103;&#x64;&#x67;&#101;&#x6e;&#x75;&#x69;&#110;&#x65;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;</a><br>My Wechat: a421654151</p>\n","site":{"data":{}},"_tags":[],"excerpt":"","more":"<p>Thanks for downloading KedaReader, if you encounter any problem, feel free to contact me.</p>\n<h1 id=\"Support\"><a href=\"#Support\" class=\"headerlink\" title=\"Support\"></a>Support</h1><p>My Email: <a href=\"mailto:&#120;&#x69;&#x61;&#x6f;&#103;&#x64;&#x67;&#101;&#x6e;&#x75;&#x69;&#110;&#x65;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;\">&#120;&#x69;&#x61;&#x6f;&#103;&#x64;&#x67;&#101;&#x6e;&#x75;&#x69;&#110;&#x65;&#64;&#x67;&#x6d;&#97;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;</a><br>My Wechat: a421654151</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl3gtogs200030xur1p41b69a","category_id":"cl3gtogs400070xur6zst1ori","_id":"cl3gtogs5000f0xur5o6780og"},{"post_id":"cl3gtogs200030xur1p41b69a","category_id":"cl3gtogs5000a0xurh16c4zkx","_id":"cl3gtogs5000g0xur2chsgs5z"},{"post_id":"cl3gtogs300050xurdkg31mom","category_id":"cl3gtogs5000a0xurh16c4zkx","_id":"cl3gtogs6000i0xur3cesai9j"},{"post_id":"cl3gtogs400060xurb8sq7n6l","category_id":"cl3gtogs5000a0xurh16c4zkx","_id":"cl3gtogs6000j0xurfyesc1e7"},{"post_id":"cl5fgih6f0000fc5t1ovo6fxm","category_id":"cl3gtogs5000a0xurh16c4zkx","_id":"cl5fgih6j0002fc5t1i9mat6j"},{"post_id":"cl5g0lb4b0000f4d41hoq16dd","category_id":"cl3gtogs5000a0xurh16c4zkx","_id":"cl5g0lb4e0004f4d4bmqaal26"}],"PostTag":[{"post_id":"cl3gtogs000010xur2axk66u1","tag_id":"cl3gtogs300040xur59v626as","_id":"cl3gtogs500090xur8oq8g3ro"},{"post_id":"cl3gtogs200030xur1p41b69a","tag_id":"cl3gtogs400080xuramea2jd5","_id":"cl3gtogs5000c0xur9zt525bz"},{"post_id":"cl3gtogs300050xurdkg31mom","tag_id":"cl3gtogs5000b0xur5grwggab","_id":"cl3gtogs6000l0xur3n7besy1"},{"post_id":"cl3gtogs300050xurdkg31mom","tag_id":"cl3gtogs5000e0xur1qjw5lcs","_id":"cl3gtogs6000m0xur381o799i"},{"post_id":"cl3gtogs300050xurdkg31mom","tag_id":"cl3gtogs6000h0xur5uqi12m3","_id":"cl3gtogs6000o0xurb4483okn"},{"post_id":"cl3gtogs400060xurb8sq7n6l","tag_id":"cl3gtogs5000b0xur5grwggab","_id":"cl3gtogs6000q0xur7vrw30xn"},{"post_id":"cl3gtogs400060xurb8sq7n6l","tag_id":"cl3gtogs5000e0xur1qjw5lcs","_id":"cl3gtogs6000r0xur3h9uesqe"},{"post_id":"cl3gtogs400060xurb8sq7n6l","tag_id":"cl3gtogs6000h0xur5uqi12m3","_id":"cl3gtogs6000s0xur6vdq0yjm"},{"post_id":"cl3i055r90000y0ur1ncr8swx","tag_id":"cl3i055re0001y0ur1uze1yp7","_id":"cl3i055rf0004y0ur6sh53w8g"},{"post_id":"cl3i055r90000y0ur1ncr8swx","tag_id":"cl3i055rf0002y0ur5rsbb661","_id":"cl3i055rf0005y0ur6f9f24ah"},{"post_id":"cl3i055r90000y0ur1ncr8swx","tag_id":"cl3i055rf0003y0urfeq8bwlc","_id":"cl3i055rf0006y0urbzhxdq94"},{"post_id":"cl5fgih6f0000fc5t1ovo6fxm","tag_id":"cl5fgih6i0001fc5t468f2jub","_id":"cl5fgih6j0005fc5t6i9p26yk"},{"post_id":"cl5fgih6f0000fc5t1ovo6fxm","tag_id":"cl5fgih6j0003fc5tczasfmyb","_id":"cl5fgih6j0006fc5td6pwd4d1"},{"post_id":"cl5fgih6f0000fc5t1ovo6fxm","tag_id":"cl3gtogs6000h0xur5uqi12m3","_id":"cl5fgih6j0007fc5t09jo5w2e"},{"post_id":"cl5fgih6f0000fc5t1ovo6fxm","tag_id":"cl5fgih6j0004fc5t9oa0bclm","_id":"cl5fgih6j0008fc5t8inmfofm"},{"post_id":"cl5g0lb4b0000f4d41hoq16dd","tag_id":"cl5fgih6i0001fc5t468f2jub","_id":"cl5g0lb4d0001f4d460hxfpau"},{"post_id":"cl5g0lb4b0000f4d41hoq16dd","tag_id":"cl5fgih6j0003fc5tczasfmyb","_id":"cl5g0lb4e0002f4d4e1p89i0d"},{"post_id":"cl5g0lb4b0000f4d41hoq16dd","tag_id":"cl3gtogs6000h0xur5uqi12m3","_id":"cl5g0lb4e0003f4d45x6nakpn"},{"post_id":"cl5g0lb4b0000f4d41hoq16dd","tag_id":"cl5fgih6j0004fc5t9oa0bclm","_id":"cl5g0lb4e0005f4d454ap8wnz"},{"post_id":"cl85wr0cj0000haur7ht65dbo","tag_id":"cl85wr0cm0001haurcai725g1","_id":"cl85wr0cn0003haurh9524vsb"},{"post_id":"cl85wr0cj0000haur7ht65dbo","tag_id":"cl85wr0cn0002haurggjg5kwk","_id":"cl85wr0cn0004haur1anc541z"},{"post_id":"cl85wyglu0005haur2i83ab39","tag_id":"cl85wr0cn0002haurggjg5kwk","_id":"cl85wyglx0007haur4h8whm1w"},{"post_id":"clsha3t0v0000idx1b058cgwp","tag_id":"clsha3t0z0001idx1bbt6c6hz","_id":"clsha3t110002idx17q8p5etw"}],"Tag":[{"name":"Flag","_id":"cl3gtogs300040xur59v626as"},{"name":"Life","_id":"cl3gtogs400080xuramea2jd5"},{"name":"Doll","_id":"cl3gtogs5000b0xur5grwggab"},{"name":"Menu bar","_id":"cl3gtogs5000e0xur1qjw5lcs"},{"name":"Productivity","_id":"cl3gtogs6000h0xur5uqi12m3"},{"name":"SwiftUI","_id":"cl3i055re0001y0ur1uze1yp7"},{"name":"Grid","_id":"cl3i055rf0002y0ur5rsbb661"},{"name":"Happy Hacky","_id":"cl3i055rf0003y0urfeq8bwlc"},{"name":"Bosswift","_id":"cl5fgih6i0001fc5t468f2jub"},{"name":"Command Launcher","_id":"cl5fgih6j0003fc5tczasfmyb"},{"name":"Git","_id":"cl5fgih6j0004fc5t9oa0bclm"},{"name":"可达漫画","_id":"cl85wr0cm0001haurcai725g1"},{"name":"Kedamanga","_id":"cl85wr0cn0002haurggjg5kwk"},{"name":"Kedamanga, KedaReader","_id":"clsha3t0z0001idx1bbt6c6hz"}]}}